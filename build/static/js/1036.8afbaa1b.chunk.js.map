{"version":3,"file":"static/js/1036.8afbaa1b.chunk.js","mappings":"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","sources":["../node_modules/lodash/omit.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_parent.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/@nivo/annotations/src/props.ts","../node_modules/@nivo/annotations/src/utils.ts","../node_modules/@nivo/annotations/src/compute.ts","../node_modules/@nivo/annotations/src/hooks.ts","../node_modules/@nivo/annotations/src/AnnotationNote.tsx","../node_modules/@nivo/annotations/src/AnnotationLink.tsx","../node_modules/@nivo/annotations/src/CircleAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/DotAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/RectAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/Annotation.tsx","../node_modules/@nivo/annotations/src/canvas.ts","../node_modules/d3-shape/src/stack.js","../node_modules/@nivo/bar/src/BarAnnotations.tsx","../node_modules/@nivo/bar/src/BarLegends.tsx","../node_modules/@nivo/bar/src/BarItem.tsx","../node_modules/@nivo/bar/src/defaults.ts","../node_modules/@nivo/bar/src/BarTooltip.tsx","../node_modules/@nivo/bar/src/renderBar.ts","../node_modules/@nivo/canvas/src/roundedRect.ts","../node_modules/@nivo/bar/src/compute/common.ts","../node_modules/@nivo/bar/src/compute/grouped.ts","../node_modules/@nivo/bar/src/compute/stacked.ts","../node_modules/@nivo/bar/src/compute/legends.ts","../node_modules/@nivo/bar/src/compute/totals.ts","../node_modules/@nivo/bar/src/hooks.ts","../node_modules/@nivo/bar/src/BarTotals.tsx","../node_modules/@nivo/bar/src/Bar.tsx","../node_modules/@nivo/bar/src/BarCanvas.tsx","../node_modules/@nivo/bar/src/ResponsiveBar.tsx","../node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/isSet.js","../node_modules/lodash/filter.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/isNumber.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_copySymbols.js"],"sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import filter from 'lodash/filter.js'\nimport isNumber from 'lodash/isNumber.js'\nimport omit from 'lodash/omit.js'\nimport {\n    radiansToDegrees,\n    normalizeAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    },\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return normalizeAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: readonly BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit.js'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { Theme } from '@nivo/theming'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: Theme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n        i, n = sz.length, j = -1,\n        oz;\n\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps, BarDatum } from './types'\n\nexport const BarAnnotations = <D extends BarDatum>({\n    bars,\n    annotations,\n}: BarAnnotationsProps<D>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Text } from '@nivo/text'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <D extends BarDatum>({\n    bar: { data, ...bar },\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n        textAnchor,\n    },\n    borderRadius,\n    borderWidth,\n    label,\n    shouldRenderLabel,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    ariaDisabled,\n    ariaHidden,\n}: BarItemProps<D>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                aria-disabled={ariaDisabled ? ariaDisabled(data) : undefined}\n                aria-hidden={ariaHidden ? ariaHidden(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n                data-testid={`bar.item.${data.id}.${data.index}`}\n            />\n            {shouldRenderLabel && (\n                <Text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor={textAnchor}\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        // We don't want the label to intercept mouse events\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </Text>\n            )}\n        </animated.g>\n    )\n}\n","import { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport {\n    BarCommonProps,\n    BarDatum,\n    ComputedDatum,\n    BarSvgPropsWithDefaults,\n    BarCanvasPropsWithDefaults,\n} from './types'\nimport { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { renderBar } from './renderBar'\n\nexport const commonDefaultProps: Omit<BarCommonProps<BarDatum>, 'data' | 'theme'> = {\n    indexBy: 'id',\n    keys: ['value'],\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    valueScale: { type: 'linear', nice: true, round: false },\n    indexScale: { type: 'band', round: false },\n    padding: 0.1,\n    innerPadding: 0,\n    enableGridX: false,\n    enableGridY: true,\n    enableLabel: true,\n    label: 'formattedValue',\n    labelPosition: 'middle' as const,\n    labelOffset: 0,\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { theme: 'labels.text.fill' },\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: (datum: ComputedDatum<BarDatum>) => `${datum.id} - ${datum.indexValue}`,\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    enableTotals: false,\n    totalsOffset: 10,\n}\n\nexport const svgDefaultProps: Omit<\n    BarSvgPropsWithDefaults<BarDatum>,\n    'data' | 'width' | 'height' | 'theme'\n> = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'markers', 'legends', 'annotations'],\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    barComponent: BarItem,\n    defs: [],\n    fill: [],\n    markers: [],\n    animate: true,\n    animateOnMount: false,\n    motionConfig: 'default',\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps: Omit<\n    BarCanvasPropsWithDefaults<BarDatum>,\n    'data' | 'width' | 'height' | 'theme'\n> = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'legends', 'annotations'],\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {},\n    axisLeft: {},\n    renderBar,\n    pixelRatio: typeof window !== 'undefined' ? (window.devicePixelRatio ?? 1) : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarTooltipProps } from './types'\n\nexport const BarTooltip = <D extends BarDatum>({ color, label, ...data }: BarTooltipProps<D>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { roundedRect } from '@nivo/canvas'\nimport { drawCanvasText } from '@nivo/text'\nimport { BarDatum, RenderBarProps } from './types'\n\nexport const renderBar = <D extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        bar: { color, height, width, x, y },\n        borderColor,\n        borderRadius,\n        borderWidth,\n        label,\n        shouldRenderLabel,\n        labelStyle,\n        labelX,\n        labelY,\n        textAnchor,\n    }: RenderBarProps<D>\n) => {\n    ctx.fillStyle = color\n    if (borderWidth > 0) {\n        ctx.strokeStyle = borderColor\n        ctx.lineWidth = borderWidth\n    }\n\n    ctx.beginPath()\n    roundedRect(ctx, x, y, width, height, Math.min(borderRadius, height))\n    ctx.fill()\n\n    if (borderWidth > 0) {\n        ctx.stroke()\n    }\n\n    if (shouldRenderLabel) {\n        ctx.textBaseline = 'middle'\n        ctx.textAlign = textAnchor === 'middle' ? 'center' : textAnchor\n        drawCanvasText(ctx, labelStyle, label, x + labelX, y + labelY)\n    }\n}\n","export const roundedRect = (\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    radius: number\n) => {\n    if (radius > 0) {\n        ctx.moveTo(x + radius, y)\n        ctx.lineTo(x + width - radius, y)\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n        ctx.lineTo(x + width, y + height - radius)\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n        ctx.lineTo(x + radius, y + height)\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n        ctx.lineTo(x, y + radius)\n        ctx.quadraticCurveTo(x, y, x + radius, y)\n        ctx.closePath()\n    } else {\n        ctx.rect(x, y, width, height)\n    }\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\nimport { commonDefaultProps } from '../defaults'\nimport { BarCommonProps, BarDatum } from '../types'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <D extends BarDatum>(\n    data: readonly D[],\n    getIndex: (datum: D) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <D extends BarDatum>(data: readonly D[], keys: readonly string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            }) as D\n    )\n\nexport const filterNullValues = <D extends BarDatum>(data: D) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<D, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n\nexport type BarLabelLayout = {\n    labelX: number\n    labelY: number\n    textAnchor: 'start' | 'middle' | 'end'\n}\n\n/**\n * Compute the label position and alignment based on a given position and offset.\n */\nexport function useComputeLabelLayout<D extends BarDatum>(\n    layout: BarCommonProps<D>['layout'] = commonDefaultProps.layout,\n    reverse: boolean,\n    labelPosition: BarCommonProps<D>['labelPosition'] = commonDefaultProps.labelPosition,\n    labelOffset: BarCommonProps<D>['labelOffset'] = commonDefaultProps.labelOffset\n): (width: number, height: number) => BarLabelLayout {\n    return (width: number, height: number) => {\n        // If the chart is reversed, we want to make sure the offset is also reversed\n        const computedLabelOffset = labelOffset * (reverse ? -1 : 1)\n\n        if (layout === 'horizontal') {\n            let x = width / 2\n            if (labelPosition === 'start') {\n                x = reverse ? width : 0\n            } else if (labelPosition === 'end') {\n                x = reverse ? 0 : width\n            }\n            return {\n                labelX: x + computedLabelOffset,\n                labelY: height / 2,\n                textAnchor: labelPosition === 'middle' ? 'middle' : reverse ? 'end' : 'start',\n            }\n        } else {\n            let y = height / 2\n            if (labelPosition === 'start') {\n                y = reverse ? 0 : height\n            } else if (labelPosition === 'end') {\n                y = reverse ? height : 0\n            }\n            return {\n                labelX: width / 2,\n                labelY: y - computedLabelOffset,\n                textAnchor: 'middle',\n            }\n        }\n    }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<D extends BarDatum, XScaleInput, YScaleInput> = {\n    data: readonly D[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<D>>\n    getIndex: (datum: D) => string\n    getTooltipLabel: (datum: ComputedDatum<D>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <D extends BarDatum>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<D>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? (yScale(d) ?? 0) : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<D>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<D> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <D extends BarDatum>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<D>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : (xScale(d) ?? 0))\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<D>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<D> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <D extends BarDatum>({\n    layout,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<D>>,\n    | 'data'\n    | 'height'\n    | 'valueScale'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'padding'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<D>>\n    getIndex: (datum: D) => string\n    getTooltipLabel: (datum: ComputedDatum<D>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const clampMin = valueScale.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        valueScale,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    // As we use extra inner padding between the bars, we need to adjust the bandwidth.\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<D, any, any>,\n        bandwidth,\n        valueScale.reverse ?? false,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<D>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<D extends BarDatum> = SeriesPoint<D>\n\ntype Params<D extends BarDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<D>>\n    getIndex: (datum: D) => string\n    getTooltipLabel: (datum: ComputedDatum<D>) => string\n    innerPadding: number\n    stackedData: Series<D, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <D extends BarDatum>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<D>[] => {\n    const getY = (d: StackDatum<D>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<D>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<D>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<D> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <D extends BarDatum>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<D, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<D>[] => {\n    const getX = (d: StackDatum<D>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<D>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<D>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<D> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'valueScale'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'padding'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        valueScale,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        valueScale.reverse ?? false,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport uniqBy from 'lodash/uniqBy.js'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n    reverse: boolean\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { AnyScale, ScaleBand } from '@nivo/scales'\nimport { commonDefaultProps } from '../defaults'\nimport { BarCommonProps, BarDatum, ComputedBarDatum } from '../types'\n\nexport interface BarTotalsData {\n    key: string\n    x: number\n    y: number\n    value: number\n    formattedValue: string\n    animationOffset: number\n}\n\nexport const computeBarTotals = <D extends BarDatum>(\n    bars: ComputedBarDatum<D>[],\n    xScale: ScaleBand<string> | AnyScale,\n    yScale: ScaleBand<string> | AnyScale,\n    layout: BarCommonProps<D>['layout'] = commonDefaultProps.layout,\n    groupMode: BarCommonProps<D>['groupMode'] = commonDefaultProps.groupMode,\n    totalsOffset: number,\n    formatValue: (value: number) => string\n) => {\n    const totals = [] as BarTotalsData[]\n\n    if (bars.length === 0) return totals\n\n    const totalsByIndex = new Map<string | number, number>()\n\n    const barWidth = bars[0].width\n    const barHeight = bars[0].height\n\n    if (groupMode === 'stacked') {\n        const totalsPositivesByIndex = new Map<string | number, number>()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateTotalsPositivesByIndex(totalsPositivesByIndex, indexValue, Number(value))\n        })\n\n        totalsPositivesByIndex.forEach((totalsPositive, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(totalsPositive)\n                animationOffset = yScale(totalsPositive / 2)\n            } else {\n                xPosition = xScale(totalsPositive)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(totalsPositive / 2)\n            }\n\n            xPosition += layout === 'vertical' ? barWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : barHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    } else if (groupMode === 'grouped') {\n        const greatestValueByIndex = new Map<string | number, number>()\n        const numberOfBarsByIndex = new Map()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateGreatestValueByIndex(greatestValueByIndex, indexValue, Number(value))\n            updateNumberOfBarsByIndex(numberOfBarsByIndex, indexValue)\n        })\n\n        greatestValueByIndex.forEach((greatestValue, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n            const numberOfBars = numberOfBarsByIndex.get(indexValue)\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(greatestValue)\n                animationOffset = yScale(greatestValue / 2)\n            } else {\n                xPosition = xScale(greatestValue)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(greatestValue / 2)\n            }\n\n            const indexBarsWidth = numberOfBars * barWidth\n            const indexBarsHeight = numberOfBars * barHeight\n\n            xPosition += layout === 'vertical' ? indexBarsWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : indexBarsHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    }\n    return totals\n}\n\n// this function is used to compute the total value for the indexes. The total value is later rendered on the chart\nexport const updateTotalsByIndex = (\n    totalsByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsByIndex.get(indexValue) || 0\n    totalsByIndex.set(indexValue, currentIndexValue + value)\n}\n\n// this function is used to compute only the positive values of the indexes. Useful to position the text right above the last stacked bar. It prevents overlapping in case of negative values\nexport const updateTotalsPositivesByIndex = (\n    totalsPositivesByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsPositivesByIndex.get(indexValue) || 0\n    totalsPositivesByIndex.set(indexValue, currentIndexValue + (value > 0 ? value : 0))\n}\n\n// this function is used to keep track of the highest value for the indexes. Useful to position the text above the longest grouped bar\nexport const updateGreatestValueByIndex = (\n    greatestValueByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentGreatestValue = greatestValueByIndex.get(indexValue) || 0\n    greatestValueByIndex.set(indexValue, Math.max(currentGreatestValue, Number(value)))\n}\n\n// this function is used to save the number of bars for the indexes. Useful to position the text in the middle of the grouped bars\nexport const updateNumberOfBarsByIndex = (\n    numberOfBarsByIndex: Map<string | number, number>,\n    indexValue: string | number\n) => {\n    const currentNumberOfBars = numberOfBarsByIndex.get(indexValue) || 0\n    numberOfBarsByIndex.set(indexValue, currentNumberOfBars + 1)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useValueFormatter, Margin } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { commonDefaultProps } from './defaults'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { computeBarTotals } from './compute/totals'\n\nexport const useBar = <D extends BarDatum>({\n    indexBy = commonDefaultProps.indexBy,\n    keys = commonDefaultProps.keys,\n    label = commonDefaultProps.label,\n    tooltipLabel = commonDefaultProps.tooltipLabel,\n    valueFormat,\n    colors = commonDefaultProps.colors,\n    colorBy = commonDefaultProps.colorBy,\n    borderColor = commonDefaultProps.borderColor,\n    labelTextColor = commonDefaultProps.labelTextColor,\n    groupMode = commonDefaultProps.groupMode,\n    layout = commonDefaultProps.layout,\n    data,\n    margin,\n    width,\n    height,\n    padding = commonDefaultProps.padding,\n    innerPadding = commonDefaultProps.innerPadding,\n    valueScale = commonDefaultProps.valueScale,\n    indexScale = commonDefaultProps.indexScale,\n    initialHiddenIds = commonDefaultProps.initialHiddenIds,\n    enableLabel = commonDefaultProps.enableLabel,\n    labelSkipWidth = commonDefaultProps.labelSkipWidth,\n    labelSkipHeight = commonDefaultProps.labelSkipHeight,\n    legends = commonDefaultProps.legends,\n    legendLabel,\n    totalsOffset = commonDefaultProps.totalsOffset,\n}: Partial<\n    Pick<\n        BarCommonProps<D>,\n        | 'indexBy'\n        | 'keys'\n        | 'label'\n        | 'tooltipLabel'\n        | 'valueFormat'\n        | 'colors'\n        | 'colorBy'\n        | 'borderColor'\n        | 'labelTextColor'\n        | 'groupMode'\n        | 'layout'\n        | 'padding'\n        | 'innerPadding'\n        | 'valueScale'\n        | 'indexScale'\n        | 'initialHiddenIds'\n        | 'enableLabel'\n        | 'labelSkipWidth'\n        | 'labelSkipHeight'\n        | 'legends'\n        | 'legendLabel'\n        | 'totalsOffset'\n    >\n> & {\n    width: number\n    height: number\n    margin: Margin\n    data: DataProps<D>['data']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<D>>(borderColor, theme)\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<D>>(labelTextColor, theme)\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        data,\n        getIndex,\n        keys,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter((bar): bar is ComputedBarDatumWithValue<D> => bar.data.value !== null)\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const reverse = valueScale.reverse ?? false\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    const barTotals = useMemo(\n        () => computeBarTotals(bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue),\n        [bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    }\n}\n","import { useTheme } from '@nivo/theming'\nimport { AnimationConfig, animated, useTransition } from '@react-spring/web'\nimport { BarCommonProps, BarDatum } from './types'\nimport { svgDefaultProps } from './defaults'\nimport { BarTotalsData } from './compute/totals'\n\ninterface Props<RawDatum extends BarDatum> {\n    data: BarTotalsData[]\n    springConfig: Partial<AnimationConfig>\n    animate: boolean\n    layout?: BarCommonProps<RawDatum>['layout']\n}\n\nexport const BarTotals = <RawDatum extends BarDatum>({\n    data,\n    springConfig,\n    animate,\n    layout = svgDefaultProps.layout,\n}: Props<RawDatum>) => {\n    const theme = useTheme()\n    const totalsTransition = useTransition<\n        BarTotalsData,\n        {\n            x: number\n            y: number\n            labelOpacity: number\n        }\n    >(data, {\n        keys: barTotal => barTotal.key,\n        from: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        enter: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        update: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        leave: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    return totalsTransition((style, barTotal) => (\n        <animated.text\n            key={barTotal.key}\n            x={style.x}\n            y={style.y}\n            fillOpacity={style.labelOpacity}\n            style={{\n                ...theme.labels.text,\n                pointerEvents: 'none',\n            }}\n            fontWeight=\"bold\"\n            fontSize={theme.labels.text.fontSize}\n            fontFamily={theme.labels.text.fontFamily}\n            textAnchor={layout === 'vertical' ? 'middle' : 'start'}\n            alignmentBaseline={layout === 'vertical' ? 'alphabetic' : 'middle'}\n        >\n            {barTotal.formattedValue}\n        </animated.text>\n    ))\n}\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { Axes, Grid } from '@nivo/axes'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-expect-error no types\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n    WithChartRef,\n} from '@nivo/core'\nimport { useTransition } from '@react-spring/web'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarLegends } from './BarLegends'\nimport { useBar } from './hooks'\nimport { svgDefaultProps } from './defaults'\nimport {\n    BarComponent,\n    BarCustomLayerProps,\n    BarDatum,\n    BarItemProps,\n    BarLayerId,\n    BarSvgProps,\n    BarTooltipComponent,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarTotals } from './BarTotals'\nimport { useComputeLabelLayout } from './compute/common'\n\ntype InnerBarProps<D extends BarDatum> = Omit<\n    BarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <D extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n    margin: partialMargin,\n    width,\n    height,\n    groupMode,\n    layout,\n    valueScale,\n    indexScale,\n    padding,\n    innerPadding,\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n    layers = svgDefaultProps.layers as BarLayerId[],\n    barComponent = svgDefaultProps.barComponent as unknown as BarComponent<D>,\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n    labelPosition = svgDefaultProps.labelPosition,\n    labelOffset = svgDefaultProps.labelOffset,\n    markers = svgDefaultProps.markers,\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    annotations = svgDefaultProps.annotations,\n    legendLabel,\n    tooltipLabel,\n    valueFormat,\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip as BarTooltipComponent<D>,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    legends,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n    barAriaHidden,\n    barAriaDisabled,\n    initialHiddenIds,\n    enableTotals = svgDefaultProps.enableTotals,\n    totalsOffset = svgDefaultProps.totalsOffset,\n    forwardedRef,\n}: InnerBarProps<D> & {\n    forwardedRef: Ref<SVGSVGElement>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n        getColor,\n    } = useBar<D>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        data,\n        keys,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n        totalsOffset,\n    })\n\n    const computeLabelLayout = useComputeLabelLayout(\n        layout,\n        valueScale?.reverse ?? false,\n        labelPosition,\n        labelOffset\n    )\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<D>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n            textAnchor: BarItemProps<D>['style']['textAnchor']\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            ...computeLabelLayout(bar.width, bar.height),\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      ...computeLabelLayout(bar.width, bar.height),\n                      labelX: 0,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n            ariaHidden: barAriaHidden,\n            ariaDisabled: barAriaDisabled,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n            barAriaHidden,\n            barAriaDisabled,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    if (layers.includes('totals') && enableTotals) {\n        layerById.totals = (\n            <BarTotals\n                key=\"totals\"\n                data={barTotals}\n                springConfig={springConfig}\n                animate={animate}\n                layout={layout}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<D> = {\n        ...commonProps,\n        margin,\n        width,\n        height,\n        innerWidth,\n        innerHeight,\n        bars,\n        legendData: legendsWithData,\n        enableLabel,\n        xScale,\n        yScale,\n        tooltip,\n        getTooltipLabel,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        getColor,\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = forwardRef(\n    <D extends BarDatum>(\n        {\n            isInteractive = svgDefaultProps.isInteractive,\n            animate = svgDefaultProps.animate,\n            motionConfig = svgDefaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...props\n        }: BarSvgProps<D>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            animate={animate}\n            isInteractive={isInteractive}\n            motionConfig={motionConfig}\n            renderWrapper={renderWrapper}\n            theme={theme}\n        >\n            <InnerBar<D> {...props} isInteractive={isInteractive} forwardedRef={ref} />\n        </Container>\n    )\n) as <D extends BarDatum>(props: WithChartRef<BarSvgProps<D>, SVGSVGElement>) => ReactElement\n","import {\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    ReactElement,\n    Ref,\n} from 'react'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useValueFormatter,\n    WithChartRef,\n    mergeRefs,\n} from '@nivo/core'\nimport { Theme, useTheme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { canvasDefaultProps } from './defaults'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarCanvasRenderer,\n    BarCommonProps,\n    BarDatum,\n    BarTooltipComponent,\n    ComputedBarDatum,\n} from './types'\nimport { useBar } from './hooks'\nimport { BarTotalsData } from './compute/totals'\nimport { useComputeLabelLayout } from './compute/common'\n\nconst findBarUnderCursor = <D extends BarDatum>(\n    nodes: ComputedBarDatum<D>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nfunction renderTotalsToCanvas<D extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    barTotals: BarTotalsData[],\n    theme: Theme,\n    layout: BarCommonProps<D>['layout'] = canvasDefaultProps.layout\n) {\n    setCanvasFont(ctx, theme.labels.text)\n    ctx.textBaseline = layout === 'vertical' ? 'alphabetic' : 'middle'\n    ctx.textAlign = layout === 'vertical' ? 'center' : 'start'\n\n    barTotals.forEach(barTotal => {\n        drawCanvasText(ctx, theme.labels.text, barTotal.formattedValue, barTotal.x, barTotal.y)\n    })\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    forwardedRef: Ref<HTMLCanvasElement>\n}\n\nconst InnerBarCanvas = <D extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n    margin: partialMargin,\n    width,\n    height,\n    groupMode,\n    layout,\n    valueScale,\n    indexScale,\n    padding,\n    innerPadding,\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n    labelPosition = canvasDefaultProps.labelPosition,\n    labelOffset = canvasDefaultProps.labelOffset,\n    layers = canvasDefaultProps.layers as BarCanvasLayer<D>[],\n    renderBar = canvasDefaultProps.renderBar as unknown as BarCanvasRenderer<D>,\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n    annotations = canvasDefaultProps.annotations,\n    legendLabel,\n    tooltipLabel,\n    valueFormat,\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip as BarTooltipComponent<D>,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    legends,\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    role,\n    forwardedRef,\n    enableTotals = canvasDefaultProps.enableTotals,\n    totalsOffset = canvasDefaultProps.totalsOffset,\n}: InnerBarCanvasProps<D>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n        barTotals,\n        getColor,\n    } = useBar<D>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        data,\n        keys,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        totalsOffset,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<D> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        ]\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n    const computeLabelLayout = useComputeLabelLayout(\n        layout,\n        valueScale?.reverse ?? false,\n        labelPosition,\n        labelOffset\n    )\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                setCanvasFont(ctx, theme.text)\n\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        labelStyle: {\n                            ...theme.labels.text,\n                            fill: getLabelColor(bar) as string,\n                        },\n                        ...computeLabelLayout(bar.width, bar.height),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (layer === 'totals' && enableTotals) {\n                renderTotalsToCanvas(ctx, barTotals, theme, layout)\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        shouldRenderBarLabel,\n        theme,\n        width,\n        barTotals,\n        enableTotals,\n        formatValue,\n        computeLabelLayout,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={mergeRefs(canvasEl, forwardedRef)}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <Container\n            isInteractive={isInteractive}\n            renderWrapper={renderWrapper}\n            theme={theme}\n            animate={false}\n        >\n            <InnerBarCanvas<RawDatum> {...props} isInteractive={isInteractive} forwardedRef={ref} />\n        </Container>\n    )\n) as <RawDatum extends BarDatum>(\n    props: WithChartRef<BarCanvasProps<RawDatum>, HTMLCanvasElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Bar } from './Bar'\nimport { BarDatum, ResponsiveBarSvgProps } from './types'\n\nexport const ResponsiveBar = forwardRef(\n    <D extends BarDatum>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: Omit<ResponsiveBarSvgProps<D>, 'ref'>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }) => <Bar<D> {...props} width={width} height={height} ref={ref} />}\n        </ResponsiveWrapper>\n    )\n) as <D extends BarDatum>(props: ResponsiveBarSvgProps<D>) => ReactElement\n","import { ForwardedRef, forwardRef, ReactElement } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { BarDatum, ResponsiveBarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\n\nexport const ResponsiveBarCanvas = forwardRef(\n    <D extends BarDatum>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: Omit<ResponsiveBarCanvasProps<D>, 'ref'>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }) => (\n                <BarCanvas<D> {...props} width={width} height={height} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <D extends BarDatum>(props: ResponsiveBarCanvasProps<D>) => ReactElement\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n"],"names":["arrayMap","require","baseClone","baseUnset","castPath","copyObject","customOmitClone","flatRest","getAllKeysIn","omit","object","paths","result","isDeep","path","length","CLONE_DEEP_FLAG","module","exports","getTag","isObjectLike","value","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","Symbol","symbolProto","prototype","undefined","symbolValueOf","valueOf","symbol","Object","call","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","tag","Ctor","reFlags","regexp","source","exec","lastIndex","baseGet","baseSlice","getSymbolsIn","k","b","t","type","w","z","S","n","i","o","x","a","y","r","noteX","s","noteY","h","noteWidth","d","c","noteTextOffset","f","e","abs","Error","m","Math","atan2","C","p","l","u","size","g","round","height","width","W","v","points","text","angle","O","data","annotations","getPosition","getDimensions","reduce","offset","concat","match","map","datum","P","j","computed","T","note","animate","config","immediate","children","outlineWidth","style","strokeLinejoin","strokeWidth","stroke","outlineColor","E","isOutline","slice","link","strokeLinecap","opacity","outlineOpacity","fill","I","radius","outline","circle","cx","cy","D","L","borderRadius","rect","rx","ry","R","M","q","forEach","moveTo","lineTo","J","theme","save","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","stackValue","key","stackSeries","series","Z","$","bars","B","max","V","Q","ee","legends","toggleSerie","containerWidth","containerHeight","dataFrom","te","ie","le","indexBy","keys","groupMode","layout","valueScale","nice","indexScale","padding","innerPadding","enableGridX","enableGridY","enableLabel","label","labelPosition","labelOffset","labelSkipWidth","labelSkipHeight","labelTextColor","colorBy","colors","scheme","borderWidth","borderColor","from","isInteractive","tooltip","color","U","X","id","formattedValue","enableChip","tooltipLabel","indexValue","initialHiddenIds","enableTotals","totalsOffset","re","layers","axisTop","axisRight","axisBottom","axisLeft","barComponent","bar","labelColor","labelOpacity","labelX","labelY","transform","textAnchor","shouldRenderLabel","onClick","onMouseEnter","onMouseLeave","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","ariaDisabled","F","ariaHidden","A","G","showTooltipFromEvent","N","showTooltipAt","hideTooltip","K","_","absX","absY","H","focusable","tabIndex","onMouseMove","onFocus","onBlur","index","Y","dominantBaseline","fillOpacity","labels","pointerEvents","defs","markers","animateOnMount","motionConfig","role","oe","renderBar","labelStyle","quadraticCurveTo","closePath","min","pixelRatio","window","devicePixelRatio","de","all","ue","se","ce","Number","he","fe","be","ge","ve","Array","repeat","me","pe","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","domain","hidden","push","left","top","ye","xe","hiddenIds","filter","includes","Boolean","apply","isFinite","bandwidth","reverse","Se","ke","some","isArray","we","stackedData","Le","Ce","constant","order","orderNone","offsetNone","stack","oz","sz","this","arguments","array","We","direction","legendLabel","Me","get","set","Ie","valueFormat","ae","ne","indexOf","find","Ve","Map","Be","animationOffset","Re","Oe","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","barTotals","springConfig","enter","update","leave","initial","fontWeight","alignmentBaseline","Te","He","gridXValues","gridYValues","Pe","Ee","Fe","ze","De","Ae","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","Ge","barAriaHidden","Ne","barAriaDisabled","je","Ke","_e","qe","Je","Qe","forwardedRef","Ue","Ze","$e","et","tt","outerWidth","at","outerHeight","it","nt","innerWidth","lt","innerHeight","rt","ot","dt","ut","st","ct","ht","ft","bt","gt","vt","mt","pt","yt","xt","St","kt","wt","dataKey","targetKey","Lt","axes","grid","totals","right","bottom","xValues","yValues","Ct","legendData","ref","renderWrapper","current","getContext","scale","background","fillRect","translate","line","axis","values","cursor","defaultWidth","defaultHeight","onResize","debounceResize","hasOwnProperty","input","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","arrayFilter","baseFilter","baseIteratee","collection","predicate","keysIn","arrayPush","getPrototype","getSymbols","stubArray","getOwnPropertySymbols","baseIsMap","nodeIsMap","isMap","baseGetAllKeys","baseGetTag","iteratee","baseEach","last","parent","toKey","isPlainObject","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isObject","argsTag","funcTag","objectTag","cloneableTags","bitmask","customizer","isFlat","isFull","isArr","isFunc","stacked","subValue","add","props"],"sourceRoot":""}