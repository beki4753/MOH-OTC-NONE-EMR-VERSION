{"version":3,"file":"static/js/4383.8225f2dc.chunk.js","mappings":"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","sources":["theme.js","pages/reports/CollectedReport.jsx"],"sourcesContent":["import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\n// color design tokens export\r\nexport const tokens = (mode) => ({\r\n  ...(mode === \"dark\"\r\n    ? {\r\n        grey: {\r\n          100: \"#e0e0e0\",\r\n          200: \"#c2c2c2\",\r\n          300: \"#a3a3a3\",\r\n          400: \"#858585\",\r\n          500: \"#666666\",\r\n          600: \"#525252\",\r\n          700: \"#3d3d3d\",\r\n          800: \"#292929\",\r\n          900: \"#141414\",\r\n        },\r\n        primary: {\r\n          100: \"#d0d1d5\",\r\n          200: \"#a1a4ab\",\r\n          300: \"#727681\",\r\n          400: \"#1F2A40\",\r\n          500: \"#141b2d\",\r\n          600: \"#101624\",\r\n          700: \"#0c101b\",\r\n          800: \"#080b12\",\r\n          900: \"#040509\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#dbf5ee\",\r\n          200: \"#b7ebde\",\r\n          300: \"#94e2cd\",\r\n          400: \"#70d8bd\",\r\n          500: \"#4cceac\",\r\n          600: \"#3da58a\",\r\n          700: \"#2e7c67\",\r\n          800: \"#1e5245\",\r\n          900: \"#0f2922\",\r\n        },\r\n        redAccent: {\r\n          100: \"#f8dcdb\",\r\n          200: \"#f1b9b7\",\r\n          300: \"#e99592\",\r\n          400: \"#e2726e\",\r\n          500: \"#db4f4a\",\r\n          600: \"#af3f3b\",\r\n          700: \"#832f2c\",\r\n          800: \"#58201e\",\r\n          900: \"#2c100f\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#e1e2fe\",\r\n          200: \"#c3c6fd\",\r\n          300: \"#a4a9fc\",\r\n          400: \"#868dfb\",\r\n          500: \"#6870fa\",\r\n          600: \"#535ac8\",\r\n          700: \"#3e4396\",\r\n          800: \"#2a2d64\",\r\n          900: \"#151632\",\r\n        },\r\n      }\r\n    : {\r\n        grey: {\r\n          100: \"#141414\",\r\n          200: \"#292929\",\r\n          300: \"#3d3d3d\",\r\n          400: \"#525252\",\r\n          500: \"#666666\",\r\n          600: \"#858585\",\r\n          700: \"#a3a3a3\",\r\n          800: \"#c2c2c2\",\r\n          900: \"#e0e0e0\",\r\n        },\r\n        primary: {\r\n          100: \"#040509\",\r\n          200: \"#080b12\",\r\n          300: \"#0c101b\",\r\n          400: \"#f2f0f0\", // manually changed\r\n          500: \"#141b2d\",\r\n          600: \"#1F2A40\",\r\n          700: \"#727681\",\r\n          800: \"#a1a4ab\",\r\n          900: \"#d0d1d5\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#0f2922\",\r\n          200: \"#1e5245\",\r\n          300: \"#2e7c67\",\r\n          400: \"#3da58a\",\r\n          500: \"#4cceac\",\r\n          600: \"#70d8bd\",\r\n          700: \"#94e2cd\",\r\n          800: \"#b7ebde\",\r\n          900: \"#dbf5ee\",\r\n        },\r\n        redAccent: {\r\n          100: \"#2c100f\",\r\n          200: \"#58201e\",\r\n          300: \"#832f2c\",\r\n          400: \"#af3f3b\",\r\n          500: \"#db4f4a\",\r\n          600: \"#e2726e\",\r\n          700: \"#e99592\",\r\n          800: \"#f1b9b7\",\r\n          900: \"#f8dcdb\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#151632\",\r\n          200: \"#2a2d64\",\r\n          300: \"#3e4396\",\r\n          400: \"#535ac8\",\r\n          500: \"#6870fa\",\r\n          600: \"#868dfb\",\r\n          700: \"#a4a9fc\",\r\n          800: \"#c3c6fd\",\r\n          900: \"#e1e2fe\",\r\n        },\r\n      }),\r\n});\r\n\r\n// mui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: {\r\n      mode: mode,\r\n      ...(mode === \"dark\"\r\n        ? {\r\n            // palette values for dark mode\r\n            primary: {\r\n              main: colors.primary[500],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: colors.primary[500],\r\n            },\r\n          }\r\n        : {\r\n            // palette values for light mode\r\n            primary: {\r\n              main: colors.primary[100],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: \"#fcfcfc\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n      fontSize: 12,\r\n      h1: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 40,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 32,\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 24,\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 20,\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 16,\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Box,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport * as XLSX from \"xlsx\";\r\nimport api from \"../../utils/api\";\r\nimport { getTokenValue } from \"../../services/user_service\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { formatAccounting2 } from \"../hospitalpayment/HospitalPayment\";\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\nimport { EthDateTime } from \"ethiopian-calendar-date-converter\";\r\nimport { renderETDateAtCell } from \"../../components/PatientSearch\";\r\nimport { tokens } from \"../../theme\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nexport function convertToEthDateWithTime(isoDateStr) {\r\n  try {\r\n    if (!isoDateStr) return \"\";\r\n    //GMT+0300 (East Africa Time)\r\n    const europeanDate = new Date(\r\n      isoDateStr.replace(\"T\", \" \") + \" GMT+0300 (East Africa Time)\"\r\n    );\r\n    const ethDateTime = EthDateTime.fromEuropeanDate(europeanDate);\r\n    return ethDateTime.toFullDateTimeString();\r\n  } catch (error) {\r\n    console.error(\"Ethiopian DateTime Conversion Error:\", error);\r\n    return \"Invalid Ethiopian Date\";\r\n  }\r\n}\r\nconst CollectedReport = () => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [showOnlyHighAmount, setShowOnlyHighAmount] = useState(false);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const fetchReportData = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      const response = await api.put(\"/Collection/Get-all-Collection\", {\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        user: tokenvalue?.name,\r\n        isCollected: 0,\r\n      });\r\n      if (response?.data.length <= 0) {\r\n        toast.info(\"Report not found!\");\r\n        return;\r\n      }\r\n      const data =\r\n        response?.data.length > 0\r\n          ? response?.data?.map(({ collectionId, ...rest }) => ({\r\n              id: collectionId,\r\n              ...rest,\r\n            })) || []\r\n          : [];\r\n      setData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching report data:\", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server Error!\");\r\n    }\r\n  };\r\n\r\n  const filterData = () => {\r\n    try {\r\n      if (data.length > 0) {\r\n        const filteredData = data?.filter((item) => {\r\n          if (\r\n            showOnlyHighAmount &&\r\n            item.collectedAmount <\r\n              Math.max(...data?.map((item) => item?.collectedAmount))\r\n          )\r\n            return false;\r\n          return true;\r\n        });\r\n        setFilteredData(filteredData);\r\n      } else {\r\n        toast.info(\"There is No High Amount!\");\r\n        setFilteredData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const dateObj = {\r\n    sdate: setStartDate,\r\n    edate: setEndDate,\r\n  };\r\n\r\n  const handleChangeTime = (fieldName, selectedDate) => {\r\n    try {\r\n      const jsDate =\r\n        selectedDate instanceof Date ? selectedDate : new Date(selectedDate);\r\n\r\n      if (isNaN(jsDate.getTime())) {\r\n        console.error(\r\n          \"Invalid date provided to handleChangeTime:\",\r\n          selectedDate\r\n        );\r\n        toast.error(\"Invalid date selected.\");\r\n        return;\r\n      }\r\n\r\n      // Adjust for local timezone\r\n      const tzOffsetMinutes = jsDate.getTimezoneOffset();\r\n      const localTime = new Date(jsDate.getTime() - tzOffsetMinutes * 60000);\r\n      const formattedDate = localTime.toISOString().split(\"T\")[0];\r\n\r\n      dateObj[fieldName](formattedDate);\r\n    } catch (error) {\r\n      console.error(\"Date Picker Change Error:\", error);\r\n      toast.error(\"Unable to select the date properly.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showOnlyHighAmount) {\r\n      filterData();\r\n    }\r\n  }, [showOnlyHighAmount]);\r\n\r\n  const exportToExcel = () => {\r\n    try {\r\n      const modData = filteredData.length > 0 ? filteredData : data;\r\n      const reportData = modData?.map(\r\n        ({\r\n          collectedOn,\r\n          createdOn,\r\n          createdBy,\r\n          id,\r\n          collectedBy,\r\n          collecterID,\r\n          toDate,\r\n          fromDate,\r\n          collectedAmount,\r\n          casher,\r\n        }) => ({\r\n          fromDate: renderETDateAtCell(fromDate),\r\n          toDate: renderETDateAtCell(toDate),\r\n          collectedOn: convertToEthDateWithTime(collectedOn),\r\n          collectedBy,\r\n          collecterID,\r\n          collectedAmount,\r\n          casher,\r\n          createdOn,\r\n          createdBy,\r\n        })\r\n      );\r\n      const ws = XLSX.utils.json_to_sheet(reportData);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(\r\n        wb,\r\n        ws,\r\n        `Collection Report of ${tokenvalue?.name}`\r\n      );\r\n      XLSX.writeFile(\r\n        wb,\r\n        `Collection_Report from ${startDate} to ${endDate}.xlsx`\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mx: \"auto\",\r\n        p: { xs: 2, sm: 3 },\r\n        mt: 4,\r\n        borderRadius: 2,\r\n        //backgroundColor: \"#f9f9f9\",\r\n        boxShadow: 3,\r\n        marginInline: \"15px\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Collection Report\r\n      </Typography>\r\n      <form onSubmit={fetchReportData}>\r\n        <Paper\r\n          sx={{\r\n            padding: 2,\r\n            marginBottom: 2,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <EtDatePicker\r\n            label=\"Start Date\"\r\n            value={startDate.length > 0 ? new Date(startDate) : null}\r\n            onChange={(e) => {\r\n              // setStartDate(e);\r\n              handleChangeTime(\"sdate\", e);\r\n              setShowOnlyHighAmount(false);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n            required\r\n          />\r\n\r\n          <EtDatePicker\r\n            label=\"End Date\"\r\n            value={endDate?.length > 0 ? new Date(endDate) : null}\r\n            onChange={(e) => {\r\n              // setEndDate(e);\r\n              handleChangeTime(\"edate\", e);\r\n              setShowOnlyHighAmount(false);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n            required\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={showOnlyHighAmount}\r\n                onChange={(e) => setShowOnlyHighAmount(e.target.checked)}\r\n              />\r\n            }\r\n            label=\"Show High Amount\"\r\n          />\r\n          <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n            Request Report\r\n          </Button>\r\n        </Paper>\r\n      </form>\r\n      <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n          textAlign: \"right\",\r\n          mb: 1,\r\n          fontWeight: \"bold\",\r\n          color: colors.greenAccent[500],\r\n        }}\r\n      >\r\n        Total Collected:{\" \"}\r\n        {formatAccounting2(\r\n          (showOnlyHighAmount ? filteredData : data).reduce(\r\n            (sum, item) => sum + (item.collectedAmount || 0),\r\n            0\r\n          )\r\n        )}\r\n      </Typography>\r\n\r\n      <Paper sx={{ height: 400, marginBottom: 2 }}>\r\n        <DataGrid\r\n          rows={showOnlyHighAmount ? filteredData : data}\r\n          columns={[\r\n            { field: \"id\", headerName: \"ID\", width: 40 },\r\n            {\r\n              field: \"fromDate\",\r\n              headerName: \"Start Date\",\r\n              width: 150,\r\n              renderCell: (params) => {\r\n                return renderETDateAtCell(params?.row?.fromDate);\r\n              },\r\n            },\r\n            {\r\n              field: \"toDate\",\r\n              headerName: \"End Date\",\r\n              width: 140,\r\n              renderCell: (params) => {\r\n                return renderETDateAtCell(params?.row?.toDate);\r\n              },\r\n            },\r\n            {\r\n              field: \"collectedAmount\",\r\n              headerName: \"Amount\",\r\n              width: 130,\r\n              renderCell: (params) =>\r\n                formatAccounting2(params.row.collectedAmount),\r\n            },\r\n            { field: \"collectedBy\", headerName: \"Collector\", width: 200 },\r\n            { field: \"casher\", headerName: \"Cashier\", width: 200 },\r\n            {\r\n              field: \"collectedOn\",\r\n              headerName: \"Collected Date\",\r\n              width: 170,\r\n              renderCell: (params) => {\r\n                return convertToEthDateWithTime(params?.row?.collectedOn);\r\n              },\r\n            },\r\n          ]}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        sx={{\r\n          color: (theme) =>\r\n            theme.palette.getContrastText(theme.palette.primary.main),\r\n          backgroundColor: (theme) => theme.palette.secondary.main,\r\n          \"&:hover\": {\r\n            backgroundColor: (theme) => theme.palette.primary.dark,\r\n          },\r\n        }}\r\n        onClick={() => exportToExcel()}\r\n      >\r\n        Export to Excel\r\n      </Button>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CollectedReport;\r\n"],"names":["tokens","mode","_objectSpread","grey","primary","greenAccent","redAccent","blueAccent","ColorModeContext","createContext","toggleColorMode","useMode","setMode","useState","colorMode","useMemo","prev","createTheme","colors","palette","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","themeSettings","tokenvalue","getTokenValue","convertToEthDateWithTime","isoDateStr","europeanDate","Date","replace","EthDateTime","fromEuropeanDate","toFullDateTimeString","error","console","CollectedReport","startDate","setStartDate","endDate","setEndDate","showOnlyHighAmount","setShowOnlyHighAmount","filteredData","setFilteredData","data","setData","theme","useTheme","dateObj","sdate","edate","handleChangeTime","fieldName","selectedDate","jsDate","isNaN","getTime","toast","tzOffsetMinutes","getTimezoneOffset","formattedDate","toISOString","split","useEffect","filterData","length","filter","item","collectedAmount","Math","max","map","info","_jsxs","Box","sx","mx","p","xs","sm","mt","borderRadius","boxShadow","marginInline","children","_jsx","Typography","variant","gutterBottom","onSubmit","async","_response$data","e","preventDefault","response","api","put","user","name","isCollected","_ref","collectionId","rest","_objectWithoutProperties","_excluded","id","_error$response","_error$response$data","msg","Paper","padding","marginBottom","display","alignItems","gap","EtDatePicker","label","value","onChange","InputLabelProps","shrink","required","FormControlLabel","control","Checkbox","checked","target","Button","color","type","textAlign","mb","fontWeight","formatAccounting2","reduce","sum","height","DataGrid","rows","columns","field","headerName","width","renderCell","params","_params$row","renderETDateAtCell","row","fromDate","_params$row2","toDate","_params$row3","collectedOn","autoHeight","minWidth","getContrastText","backgroundColor","onClick","exportToExcel","modData","reportData","_ref2","createdOn","createdBy","collectedBy","collecterID","casher","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","concat","ToastContainer"],"sourceRoot":""}