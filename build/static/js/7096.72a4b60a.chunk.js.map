{"version":3,"file":"static/js/7096.72a4b60a.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Drawer/Drawer.js","../node_modules/@mui/icons-material/MedicationOutlined.js","components/DoctorPrescription.jsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/PersonOutline.js","../node_modules/@mui/icons-material/InfoOutlined.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/Drawer/drawerClasses.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"BackdropProps\", \"children\", \"className\", \"elevation\", \"hideBackdrop\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport Modal from '../Modal';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getDrawerUtilityClass } from './drawerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, (ownerState.variant === 'permanent' || ownerState.variant === 'persistent') && styles.docked, styles.modal];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchor,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    docked: [(variant === 'permanent' || variant === 'persistent') && 'docked'],\n    modal: ['modal'],\n    paper: ['paper', `paperAnchor${capitalize(anchor)}`, variant !== 'temporary' && `paperAnchorDocked${capitalize(anchor)}`]\n  };\n  return composeClasses(slots, getDrawerUtilityClass, classes);\n};\nconst DrawerRoot = styled(Modal, {\n  name: 'MuiDrawer',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.drawer\n}));\nconst DrawerDockedRoot = styled('div', {\n  shouldForwardProp: rootShouldForwardProp,\n  name: 'MuiDrawer',\n  slot: 'Docked',\n  skipVariantsResolver: false,\n  overridesResolver\n})({\n  flex: '0 0 auto'\n});\nconst DrawerPaper = styled(Paper, {\n  name: 'MuiDrawer',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`paperAnchor${capitalize(ownerState.anchor)}`], ownerState.variant !== 'temporary' && styles[`paperAnchorDocked${capitalize(ownerState.anchor)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: '1 0 auto',\n  zIndex: (theme.vars || theme).zIndex.drawer,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  // temporary style\n  position: 'fixed',\n  top: 0,\n  // We disable the focus ring for mouse, touch and keyboard users.\n  // At some point, it would be better to keep it for keyboard users.\n  // :focus-ring CSS pseudo-class will help.\n  outline: 0\n}, ownerState.anchor === 'left' && {\n  left: 0\n}, ownerState.anchor === 'top' && {\n  top: 0,\n  left: 0,\n  right: 0,\n  height: 'auto',\n  maxHeight: '100%'\n}, ownerState.anchor === 'right' && {\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: 'auto',\n  maxHeight: '100%'\n}, ownerState.anchor === 'left' && ownerState.variant !== 'temporary' && {\n  borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === 'top' && ownerState.variant !== 'temporary' && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === 'right' && ownerState.variant !== 'temporary' && {\n  borderLeft: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === 'bottom' && ownerState.variant !== 'temporary' && {\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`\n}));\nconst oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor({\n  direction\n}, anchor) {\n  return direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\n\n/**\n * The props of the [Modal](/material-ui/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\nconst Drawer = /*#__PURE__*/React.forwardRef(function Drawer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDrawer'\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor: anchorProp = 'left',\n      BackdropProps,\n      children,\n      className,\n      elevation = 16,\n      hideBackdrop = false,\n      ModalProps: {\n        BackdropProps: BackdropPropsProp\n      } = {},\n      onClose,\n      open = false,\n      PaperProps = {},\n      SlideProps,\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Slide,\n      transitionDuration = defaultTransitionDuration,\n      variant = 'temporary'\n    } = props,\n    ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n  const mounted = React.useRef(false);\n  React.useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const anchorInvariant = getAnchor({\n    direction: isRtl ? 'rtl' : 'ltr'\n  }, anchorProp);\n  const anchor = anchorProp;\n  const ownerState = _extends({}, props, {\n    anchor,\n    elevation,\n    open,\n    variant\n  }, other);\n  const classes = useUtilityClasses(ownerState);\n  const drawer = /*#__PURE__*/_jsx(DrawerPaper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, PaperProps.className),\n    ownerState: ownerState,\n    children: children\n  }));\n  if (variant === 'permanent') {\n    return /*#__PURE__*/_jsx(DrawerDockedRoot, _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: drawer\n    }));\n  }\n  const slidingDrawer = /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchorInvariant],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps, {\n    children: drawer\n  }));\n  if (variant === 'persistent') {\n    return /*#__PURE__*/_jsx(DrawerDockedRoot, _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: slidingDrawer\n    }));\n  }\n\n  // variant === temporary\n  return /*#__PURE__*/_jsx(DrawerRoot, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration\n    }),\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    ownerState: ownerState,\n    onClose: onClose,\n    hideBackdrop: hideBackdrop,\n    ref: ref\n  }, other, ModalProps, {\n    children: slidingDrawer\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Side from which the drawer will appear.\n   * @default 'left'\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The elevation of the drawer.\n   * @default 16\n   */\n  elevation: integerPropType,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Props applied to the [`Modal`](/material-ui/api/modal/) element.\n   * @default {}\n   */\n  ModalProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Props applied to the [`Slide`](/material-ui/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * The variant to use.\n   * @default 'temporary'\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default Drawer;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.5 15H8v-3h2.5V9.5h3V12H16v3h-2.5v2.5h-3zM19 8v11c0 1.1-.9 2-2 2H7c-1.1 0-2-.9-2-2V8c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2m-2 0H7v11h10zm1-5H6v2h12z\"\n}), 'MedicationOutlined');","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  Stack,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport api from \"../utils/api\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\r\nimport MedicationOutlinedIcon from \"@mui/icons-material/MedicationOutlined\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport { capitalizeWords } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport { fetchPatientName } from \"../services/user_service\";\r\n\r\nconst initialItem = {\r\n  medication: \"\",\r\n  dosage: \"\",\r\n  frequency: \"\",\r\n  duration: \"\",\r\n  instructions: \"\",\r\n};\r\n\r\nconst DoctorPrescription = () => {\r\n  const theme = useTheme();\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardNumberError, setCardNumberError] = useState(\"\");\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [prescriptionItems, setPrescriptionItems] = useState([initialItem]);\r\n  const [prescriptionItemsError, setPrescriptionItemsError] = useState([\r\n    initialItem,\r\n  ]);\r\n  const [rows, setRows] = useState([]);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const brandColor = \"#3b8ada\"; // your hospital brand color\r\n\r\n  const sectionBgColor =\r\n    theme.palette.mode === \"dark\" ? theme.palette.background.paper : \"#f5f8fd\"; // light background for light mode\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const fetchPatientNames = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (\r\n        cardNumber.length <= 0 ||\r\n        patientName?.length > 0 ||\r\n        !!cardNumberError\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const fullName = await fetchPatientName(cardNumber);\r\n\r\n      if (fullName) {\r\n        setPatientName(fullName);\r\n      } else {\r\n        toast.error(\"Card Number Not Registered.\");\r\n        setPatientName(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"This is fetchPatientNames Error: \", err);\r\n      toast.error(\"Error fetching patient info.\");\r\n      setPatientName(\"\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (index, field, value) => {\r\n    setPrescriptionItems((items) =>\r\n      items.map((item, i) => (i === index ? { ...item, [field]: value } : item))\r\n    );\r\n    letterOnlyCheck(index, field, value);\r\n  };\r\n\r\n  const letterOnlyCheck = (index, key, value) => {\r\n    const regex = /^[A-Za-z0-9\\s._]+$/;\r\n    if (!regex.test(value) && value?.length > 0) {\r\n      setPrescriptionItemsError((items) =>\r\n        items.map((item, i) =>\r\n          i === index\r\n            ? { ...item, [key]: \"Only letters, numbers and spaces allowed.\" }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      setPrescriptionItemsError((items) =>\r\n        items.map((item, i) => (i === index ? { ...item, [key]: \"\" } : item))\r\n      );\r\n    }\r\n  };\r\n\r\n  const addMedication = () => {\r\n    setPrescriptionItems([...prescriptionItems, initialItem]);\r\n    setPrescriptionItemsError([...prescriptionItemsError, initialItem]);\r\n  };\r\n\r\n  const removeMedication = (index) => {\r\n    if (prescriptionItems.length <= 1) {\r\n      toast.warning(\"At least one medication is required.\");\r\n      return;\r\n    }\r\n    setPrescriptionItems((items) => items.filter((_, i) => i !== index));\r\n    setPrescriptionItemsError((items) => items.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const groupRequestsByPatientAndDate = async (data) => {\r\n    try {\r\n      const result = [];\r\n\r\n      data.forEach((entry) => {\r\n        const fullDate = entry.createdOn;\r\n        const cardNumber = entry.patientCardNumber;\r\n\r\n        // Skip entry if required fields are missing\r\n        if (!fullDate || !cardNumber || !Array.isArray(entry.requestedItems))\r\n          return;\r\n\r\n        // Find or create patient + date group\r\n        let patientGroup = result.find(\r\n          (g) => g.patientCardNumber === cardNumber && g.date === fullDate\r\n        );\r\n\r\n        if (!patientGroup) {\r\n          patientGroup = {\r\n            patientCardNumber: cardNumber,\r\n            date: fullDate,\r\n            patientInfo: {\r\n              patientFirstName: entry.patientFirstName,\r\n              patientMiddleName: entry.patientMiddleName,\r\n              patientLastName: entry.patientLastName,\r\n              patientGender: entry.patientGender,\r\n            },\r\n            services: [],\r\n          };\r\n          result.push(patientGroup);\r\n        }\r\n\r\n        // Process each requested item\r\n        entry.requestedItems.forEach((item) => {\r\n          const serviceName = item.requestedServices?.trim().toLowerCase();\r\n          if (!serviceName) return;\r\n\r\n          const existingService = patientGroup.services.find(\r\n            (s) => s.requestedServices.trim().toLowerCase() === serviceName\r\n          );\r\n\r\n          if (existingService) {\r\n            existingService.details.push(item);\r\n            const count = parseInt(item.procedeureCount) || 0;\r\n            existingService.totalCount += count;\r\n          } else {\r\n            patientGroup.services.push({\r\n              requestedServices: item.requestedServices,\r\n              totalCount: parseInt(item.procedeureCount) || 0,\r\n              details: [item],\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      // Sort by most recent createdOn\r\n      result.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.error(\"Error during grouping:\", error);\r\n      return []; // return safe fallback\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await api.get(\"/Request/doctor/get-request/Pharmacy\");\r\n      const value = response?.data?.data?.value || [];\r\n\r\n      const sorted = await groupRequestsByPatientAndDate(value);\r\n\r\n      const formatted = sorted.map((item, index) => ({\r\n        id: index + 1,\r\n        cardNumber: item.patientCardNumber,\r\n        date: item.date,\r\n        patientName: [\r\n          item.patientInfo?.patientFirstName,\r\n          item.patientInfo?.patientMiddleName,\r\n          item.patientInfo?.patientLastName,\r\n        ]\r\n          .filter(Boolean)\r\n          .join(\" \"),\r\n        gender: item.patientInfo?.patientGender,\r\n        services: item.services,\r\n      }));\r\n\r\n      setRows(formatted);\r\n    } catch (error) {\r\n      console.error(\"Error fetching pharmacy requests:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsSending(true);\r\n      if (!cardNumber) return toast.warning(\"Enter and verify card number.\");\r\n      if (prescriptionItems.some((item) => !item.medication))\r\n        return toast.warning(\"Medication name is required.\");\r\n\r\n      const errorCheck = prescriptionItemsError?.some((item) =>\r\n        Object.values(item || {}).some((each) => each?.length > 0)\r\n      );\r\n      if (errorCheck) {\r\n        toast.error(\"Please fix the error.\");\r\n        return;\r\n      }\r\n      const payload = {\r\n        patientCardnumber: cardNumber,\r\n        reqestedTo: \"pharmacy\",\r\n        requestItems: prescriptionItems.map((item) => ({\r\n          prodedures: item.medication,\r\n          prodeduresCount: item.frequency,\r\n          measurment: item.dosage,\r\n          duration: item.duration,\r\n          instruction: item.instructions,\r\n        })),\r\n      };\r\n\r\n      const response = await api.post(\"/Request/doctor/order-request\", payload);\r\n\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        toast.success(`Prescription sent successfully`);\r\n        fetchData();\r\n        setPatientName(\"\");\r\n        setCardNumber(\"\");\r\n        setPrescriptionItems([initialItem]);\r\n        setPrescriptionItemsError([initialItem]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"API errors:\", err);\r\n      toast.error(err?.response?.data?.errorDescription);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  const mrnCheck = (value) => {\r\n    const valid = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/.test(value);\r\n    if (!valid && value?.length > 0) {\r\n      setCardNumberError(\"Please enter valid MRN (5+ digits).\");\r\n    } else {\r\n      setCardNumberError(\"\");\r\n    }\r\n  };\r\n\r\n  /*const columns = [\r\n    { field: \"cardNumber\", headerName: \"Card Number\", flex: 1.5 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 2.5 },\r\n    { field: \"medication\", headerName: \"Medication\", flex: 2.5 },\r\n    { field: \"frequency\", headerName: \"Frequency\", flex: 1 },\r\n    { field: \"dosage\", headerName: \"Dosage\", flex: 1 },\r\n    { field: \"duration\", headerName: \"Duration\", flex: 1.5 },\r\n    { field: \"instructions\", headerName: \"Instructions\", flex: 2.5 },\r\n  ];\r\n  */\r\n  const handleRowDoubleClick = (params) => {\r\n    setSelectedRow(params.row);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"cardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"gender\", headerName: \"Gender\", flex: 0.8 },\r\n    { field: \"date\", headerName: \"Date Requested\", flex: 1.2 },\r\n  ];\r\n\r\n  const handleCancelBtn = () => {\r\n    setPatientName(\"\");\r\n    setCardNumber(\"\");\r\n    setCardNumberError(\"\");\r\n    setPrescriptionItems([initialItem]);\r\n    setPrescriptionItemsError([initialItem]);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        // minHeight: '100vh',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        p: 2,\r\n        background:\r\n          theme.palette.mode === \"dark\"\r\n            ? `linear-gradient(135deg, rgba(46, 138, 201, 0.1))`\r\n            : `linear-gradient(135deg, ${theme.palette.grey[100]}, ${theme.palette.grey[300]})`,\r\n        marginInline: \"10px\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={6}\r\n        sx={{\r\n          // maxWidth: 850,\r\n          width: \"100%\",\r\n          p: 4,\r\n          borderRadius: 3,\r\n          backgroundColor: theme.palette.background.paper,\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          fontWeight={700}\r\n          sx={{ mb: 4, color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\" }}\r\n        >\r\n          Electronic Prescription\r\n        </Typography>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              label=\"Patient Card Number\"\r\n              value={cardNumber}\r\n              onChange={(e) => {\r\n                setCardNumber(e.target.value);\r\n                setPatientName(\"\");\r\n                mrnCheck(e.target.value);\r\n              }}\r\n              onBlur={fetchPatientNames}\r\n              fullWidth\r\n              error={!!cardNumberError}\r\n              helperText={cardNumberError}\r\n              InputProps={{\r\n                endAdornment: loading && (\r\n                  <InputAdornment position=\"end\">\r\n                    <CircularProgress size={24} color=\"inherit\" />\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n              sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              label=\"Patient Name\"\r\n              value={patientName}\r\n              fullWidth\r\n              disabled\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: 2,\r\n                  backgroundColor: theme.palette.action.disabledBackground,\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider\r\n          sx={{ my: 4, color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\" }}\r\n        />\r\n\r\n        <Typography variant=\"h6\" fontWeight={600} sx={{ mb: 2 }}>\r\n          Prescription Medications\r\n        </Typography>\r\n\r\n        {prescriptionItems.map((item, index) => (\r\n          <Box\r\n            key={index}\r\n            sx={{\r\n              mb: 3,\r\n              p: 2,\r\n              border: `1px solid ${theme.palette.divider}`,\r\n              borderRadius: 2,\r\n              backgroundColor: theme.palette.background.default,\r\n            }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <TextField\r\n                  label=\"Medication\"\r\n                  value={item.medication}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"medication\", e.target.value)\r\n                  }\r\n                  error={!!prescriptionItemsError[index]?.medication}\r\n                  helperText={prescriptionItemsError[index]?.medication}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2}>\r\n                <TextField\r\n                  label=\"Dosage\"\r\n                  value={item.dosage}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"dosage\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  error={!!prescriptionItemsError[index]?.dosage}\r\n                  helperText={prescriptionItemsError[index]?.dosage}\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2}>\r\n                <TextField\r\n                  label=\"Frequency\"\r\n                  value={item.frequency}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"frequency\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  error={!!prescriptionItemsError[index]?.frequency}\r\n                  helperText={prescriptionItemsError[index]?.frequency}\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2}>\r\n                <TextField\r\n                  label=\"Duration\"\r\n                  value={item.duration}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"duration\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  error={!!prescriptionItemsError[index]?.duration}\r\n                  helperText={prescriptionItemsError[index]?.duration}\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <TextField\r\n                    label=\"Instructions\"\r\n                    value={item.instructions}\r\n                    onChange={(e) =>\r\n                      handleChange(index, \"instructions\", e.target.value)\r\n                    }\r\n                    fullWidth\r\n                    error={!!prescriptionItemsError[index]?.instructions}\r\n                    helperText={prescriptionItemsError[index]?.instructions}\r\n                    InputProps={{\r\n                      sx: {\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      sx: {\r\n                        color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                        \"&.Mui-focused\": {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                    }}\r\n                    sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                  />\r\n                  {prescriptionItems.length > 1 && (\r\n                    <IconButton\r\n                      onClick={() => removeMedication(index)}\r\n                      color=\"error\"\r\n                      sx={{ ml: 1 }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        ))}\r\n\r\n        <Button\r\n          onClick={addMedication}\r\n          startIcon={<AddIcon />}\r\n          variant=\"outlined\"\r\n          sx={(theme) => ({\r\n            mb: 4,\r\n            borderRadius: 2,\r\n            textTransform: \"none\",\r\n            borderColor:\r\n              theme.palette.mode === \"dark\"\r\n                ? \"#fff\"\r\n                : theme.palette.primary.main,\r\n            color:\r\n              theme.palette.mode === \"dark\"\r\n                ? \"#fff\"\r\n                : theme.palette.primary.main,\r\n            \"&:hover\": {\r\n              backgroundColor:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"rgba(255, 255, 255, 0.08)\"\r\n                  : theme.palette.action.hover,\r\n              borderColor:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"#fff\"\r\n                  : theme.palette.primary.dark,\r\n            },\r\n          })}\r\n        >\r\n          Add Another Medication\r\n        </Button>\r\n\r\n        <Box\r\n          sx={{\r\n            textAlign: \"right\",\r\n            display: \"flex\",\r\n            gap: 2,\r\n            justifyContent: \"flex-end\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={() => handleCancelBtn()}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            disabled={\r\n              !cardNumber &&\r\n              prescriptionItems.every(\r\n                (i) =>\r\n                  !i.medication &&\r\n                  !i.dosage &&\r\n                  !i.frequency &&\r\n                  !i.duration &&\r\n                  !i.instructions\r\n              )\r\n            }\r\n            sx={{\r\n              borderRadius: 3,\r\n              px: 4,\r\n              py: 1.6,\r\n              fontWeight: 600,\r\n              textTransform: \"none\",\r\n              backgroundColor: \"error.main\",\r\n              color: \"#fff\",\r\n              boxShadow: `0 4px 12px rgba(0, 0, 0, 0.15)`,\r\n              transition: \"all 0.3s ease\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"error.dark\",\r\n                boxShadow: `0 6px 16px rgba(0, 0, 0, 0.2)`,\r\n              },\r\n              \"&:disabled\": {\r\n                backgroundColor: (theme) =>\r\n                  theme.palette.action.disabledBackground,\r\n                color: (theme) => theme.palette.action.disabled,\r\n              },\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => handleSubmit()}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            disabled={\r\n              !cardNumber ||\r\n              prescriptionItems.some((i) => !i.medication) ||\r\n              isSending\r\n            }\r\n            sx={(theme) => ({\r\n              borderRadius: 3,\r\n              px: 4,\r\n              py: 1.6,\r\n              fontWeight: 600,\r\n              gap: 3,\r\n              textTransform: \"none\",\r\n              background:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"#ffffff\" // White in dark mode\r\n                  : \"#000000\",\r\n              color: theme.palette.mode === \"dark\" ? \"#000000\" : \"#ffffff\", // black text in dark mode for contrast\r\n              boxShadow: `0 4px 12px rgba(0, 0, 0, 0.15)`,\r\n              transition: \"all 0.3s ease\",\r\n              \"&:hover\": {\r\n                background:\r\n                  theme.palette.mode === \"dark\"\r\n                    ? \"#f0f0f0\"\r\n                    : `linear-gradient(135deg, ${theme.palette.primary.main}, ${theme.palette.primary.dark})`,\r\n                boxShadow: `0 6px 16px rgba(0, 0, 0, 0.2)`,\r\n              },\r\n              \"&:disabled\": {\r\n                backgroundColor: theme.palette.action.disabledBackground,\r\n                color: theme.palette.action.disabled,\r\n              },\r\n            })}\r\n          >\r\n            {isSending ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Send to Pharmacy\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Paper\r\n        elevation={4}\r\n        sx={{\r\n          width: \"100%\",\r\n          // maxWidth: 680,\r\n          p: { xs: 2, sm: 3 }, // Slightly less padding for the data grid paper\r\n          borderRadius: 3,\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: `0px 5px 15px rgba(0, 0, 0, 0.1)`,\r\n          mt: 4, // Margin top to separate from the form\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          fontWeight={600}\r\n          sx={{ mb: 2, color: theme.palette.text.primary }}\r\n        >\r\n          Recently Sent Tests\r\n        </Typography>\r\n        <Box sx={{ height: 300, width: \"100%\" }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            density=\"comfortable\" // More compact row spacing\r\n            autoHeight\r\n            sx={{\r\n              \"& .MuiDataGrid-columnHeaders\": {\r\n                backgroundColor: theme.palette.primary.light + \"15\", // Light background for headers\r\n                fontWeight: \"bold\",\r\n              },\r\n              \"& .MuiDataGrid-cell\": {\r\n                borderBottom: `1px dotted ${theme.palette.divider}`, // Dotted line between cells\r\n              },\r\n              border: \"none\", // Remove default DataGrid border\r\n              minWidth: 320,\r\n            }}\r\n            onRowDoubleClick={handleRowDoubleClick}\r\n          />\r\n        </Box>\r\n        <Drawer anchor=\"right\" open={open} onClose={handleClose}>\r\n          <Box\r\n            sx={{\r\n              width: { xs: \"100vw\", sm: 480 },\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              bgcolor: theme.palette.background.default,\r\n              color: theme.palette.text.primary,\r\n              px: 3,\r\n              pt: 2,\r\n              pb: 3,\r\n              fontFamily: \"Roboto, 'Segoe UI', sans-serif\",\r\n            }}\r\n          >\r\n            {/* Header */}\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                <InfoOutlinedIcon sx={{ color: \"#6870fa\" }} fontSize=\"medium\" />\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  fontWeight={600}\r\n                  sx={{ color: \"#6870fa\" }}\r\n                >\r\n                  Request Details\r\n                </Typography>\r\n              </Stack>\r\n              <Tooltip title=\"Close\">\r\n                <IconButton onClick={handleClose} size=\"small\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Divider sx={{ mb: 2 }} />\r\n\r\n            <Box sx={{ flexGrow: 1, overflowY: \"auto\", pr: 1 }}>\r\n              {selectedRow && (\r\n                <>\r\n                  {/* Patient Information */}\r\n                  <Paper\r\n                    elevation={3}\r\n                    sx={{\r\n                      p: 2,\r\n                      mb: 3,\r\n                      borderRadius: 3,\r\n                      bgcolor: sectionBgColor,\r\n                    }}\r\n                  >\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={1}\r\n                      alignItems=\"center\"\r\n                      mb={1}\r\n                    >\r\n                      <PersonOutlineIcon\r\n                        sx={{ color: theme.palette.secondary.main }}\r\n                        fontSize=\"small\"\r\n                      />\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        fontWeight={600}\r\n                        sx={{ color: brandColor }}\r\n                      >\r\n                        Patient Information\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        mb: 0.5,\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Name:</strong> {selectedRow.patientName}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        mb: 0.5,\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Card Number:</strong> {selectedRow.cardNumber}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        mb: 0.5,\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Gender:</strong> {selectedRow.gender}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Date:</strong> {selectedRow.date}\r\n                    </Typography>\r\n                  </Paper>\r\n\r\n                  {/* Medications Section */}\r\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1} mb={1}>\r\n                    <MedicationOutlinedIcon sx={{ color: \"#6870fa\" }} />\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      fontWeight={600}\r\n                      sx={{ color: \"#6870fa\" }}\r\n                    >\r\n                      Requested Medications\r\n                    </Typography>\r\n                  </Stack>\r\n\r\n                  <List disablePadding>\r\n                    {selectedRow.services.map((service, idx) => (\r\n                      <Paper\r\n                        key={idx}\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 2,\r\n                          mb: 2,\r\n                          borderLeft: `6px solid ${\r\n                            theme.palette.mode === \"light\"\r\n                              ? \"#333333cf\"\r\n                              : brandColor\r\n                          }`,\r\n                          borderRadius: 2,\r\n                          bgcolor: sectionBgColor,\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          fontWeight={600}\r\n                          sx={{\r\n                            color:\r\n                              theme.palette.mode === \"light\"\r\n                                ? \"#7c7c7cf5\"\r\n                                : \"#4cceac\",\r\n                            mb: 1,\r\n                          }}\r\n                        >\r\n                          {capitalizeWords(service.requestedServices)}\r\n                        </Typography>\r\n                        {service.details.map((detail, i) => (\r\n                          <Box key={i} sx={{ ml: 1.5, mt: 1 }}>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Count:</strong> {detail.procedeureCount}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Dosage:</strong> {detail.measurement}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Duration:</strong> {detail.duration}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Instructions:</strong>{\" \"}\r\n                              {detail.instruction}\r\n                            </Typography>\r\n                          </Box>\r\n                        ))}\r\n                      </Paper>\r\n                    ))}\r\n                  </List>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Drawer>\r\n      </Paper>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DoctorPrescription;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4\"\n}), 'PersonOutline');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'InfoOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDrawerUtilityClass(slot) {\n  return generateUtilityClass('MuiDrawer', slot);\n}\nconst drawerClasses = generateUtilityClasses('MuiDrawer', ['root', 'docked', 'paper', 'paperAnchorLeft', 'paperAnchorRight', 'paperAnchorTop', 'paperAnchorBottom', 'paperAnchorDockedLeft', 'paperAnchorDockedRight', 'paperAnchorDockedTop', 'paperAnchorDockedBottom', 'modal']);\nexport default drawerClasses;"],"names":["_excluded","_excluded2","overridesResolver","props","styles","ownerState","root","variant","docked","modal","DrawerRoot","styled","Modal","name","slot","_ref","theme","zIndex","vars","drawer","DrawerDockedRoot","shouldForwardProp","rootShouldForwardProp","skipVariantsResolver","flex","DrawerPaper","Paper","paper","concat","capitalize","anchor","_ref2","_extends","overflowY","display","flexDirection","height","WebkitOverflowScrolling","position","top","outline","left","right","maxHeight","bottom","borderRight","palette","divider","borderBottom","borderLeft","borderTop","oppositeDirection","isHorizontal","indexOf","getAnchor","_ref3","direction","React","inProps","ref","useDefaultProps","useTheme","isRtl","useRtl","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","anchorProp","BackdropProps","children","className","elevation","hideBackdrop","ModalProps","BackdropPropsProp","onClose","open","PaperProps","SlideProps","TransitionComponent","Slide","transitionDuration","_objectWithoutPropertiesLoose","other","mounted","current","anchorInvariant","classes","slots","composeClasses","getDrawerUtilityClass","useUtilityClasses","_jsx","square","clsx","slidingDrawer","in","timeout","appear","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","initialItem","medication","dosage","frequency","instructions","DoctorPrescription","cardNumber","setCardNumber","useState","cardNumberError","setCardNumberError","patientName","setPatientName","loading","setLoading","isSending","setIsSending","prescriptionItems","setPrescriptionItems","prescriptionItemsError","setPrescriptionItemsError","rows","setRows","selectedRow","setSelectedRow","setOpen","brandColor","sectionBgColor","mode","background","handleClose","handleChange","index","field","value","items","map","item","i","_objectSpread","letterOnlyCheck","key","test","length","fetchData","async","_response$data","_response$data$data","response","api","get","data","sorted","result","forEach","entry","fullDate","createdOn","patientCardNumber","Array","isArray","requestedItems","patientGroup","find","g","date","patientInfo","patientFirstName","patientMiddleName","patientLastName","patientGender","services","push","_item$requestedServic","serviceName","requestedServices","trim","toLowerCase","existingService","s","details","count","parseInt","procedeureCount","totalCount","sort","a","b","Date","error","console","groupRequestsByPatientAndDate","formatted","_item$patientInfo","_item$patientInfo2","_item$patientInfo3","_item$patientInfo4","id","filter","Boolean","join","gender","useEffect","_jsxs","Box","sx","justifyContent","alignItems","p","grey","marginInline","width","borderRadius","backgroundColor","Typography","align","fontWeight","mb","color","Grid","container","spacing","xs","md","TextField","label","onChange","e","target","onBlur","fullName","fetchPatientName","toast","err","fullWidth","helperText","InputProps","endAdornment","InputAdornment","CircularProgress","size","borderColor","InputLabelProps","disabled","action","disabledBackground","Divider","my","_prescriptionItemsErr","_prescriptionItemsErr2","_prescriptionItemsErr3","_prescriptionItemsErr4","_prescriptionItemsErr5","_prescriptionItemsErr6","_prescriptionItemsErr7","_prescriptionItemsErr8","_prescriptionItemsErr9","_prescriptionItemsErr0","border","sm","IconButton","onClick","warning","_","removeMedication","ml","DeleteIcon","Button","addMedication","startIcon","AddIcon","textTransform","primary","main","hover","dark","textAlign","gap","flexWrap","every","px","py","boxShadow","transition","some","Object","values","each","payload","patientCardnumber","reqestedTo","requestItems","prodedures","prodeduresCount","measurment","instruction","post","status","success","_err$response","_err$response$data","errorDescription","handleSubmit","mt","text","DataGrid","columns","headerName","density","autoHeight","light","minWidth","onRowDoubleClick","params","row","Drawer","bgcolor","pt","pb","fontFamily","Stack","InfoOutlinedIcon","fontSize","Tooltip","title","CloseIcon","flexGrow","pr","_Fragment","PersonOutlineIcon","secondary","MedicationOutlinedIcon","List","disablePadding","service","idx","capitalizeWords","detail","measurement","ToastContainer","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}