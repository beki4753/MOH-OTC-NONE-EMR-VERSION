{"version":3,"file":"static/js/1951.0d42ec09.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/MedicalServices.js","components/TreatmentEntry.jsx","../node_modules/@mui/icons-material/CheckCircle.js","../node_modules/@mui/icons-material/HelpOutline.js","../node_modules/@mui/icons-material/AssignmentLate.js","../node_modules/@mui/icons-material/HourglassEmpty.js","../node_modules/@mui/icons-material/esm/Refresh.js","../node_modules/@mui/icons-material/Paid.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/FolderSpecial.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/TaskAlt.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-4V4c0-1.1-.9-2-2-2h-4c-1.1 0-2 .9-2 2v2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2M10 4h4v2h-4zm6 11h-3v3h-2v-3H8v-2h3v-3h2v3h3z\"\n}), 'MedicalServices');","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Paper,\r\n  Stack,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { CheckBox, Refresh } from \"@mui/icons-material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport api from \"../utils/api\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport FolderSpecialIcon from \"@mui/icons-material/FolderSpecial\";\r\nimport MedicalServicesIcon from \"@mui/icons-material/MedicalServices\";\r\nimport AssignmentLateIcon from \"@mui/icons-material/AssignmentLate\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport HourglassEmptyIcon from \"@mui/icons-material/HourglassEmpty\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\n\r\n// Utility function to return icon + color based on status\r\nconst getStatusIcon = (status, theme) => {\r\n  try {\r\n    const lowerStatus = (status || \"\").toLowerCase();\r\n    switch (lowerStatus) {\r\n      case \"completed\":\r\n        return <CheckCircleIcon fontSize=\"small\" sx={{ color: \"green\" }} />;\r\n      case \"paid\":\r\n        return (\r\n          <PaidIcon\r\n            fontSize=\"small\"\r\n            sx={{ color: theme?.palette?.mode === \"dark\" ? \"#388ada\" : \"blue\" }}\r\n          />\r\n        );\r\n      case \"ordered\":\r\n        return <HourglassEmptyIcon fontSize=\"small\" sx={{ color: \"orange\" }} />;\r\n      case \"failed\":\r\n        return <CancelIcon fontSize=\"small\" sx={{ color: \"red\" }} />;\r\n      default:\r\n        return <HelpOutlineIcon fontSize=\"small\" sx={{ color: \"grey.600\" }} />;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"This is getStatusIcon Error : \", error);\r\n  }\r\n};\r\n\r\nconst tokenValue = getTokenValue();\r\n\r\nconst TreatmentEntry = () => {\r\n  const theme = useTheme();\r\n  const [treatments, setTreatments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [tabValue, setTabValue] = useState(\"all\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [selectedTests, setSelectedTests] = useState([]);\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [requestedFrom, setRequestedFrom] = useState(\"\");\r\n\r\n  const [completeDialogOpen, setCompleteDialogOpen] = useState(false);\r\n  const [testsToComplete, setTestsToComplete] = useState([]);\r\n  const [completedSelectedTests, setCompletedSelectedTests] = useState([]);\r\n  const [completingPatient, setCompletingPatient] = useState({});\r\n  const [completeIsLoading, setCompleteIsLoading] = useState(false);\r\n\r\n  // Define checkbox color based on theme mode\r\n  const checkboxColor =\r\n    theme.palette.mode === \"light\" ? \"#0078d7\" : theme.palette.secondary.main;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        setTreatments([]);\r\n        const requestedTo = tokenValue?.UserType?.toLowerCase()?.includes(\"mlt\")\r\n          ? \"/Request/doctor/get-request-lab\"\r\n          : \"/Request/doctor/get-request-radiology\";\r\n\r\n        const res = await api.get(requestedTo);\r\n        const raw = res?.data?.data?.value || [];\r\n        raw.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn));\r\n\r\n        const groupedMap = new Map();\r\n\r\n        raw.forEach((item) => {\r\n          const name = [\r\n            item.patientFirstName,\r\n            item.patientMiddleName,\r\n            item.patientLastName,\r\n          ]\r\n            .filter(Boolean)\r\n            .join(\" \");\r\n          const key = `${item.patientCardNumber}-${\r\n            item.requestedDepartment\r\n          }-${item.createdOn.slice(0, 16).replace(\"T\", \" \")}`;\r\n\r\n          if (!groupedMap.has(key)) {\r\n            groupedMap.set(key, {\r\n              id: key,\r\n              patientCardNumber: item.patientCardNumber,\r\n              patientFName: name,\r\n              requestedReason: item.requestedDepartment,\r\n              requestGroup: item.requestingDepartment,\r\n              createdOn: item.createdOn.slice(0, 16).replace(\"T\", \" \"),\r\n              tests: [],\r\n              paid: [],\r\n              totalPrice: 0,\r\n              requestedItems: [],\r\n            });\r\n          }\r\n\r\n          const group = groupedMap.get(key);\r\n          item.requestedItems.forEach((i) => {\r\n            group.tests.push(i.requestedServices || \"Unknown\");\r\n            group.paid.push(i.requeststatus || \"Unpaid\");\r\n            group.totalPrice += i.price || 0;\r\n            group.requestedItems.push(i);\r\n          });\r\n        });\r\n\r\n        const grouped = Array.from(groupedMap.values());\r\n\r\n        setTreatments(grouped);\r\n      } catch (err) {\r\n        console.error(\"This is fetchData Error : \", err);\r\n        toast.error(err?.response?.data?.msg || \"Failed to fetch data\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  const paidTabs = useMemo(() => {\r\n    try {\r\n      const statuses =\r\n        treatments?.length > 0\r\n          ? new Set(\r\n              treatments.flatMap((t) =>\r\n                Array.isArray(t?.paid)\r\n                  ? t.paid.map((p) => p || \"Unpaid\")\r\n                  : [\"Unpaid\"]\r\n              )\r\n            )\r\n          : [];\r\n\r\n      return Array.from(statuses)?.length > 0\r\n        ? [\"all\", ...Array.from(statuses)]\r\n        : [];\r\n    } catch (error) {\r\n      console.error(\"getTabs Error:\", error);\r\n      return [\"all\"];\r\n    }\r\n  }, [treatments]);\r\n\r\n  const filtered = useMemo(() => {\r\n    return treatments?.length > 0\r\n      ? treatments?.filter((row) => {\r\n          const lowerStatuses = row?.paid?.map((status) =>\r\n            (status || \"\").toLowerCase()\r\n          );\r\n\r\n          // Match against tab value\r\n          const matchesTab =\r\n            tabValue === \"all\"\r\n              ? true\r\n              : lowerStatuses?.includes(tabValue?.toLowerCase());\r\n\r\n          const matchesSearch =\r\n            row.patientFName.toLowerCase().includes(search.toLowerCase()) ||\r\n            row.patientCardNumber.toLowerCase().includes(search.toLowerCase());\r\n\r\n          return matchesTab && matchesSearch;\r\n        })\r\n      : [];\r\n  }, [treatments, tabValue, search]);\r\n\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientFName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"requestedReason\", headerName: \"Category\", flex: 1 },\r\n    { field: \"tests\", headerName: \"Tests\", flex: 2 },\r\n    { field: \"requestGroup\", headerName: \"Requested From\", flex: 1 },\r\n    { field: \"totalPrice\", headerName: \"Amount\", flex: 1 },\r\n    {\r\n      field: \"paid\",\r\n      headerName: \"Status\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          const distinctValue = new Set(params?.row?.paid);\r\n          return Array.from(distinctValue || [])?.join(\", \");\r\n        } catch (error) {\r\n          console.error(error);\r\n          return \"\";\r\n        }\r\n      },\r\n    },\r\n    { field: \"createdOn\", headerName: \"Date\", flex: 1 },\r\n    {\r\n      field: \"Action\",\r\n      headerName: \"Action\",\r\n      flex: 1.5,\r\n      renderCell: (params) =>\r\n        params?.row?.paid.some((p) => p?.toLowerCase() === \"paid\") && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<TaskAltIcon />}\r\n            onClick={() => {\r\n              setTestsToComplete(params.row.requestedItems);\r\n              setCompletedSelectedTests([]);\r\n              setCompletingPatient({\r\n                name: params.row.patientFName,\r\n                group: params.row.requestGroup,\r\n              });\r\n              setCompleteDialogOpen(true);\r\n            }}\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            sx={{\r\n              color: theme.palette.mode === \"light\" ? \"#2e8ac9\" : \"secondary\",\r\n              border: `1px solid ${\r\n                theme.palette.mode === \"light\" ? \"rgb(82 158 210)\" : \"secondary\"\r\n              }`,\r\n            }}\r\n          >\r\n            Mark Completed\r\n          </Button>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleCloseMarkAsCompletedModal = () => {\r\n    setCompleteDialogOpen(false);\r\n    setCompletingPatient({});\r\n    setTestsToComplete([]);\r\n  };\r\n\r\n  const handleCloseViewDetailsModal = () => {\r\n    setDialogOpen(false);\r\n    setPatientName(\"\");\r\n    setRequestedFrom(\"\");\r\n    setSelectedTests([]);\r\n  };\r\n\r\n  const handleMarkAsCompleted = async () => {\r\n    try {\r\n      setCompleteIsLoading(true);\r\n      const responses = await Promise.all(\r\n        completedSelectedTests.map((item) => {\r\n          const numericId = Number(item.id);\r\n          return api.put(\"/Request/doctor/complete-request\", numericId, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n        })\r\n      );\r\n\r\n      if (responses?.every((res) => res?.status === 200)) {\r\n        toast.success(\r\n          `${completedSelectedTests.length} test(s) marked as completed`\r\n        );\r\n        setCompleteDialogOpen(false);\r\n        setRefresh((p) => !p);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"This is handleMarkAsCompleted Error : \", err);\r\n      toast.error(`${err}`);\r\n    } finally {\r\n      setCompleteIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDoubleClick = (params, event) => {\r\n    try {\r\n      if (\r\n        event.target.nodeName === \"BUTTON\" ||\r\n        event.currentTarget.querySelector(\"button\")?.contains(event.target)\r\n      )\r\n        return;\r\n      setSelectedTests(params.row.requestedItems);\r\n      setPatientName(params.row.patientFName);\r\n      setRequestedFrom(params.row.requestGroup);\r\n      setDialogOpen(true);\r\n    } catch (error) {\r\n      console.error(\"This is handleDoubleClick Error : \", error);\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (event) => {\r\n    const { checked, name: categoryName } = event.target;\r\n\r\n    // All tests in the category\r\n    const categoryTests = testsToComplete.filter(\r\n      (t) =>\r\n        t.requestCatagory === categoryName &&\r\n        (t.requeststatus || \"\").toLowerCase() === \"paid\"\r\n    );\r\n\r\n    // Update selected tests\r\n    setCompletedSelectedTests((prev) => {\r\n      if (checked) {\r\n        // Add all category tests not already selected\r\n        const toAdd = categoryTests.filter((test) => !prev.includes(test));\r\n        return [...prev, ...toAdd];\r\n      } else {\r\n        // Remove all tests in category\r\n        return prev.filter((test) => test.requestCatagory !== categoryName);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        fontWeight={700}\r\n        sx={{ mb: 4, color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\" }}\r\n      >\r\n        Patient Treatment Entry\r\n      </Typography>\r\n\r\n      <Paper sx={{ mb: 2, borderRadius: 2 }}>\r\n        {paidTabs?.length > 0 ? (\r\n          <Tabs\r\n            value={paidTabs.includes(tabValue) ? tabValue : \"all\"}\r\n            onChange={(e, newVal) => setTabValue(newVal)}\r\n            variant=\"fullWidth\"\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                textTransform: \"capitalize\",\r\n                fontWeight: 600,\r\n                borderRadius: 2,\r\n                mx: 1,\r\n                color: theme.palette.mode === \"dark\" ? \"#aaa\" : \"#333\",\r\n              },\r\n              \"& .Mui-selected\": {\r\n                backgroundColor: \"#2e8ac9\",\r\n                color:\r\n                  theme.palette.mode === \"dark\"\r\n                    ? \"#000000DE\"\r\n                    : \"#fff !important\",\r\n              },\r\n              \"& .MuiTabs-indicator\": { display: \"none\" },\r\n            }}\r\n          >\r\n            {paidTabs.map((status, index) => (\r\n              <Tab\r\n                key={index}\r\n                label={status === \"all\" ? \"All\" : status}\r\n                value={status}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        ) : (\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2}>\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Search...\"\r\n        variant=\"outlined\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n        InputProps={{\r\n          sx: {\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n          },\r\n        }}\r\n        InputLabelProps={{\r\n          sx: {\r\n            color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n            \"&.Mui-focused\": {\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Box mb={2}>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setRefresh((p) => !p)}\r\n            disabled={isLoading}\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n          >\r\n            {isLoading ? <CircularProgress size={24} /> : <Refresh />}\r\n          </Button>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Paper elevation={3}>\r\n        <DataGrid\r\n          rows={filtered}\r\n          columns={columns}\r\n          loading={isLoading}\r\n          getRowId={(row) => row.id}\r\n          onRowDoubleClick={(params, event) => handleDoubleClick(params, event)}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Paper>\r\n\r\n      {/* View Details Dialog */}\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleCloseViewDetailsModal();\r\n          }\r\n        }}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        TransitionComponent={Fade}\r\n        disableEnforceFocus // to remove focus warning\r\n        BackdropProps={{ \"aria-hidden\": false }}\r\n      >\r\n        <DialogTitle\r\n          sx={{\r\n            bgcolor: \"#166295\",\r\n            color: \"primary.contrastText\",\r\n            py: 2,\r\n            px: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h6\">\r\n              Tests for <strong>{patientName}</strong> from{\" \"}\r\n              <strong>{requestedFrom}</strong>\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => handleCloseViewDetailsModal()}\r\n              sx={{ color: \"primary.contrastText\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers sx={{ py: 3, px: 3 }}>\r\n          {selectedTests?.length > 0 ? (\r\n            <Box sx={{ maxHeight: \"60vh\", overflow: \"auto\", pr: 1 }}>\r\n              {Object.entries(\r\n                selectedTests?.length > 0\r\n                  ? selectedTests?.reduce((acc, test) => {\r\n                      const category = test?.requestCatagory;\r\n                      if (!acc[category]) acc[category] = [];\r\n                      acc[category].push(test);\r\n                      return acc;\r\n                    }, {})\r\n                  : {}\r\n              )?.map(([category, tests]) => (\r\n                <Box\r\n                  key={category}\r\n                  mb={3}\r\n                  sx={{\r\n                    borderLeft: \"4px solid\",\r\n                    borderColor: \"#398bdb\",\r\n                    pl: 2,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    fontWeight=\"bold\"\r\n                    color={theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"}\r\n                  >\r\n                    <FolderSpecialIcon fontSize=\"small\" /> {category}\r\n                  </Typography>\r\n                  <Stack spacing={1.5} pl={2}>\r\n                    {tests.map((test, index) => (\r\n                      <Paper\r\n                        key={index}\r\n                        sx={{\r\n                          p: 1.5,\r\n                          border: \"1px solid\",\r\n                          borderColor: \"divider\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                          <MedicalServicesIcon fontSize=\"small\" />\r\n                          <Typography>{test.requestedServices}</Typography>\r\n                        </Box>\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                          {getStatusIcon(test.requeststatus, theme)}\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {test.requeststatus}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Paper>\r\n                    ))}\r\n                  </Stack>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Box textAlign=\"center\" py={4}>\r\n              <AssignmentLateIcon sx={{ fontSize: 60 }} color=\"disabled\" />\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No tests available\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button\r\n            onClick={() => handleCloseViewDetailsModal()}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Mark Complete Dialog */}\r\n      <Dialog\r\n        open={completeDialogOpen}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleCloseMarkAsCompletedModal();\r\n          }\r\n        }}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        TransitionComponent={Fade}\r\n        disableEnforceFocus // to remove focus warning\r\n        BackdropProps={{ \"aria-hidden\": false }}\r\n      >\r\n        <DialogTitle\r\n          sx={{\r\n            bgcolor: \"#166295\",\r\n            color: \"primary.contrastText\",\r\n            py: 2,\r\n            px: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h6\">\r\n              Select tests to complete for{\" \"}\r\n              <strong>{completingPatient?.name || \"Unknown\"}</strong>\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => handleCloseMarkAsCompletedModal()}\r\n              sx={{ color: \"primary.contrastText\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent dividers sx={{ py: 3, px: 3 }}>\r\n          {testsToComplete?.filter(\r\n            (t) => (t?.requeststatus || \"\").toLowerCase() === \"paid\"\r\n          )?.length > 0 ? (\r\n            <Box sx={{ maxHeight: \"60vh\", overflow: \"auto\", pr: 1 }}>\r\n              {Object.entries(\r\n                testsToComplete\r\n                  ?.filter(\r\n                    (t) => (t.requeststatus || \"\").toLowerCase() === \"paid\"\r\n                  )\r\n                  ?.reduce((acc, test) => {\r\n                    const category = test.requestCatagory;\r\n                    if (!acc[category]) acc[category] = [];\r\n                    acc[category].push(test);\r\n                    return acc;\r\n                  }, {})\r\n              ).map(([category, tests]) => {\r\n                const selectedCount = tests.filter((test) =>\r\n                  completedSelectedTests.includes(test)\r\n                ).length;\r\n                const totalCount = tests.length;\r\n\r\n                const checked = selectedCount === totalCount && totalCount > 0;\r\n                const indeterminate =\r\n                  selectedCount > 0 && selectedCount < totalCount;\r\n\r\n                return (\r\n                  <Box\r\n                    key={category}\r\n                    mb={3}\r\n                    sx={{ borderLeft: \"4px solid #398bdb\", pl: 2 }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\" mb={1}>\r\n                      <FormControlLabel\r\n                        label={\r\n                          <>\r\n                            <FolderSpecialIcon fontSize=\"small\" /> {category}\r\n                          </>\r\n                        }\r\n                        name={category}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={checked}\r\n                            indeterminate={indeterminate}\r\n                            onChange={handleCategorySelect}\r\n                            sx={{\r\n                              color: checkboxColor,\r\n                              \"&.Mui-checked\": {\r\n                                color: checkboxColor,\r\n                              },\r\n                              \"&.MuiCheckbox-indeterminate\": {\r\n                                color: checkboxColor,\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                      />\r\n                    </Typography>\r\n                    <Stack spacing={1.5} pl={2}>\r\n                      {tests.map((test, index) => {\r\n                        const isSelected =\r\n                          completedSelectedTests.includes(test);\r\n                        return (\r\n                          <Paper\r\n                            key={index}\r\n                            onClick={() => {\r\n                              setCompletedSelectedTests((prev) =>\r\n                                isSelected\r\n                                  ? prev.filter((t) => t !== test)\r\n                                  : [...prev, test]\r\n                              );\r\n                            }}\r\n                            sx={{\r\n                              p: 1.5,\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              gap: 2,\r\n                              border: \"1px solid\",\r\n                              borderColor: \"divider\",\r\n                              bgcolor: isSelected\r\n                                ? \"action.selected\"\r\n                                : \"background.paper\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              readOnly\r\n                              checked={isSelected}\r\n                            />\r\n                            <Typography>\r\n                              <MedicalServicesIcon fontSize=\"small\" />{\" \"}\r\n                              {test.requestedServices}\r\n                            </Typography>\r\n                          </Paper>\r\n                        );\r\n                      })}\r\n                    </Stack>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n          ) : (\r\n            <Box textAlign=\"center\" py={4}>\r\n              <AssignmentLateIcon sx={{ fontSize: 60 }} color=\"disabled\" />\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No paid tests available for completion\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button\r\n            onClick={() => handleMarkAsCompleted()}\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            disabled={completedSelectedTests?.length === 0 || completeIsLoading}\r\n          >\r\n            {completeIsLoading ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Complete Selected Tests\"\r\n            )}\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleCloseMarkAsCompletedModal()}\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TreatmentEntry;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 18h2v-2h-2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4\"\n}), 'HelpOutline');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-6 15h-2v-2h2zm0-4h-2V8h2zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1\"\n}), 'AssignmentLate');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2zm10 14.5V20H8v-3.5l4-4zm-4-5-4-4V4h8v3.5z\"\n}), 'HourglassEmpty');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m.88 15.76V19h-1.75v-1.29c-.74-.18-2.39-.77-3.02-2.96l1.65-.67c.06.22.58 2.09 2.4 2.09.93 0 1.98-.48 1.98-1.61 0-.96-.7-1.46-2.28-2.03-1.1-.39-3.35-1.03-3.35-3.31 0-.1.01-2.4 2.62-2.96V5h1.75v1.24c1.84.32 2.51 1.79 2.66 2.23l-1.58.67c-.11-.35-.59-1.34-1.9-1.34-.7 0-1.81.37-1.81 1.39 0 .95.86 1.31 2.64 1.9 2.4.83 3.01 2.05 3.01 3.45 0 2.63-2.5 3.13-3.02 3.22\"\n}), 'Paid');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2m-2.06 11L15 15.28 12.06 17l.78-3.33-2.59-2.24 3.41-.29L15 8l1.34 3.14 3.41.29-2.59 2.24z\"\n}), 'FolderSpecial');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 5.18 10.59 16.6l-4.24-4.24 1.41-1.41 2.83 2.83 10-10zm-2.21 5.04c.13.57.21 1.17.21 1.78 0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c1.58 0 3.04.46 4.28 1.25l1.44-1.44C16.1 2.67 14.13 2 12 2 6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-1.19-.22-2.33-.6-3.39z\"\n}), 'TaskAlt');"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","getStatusIcon","status","theme","_theme$palette","toLowerCase","_jsx","CheckCircleIcon","fontSize","sx","color","PaidIcon","palette","mode","HourglassEmptyIcon","CancelIcon","HelpOutlineIcon","error","console","tokenValue","getTokenValue","TreatmentEntry","_Object$entries","_testsToComplete$filt","_testsToComplete$filt2","useTheme","treatments","setTreatments","useState","isLoading","setIsLoading","refresh","setRefresh","tabValue","setTabValue","search","setSearch","dialogOpen","setDialogOpen","selectedTests","setSelectedTests","patientName","setPatientName","requestedFrom","setRequestedFrom","completeDialogOpen","setCompleteDialogOpen","testsToComplete","setTestsToComplete","completedSelectedTests","setCompletedSelectedTests","completingPatient","setCompletingPatient","completeIsLoading","setCompleteIsLoading","checkboxColor","secondary","main","useEffect","async","_tokenValue$UserType","_tokenValue$UserType$","_res$data","_res$data$data","requestedTo","UserType","includes","res","api","get","raw","data","value","sort","a","b","Date","createdOn","groupedMap","Map","forEach","item","name","patientFirstName","patientMiddleName","patientLastName","filter","Boolean","join","key","concat","patientCardNumber","requestedDepartment","slice","replace","has","set","id","patientFName","requestedReason","requestGroup","requestingDepartment","tests","paid","totalPrice","requestedItems","group","i","push","requestedServices","requeststatus","price","grouped","Array","from","values","err","_err$response","_err$response$data","toast","response","msg","fetchData","paidTabs","useMemo","_Array$from","statuses","length","Set","flatMap","t","isArray","map","p","filtered","row","_row$paid","lowerStatuses","matchesTab","matchesSearch","columns","field","headerName","flex","renderCell","params","_params$row","_Array$from2","distinctValue","_params$row2","some","Button","variant","startIcon","TaskAltIcon","onClick","border","children","handleCloseMarkAsCompletedModal","handleCloseViewDetailsModal","handleCategorySelect","event","checked","categoryName","target","categoryTests","requestCatagory","prev","toAdd","test","_jsxs","Box","Typography","align","fontWeight","mb","Paper","borderRadius","Tabs","onChange","e","newVal","textTransform","mx","backgroundColor","display","index","Tab","label","justifyContent","py","CircularProgress","size","TextField","fullWidth","InputProps","borderColor","InputLabelProps","Grid","container","disabled","Refresh","elevation","DataGrid","rows","loading","getRowId","onRowDoubleClick","handleDoubleClick","_event$currentTarget$","nodeName","currentTarget","querySelector","contains","autoHeight","minWidth","Dialog","open","onClose","reason","maxWidth","TransitionComponent","Fade","disableEnforceFocus","BackdropProps","DialogTitle","bgcolor","px","alignItems","IconButton","CloseIcon","DialogContent","dividers","maxHeight","overflow","pr","Object","entries","reduce","acc","category","_ref","borderLeft","pl","FolderSpecialIcon","Stack","spacing","gap","MedicalServicesIcon","textAlign","AssignmentLateIcon","DialogActions","_ref2","selectedCount","totalCount","indeterminate","FormControlLabel","_Fragment","control","Checkbox","isSelected","cursor","type","readOnly","responses","Promise","all","numericId","Number","put","headers","every","success","handleMarkAsCompleted","ToastContainer","createSvgIcon"],"sourceRoot":""}