{"version":3,"file":"static/js/4037.c7fafa03.chunk.js","mappings":"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","sources":["../node_modules/robust-predicates/esm/util.js","../node_modules/robust-predicates/esm/orient2d.js","../node_modules/robust-predicates/esm/orient3d.js","../node_modules/robust-predicates/esm/incircle.js","../node_modules/robust-predicates/esm/insphere.js","../node_modules/delaunator/index.js","../node_modules/d3-delaunay/src/path.js","../node_modules/d3-delaunay/src/polygon.js","../node_modules/d3-delaunay/src/voronoi.js","../node_modules/d3-delaunay/src/delaunay.js","../node_modules/@nivo/voronoi/src/props.ts","../node_modules/@nivo/voronoi/src/defaults.ts","../node_modules/@nivo/voronoi/src/computeMesh.ts","../node_modules/@nivo/voronoi/src/hooks.ts","../node_modules/@nivo/voronoi/src/Voronoi.tsx","../node_modules/@nivo/voronoi/src/Mesh.tsx","../node_modules/@nivo/voronoi/src/ResponsiveVoronoi.tsx","../node_modules/@nivo/voronoi/src/meshCanvas.ts","../node_modules/@nivo/line/src/PointTooltip.tsx","../node_modules/@nivo/line/src/defaults.ts","../node_modules/@nivo/line/src/SliceTooltip.tsx","../node_modules/@nivo/line/src/hooks.ts","../node_modules/d3-shape/src/area.js","../node_modules/@nivo/line/src/Areas.tsx","../node_modules/@nivo/line/src/LinesItem.tsx","../node_modules/@nivo/line/src/Lines.tsx","../node_modules/@nivo/line/src/SlicesItem.tsx","../node_modules/@nivo/line/src/Slices.tsx","../node_modules/@nivo/line/src/Points.tsx","../node_modules/@nivo/line/src/Mesh.tsx","../node_modules/@nivo/line/src/Line.tsx","../node_modules/@nivo/line/src/ResponsiveLine.tsx","../node_modules/@nivo/line/src/LineCanvas.tsx","../node_modules/@nivo/line/src/ResponsiveLineCanvas.tsx","../node_modules/d3-shape/src/point.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/path.js","../node_modules/d3-shape/src/line.js","../node_modules/lodash/uniqueId.js"],"sourcesContent":["export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        // find the point closest to the seed\n        for (let i = 0, minDist = Infinity; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                const d = this._dists[id];\n                if (d > d0) {\n                    hull[j++] = id;\n                    d0 = d;\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n","import { Margin, defaultMargin as coreDefaultMargin } from '@nivo/core'\nimport { TooltipAnchor, TooltipPosition } from '@nivo/tooltip'\n\nexport const defaultNodePositionAccessor = (node: {\n    x: number\n    y: number\n}): [x: number, y: number] => [node.x, node.y]\n\nexport const defaultMargin: Margin = coreDefaultMargin\n\nexport const defaultTooltipPosition: TooltipPosition = 'cursor'\nexport const defaultTooltipAnchor: TooltipAnchor = 'top'\n","import { Delaunay } from 'd3-delaunay'\nimport { Margin } from '@nivo/core'\nimport { NodePositionAccessor } from './types'\nimport { defaultNodePositionAccessor, defaultMargin } from './defaults'\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Node>({\n    points,\n    getNodePosition = defaultNodePositionAccessor as NodePositionAccessor<Node>,\n    margin = defaultMargin,\n}: {\n    points: readonly Node[]\n    getNodePosition?: NodePositionAccessor<Node>\n    margin?: Margin\n}): [number, number][] => {\n    return points.map(node => {\n        const [x, y] = getNodePosition(node)\n\n        return [x + margin.left, y + margin.top]\n    })\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    margin = defaultMargin,\n    debug,\n}: {\n    points: readonly [number, number][]\n    width: number\n    height: number\n    margin?: Margin\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug\n        ? delaunay.voronoi([\n              0,\n              0,\n              margin.left + width + margin.right,\n              margin.top + height + margin.bottom,\n          ])\n        : undefined\n\n    return { points, delaunay, voronoi }\n}\n","import {\n    MouseEvent,\n    MutableRefObject,\n    TouchEvent,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { getDistance, getRelativeCursor, Margin } from '@nivo/core'\nimport { TooltipAnchor, TooltipPosition, useTooltip } from '@nivo/tooltip'\nimport { computeMeshPoints, computeMesh } from './computeMesh'\nimport {\n    VoronoiCommonProps,\n    VoronoiDatum,\n    VoronoiCustomLayerProps,\n    NodeMouseHandler,\n    // DatumTouchHandler,\n    NodePositionAccessor,\n    NodeTouchHandler,\n} from './types'\nimport {\n    defaultMargin,\n    defaultNodePositionAccessor,\n    defaultTooltipPosition,\n    defaultTooltipAnchor,\n} from './defaults'\n\nexport const useVoronoiMesh = <Node>({\n    points,\n    getNodePosition = defaultNodePositionAccessor as NodePositionAccessor<Node>,\n    width,\n    height,\n    margin = defaultMargin,\n    debug,\n}: {\n    points: readonly Node[]\n    getNodePosition?: NodePositionAccessor<Node>\n    // Margins are added to the chart's dimensions, so that mouse detection\n    // also works inside the margins, omit if that's not what you want.\n    // When including the margins, we recommend to set a `detectionRadius` as well.\n    margin?: Margin\n    width: number\n    height: number\n    debug?: boolean\n}) =>\n    useMemo(\n        () =>\n            computeMesh({\n                points: computeMeshPoints<Node>({ points, margin, getNodePosition }),\n                width,\n                height,\n                margin,\n                debug,\n            }),\n        [getNodePosition, points, width, height, margin, debug]\n    )\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n\nexport const useMeshEvents = <Node, ElementType extends Element>({\n    elementRef,\n    nodes,\n    getNodePosition = defaultNodePositionAccessor as NodePositionAccessor<Node>,\n    delaunay,\n    setCurrent: setCurrentNode,\n    margin = defaultMargin,\n    detectionRadius = Infinity,\n    isInteractive = true,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    enableTouchCrosshair = false,\n    tooltip,\n    tooltipPosition = defaultTooltipPosition,\n    tooltipAnchor = defaultTooltipAnchor,\n}: {\n    elementRef: MutableRefObject<ElementType | null>\n    nodes: readonly Node[]\n    getNodePosition?: NodePositionAccessor<Node>\n    delaunay: Delaunay<Node>\n    setCurrent?: (node: Node | null) => void\n    margin?: Margin\n    detectionRadius?: number\n    isInteractive?: boolean\n    onMouseEnter?: NodeMouseHandler<Node>\n    onMouseMove?: NodeMouseHandler<Node>\n    onMouseLeave?: NodeMouseHandler<Node>\n    onMouseDown?: NodeMouseHandler<Node>\n    onMouseUp?: NodeMouseHandler<Node>\n    onClick?: NodeMouseHandler<Node>\n    onDoubleClick?: NodeMouseHandler<Node>\n    onTouchStart?: NodeTouchHandler<Node>\n    onTouchMove?: NodeTouchHandler<Node>\n    onTouchEnd?: NodeTouchHandler<Node>\n    enableTouchCrosshair?: boolean\n    tooltip?: (node: Node) => JSX.Element\n    tooltipPosition?: TooltipPosition\n    tooltipAnchor?: TooltipAnchor\n}) => {\n    // Store the index of the current point and the current node.\n    const [current, setCurrent] = useState<[number, Node] | null>(null)\n\n    // Keep track of the previous index and node, this is needed as we don't have enter/leave events\n    // for each node because we use a single rect element to capture events.\n    const previous = useRef<[number, Node] | null>(null)\n\n    useEffect(() => {\n        previous.current = current\n    }, [previous, current])\n\n    const findNode = useCallback(\n        (event: MouseEvent<ElementType> | TouchEvent<ElementType>): null | [number, Node] => {\n            if (!elementRef.current || nodes.length === 0) return null\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n\n            let index: number | null = delaunay.find(x, y)\n            let node = index !== undefined ? nodes[index] : null\n\n            if (node && detectionRadius !== Infinity) {\n                const [nodeX, nodeY] = getNodePosition(node)\n                if (getDistance(x, y, nodeX + margin.left, nodeY + margin.top) > detectionRadius) {\n                    index = null\n                    node = null\n                }\n            }\n\n            if (index === null || node === null) return null\n\n            return [index, node]\n        },\n        [elementRef, delaunay, nodes, getNodePosition, margin, detectionRadius]\n    )\n\n    const { showTooltipAt, showTooltipFromEvent, hideTooltip } = useTooltip()\n    const showTooltip = useMemo(() => {\n        if (!tooltip) return undefined\n\n        if (tooltipPosition === 'cursor') {\n            // Following the cursor.\n            return (node: Node, event: MouseEvent<ElementType>) => {\n                showTooltipFromEvent(tooltip(node), event, tooltipAnchor)\n            }\n        }\n\n        // Fixed at the node's position.\n        return (node: Node) => {\n            const [x, y] = getNodePosition(node)\n            showTooltipAt(tooltip(node), [x + margin.left, y + margin.top], tooltipAnchor)\n        }\n    }, [\n        showTooltipAt,\n        showTooltipFromEvent,\n        tooltip,\n        tooltipPosition,\n        tooltipAnchor,\n        getNodePosition,\n        margin,\n    ])\n\n    // Mouse enter only occurs when entering the main element,\n    // not for each node.\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            const match = findNode(event)\n\n            setCurrent(match)\n            setCurrentNode?.(match ? match[1] : null)\n\n            if (match) {\n                const node = match[1]\n\n                showTooltip?.(node, event)\n                onMouseEnter?.(match[1], event)\n            }\n        },\n        [findNode, setCurrent, setCurrentNode, showTooltip, onMouseEnter]\n    )\n\n    // Handle mouse enter/move/leave, relying on `previous` to simulate events.\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            const match = findNode(event)\n\n            setCurrent(match)\n\n            if (match) {\n                const [index, node] = match\n\n                setCurrentNode?.(node)\n                showTooltip?.(node, event)\n\n                if (previous.current) {\n                    const [previousIndex, previousNode] = previous.current\n                    if (index !== previousIndex) {\n                        // Simulate an enter event if the previous index is different.\n                        onMouseLeave?.(previousNode, event)\n                    } else {\n                        // If it's the same, trigger a regular move event.\n                        onMouseMove?.(node, event)\n                    }\n                } else {\n                    onMouseEnter?.(node, event)\n                }\n            } else {\n                setCurrentNode?.(null)\n                hideTooltip?.()\n\n                if (previous.current) {\n                    // Simulate a leave event if there's a previous node.\n                    onMouseLeave?.(previous.current[1], event)\n                }\n            }\n        },\n        [\n            findNode,\n            setCurrent,\n            setCurrentNode,\n            previous,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n            showTooltip,\n            hideTooltip,\n        ]\n    )\n\n    // Mouse leave only occurs when leaving the main element,\n    // not for each node.\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            setCurrent(null)\n            setCurrentNode?.(null)\n\n            hideTooltip()\n\n            if (onMouseLeave && previous.current) {\n                onMouseLeave(previous.current[1], event)\n            }\n        },\n        [setCurrent, setCurrentNode, previous, hideTooltip, onMouseLeave]\n    )\n\n    const handleMouseDown = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            const match = findNode(event)\n\n            setCurrent(match)\n\n            if (match) onMouseDown?.(match[1], event)\n        },\n        [findNode, setCurrent, onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            const match = findNode(event)\n\n            setCurrent(match)\n\n            if (match) onMouseUp?.(match[1], event)\n        },\n        [findNode, setCurrent, onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            const match = findNode(event)\n\n            setCurrent(match)\n\n            if (match) onClick?.(match[1], event)\n        },\n        [findNode, setCurrent, onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (event: MouseEvent<ElementType>) => {\n            const match = findNode(event)\n\n            setCurrent(match)\n\n            if (match) onDoubleClick?.(match[1], event)\n        },\n        [findNode, setCurrent, onDoubleClick]\n    )\n\n    const handleTouchStart = useCallback(\n        (event: TouchEvent<ElementType>) => {\n            const match = findNode(event)\n\n            if (enableTouchCrosshair) {\n                setCurrent(match)\n                setCurrentNode?.(match ? match[1] : null)\n            }\n\n            if (match) onTouchStart?.(match[1], event)\n        },\n        [findNode, setCurrent, setCurrentNode, enableTouchCrosshair, onTouchStart]\n    )\n\n    const handleTouchMove = useCallback(\n        (event: TouchEvent<ElementType>) => {\n            const match = findNode(event)\n\n            if (enableTouchCrosshair) {\n                setCurrent(match)\n                setCurrentNode?.(match ? match[1] : null)\n            }\n\n            if (match) onTouchMove?.(match[1], event)\n        },\n        [findNode, setCurrent, setCurrentNode, enableTouchCrosshair, onTouchMove]\n    )\n\n    const handleTouchEnd = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            if (enableTouchCrosshair) {\n                setCurrent(null)\n                setCurrentNode?.(null)\n            }\n\n            if (onTouchEnd && previous.current) {\n                onTouchEnd(previous.current[1], event)\n            }\n        },\n        [enableTouchCrosshair, setCurrent, setCurrentNode, onTouchEnd, previous]\n    )\n\n    return {\n        current,\n        handleMouseEnter: isInteractive ? handleMouseEnter : undefined,\n        handleMouseMove: isInteractive ? handleMouseMove : undefined,\n        handleMouseLeave: isInteractive ? handleMouseLeave : undefined,\n        handleMouseDown: isInteractive ? handleMouseDown : undefined,\n        handleMouseUp: isInteractive ? handleMouseUp : undefined,\n        handleClick: isInteractive ? handleClick : undefined,\n        handleDoubleClick: isInteractive ? handleDoubleClick : undefined,\n        handleTouchStart: isInteractive ? handleTouchStart : undefined,\n        handleTouchMove: isInteractive ? handleTouchMove : undefined,\n        handleTouchEnd: isInteractive ? handleTouchEnd : undefined,\n    }\n}\n\n/**\n * Compute a voronoi mesh and corresponding events.\n */\nexport const useMesh = <Node, ElementType extends Element>({\n    elementRef,\n    nodes,\n    getNodePosition,\n    width,\n    height,\n    margin = defaultMargin,\n    isInteractive = true,\n    detectionRadius = Infinity,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    tooltip,\n    tooltipPosition = defaultTooltipPosition,\n    tooltipAnchor = defaultTooltipAnchor,\n    debug = false,\n}: {\n    elementRef: MutableRefObject<ElementType | null>\n    nodes: readonly Node[]\n    getNodePosition?: NodePositionAccessor<Node>\n    width: number\n    height: number\n    margin?: Margin\n    isInteractive?: boolean\n    detectionRadius?: number\n    setCurrent?: (node: Node | null) => void\n    onMouseEnter?: NodeMouseHandler<Node>\n    onMouseMove?: NodeMouseHandler<Node>\n    onMouseLeave?: NodeMouseHandler<Node>\n    onMouseDown?: NodeMouseHandler<Node>\n    onMouseUp?: NodeMouseHandler<Node>\n    onClick?: NodeMouseHandler<Node>\n    onDoubleClick?: NodeMouseHandler<Node>\n    tooltip?: (node: Node) => JSX.Element\n    tooltipPosition?: TooltipPosition\n    tooltipAnchor?: TooltipAnchor\n    debug?: boolean\n}) => {\n    const { delaunay, voronoi } = useVoronoiMesh<Node>({\n        points: nodes,\n        getNodePosition,\n        width,\n        height,\n        margin,\n        debug,\n    })\n\n    const {\n        handleMouseEnter,\n        handleMouseMove,\n        handleMouseLeave,\n        handleMouseDown,\n        handleMouseUp,\n        handleClick,\n        handleDoubleClick,\n        current,\n    } = useMeshEvents<Node, ElementType>({\n        elementRef,\n        nodes,\n        margin,\n        setCurrent,\n        delaunay,\n        detectionRadius,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onMouseDown,\n        onMouseUp,\n        onClick,\n        onDoubleClick,\n        tooltip,\n        tooltipPosition,\n        tooltipAnchor,\n    })\n\n    return {\n        delaunay,\n        voronoi,\n        current,\n        handleMouseEnter,\n        handleMouseMove,\n        handleMouseLeave,\n        handleMouseDown,\n        handleMouseUp,\n        handleClick,\n        handleDoubleClick,\n    }\n}\n","import { createElement, Fragment, ReactNode, forwardRef, Ref } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'> & {\n        forwardedRef: Ref<SVGSVGElement>\n    }\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n    forwardedRef,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = forwardRef(\n    (\n        {\n            theme,\n            ...props\n        }: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n            Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container isInteractive={false} animate={false} theme={theme}>\n            <InnerVoronoi {...props} forwardedRef={ref} />\n        </Container>\n    )\n)\n","import { useMemo, useRef } from 'react'\nimport { Margin } from '@nivo/core'\nimport { TooltipAnchor, TooltipPosition } from '@nivo/tooltip'\nimport { useVoronoiMesh, useMeshEvents } from './hooks'\nimport { NodeMouseHandler, NodePositionAccessor, NodeTouchHandler } from './types'\nimport { defaultMargin, defaultTooltipAnchor, defaultTooltipPosition } from './defaults'\n\ninterface MeshProps<Node> {\n    nodes: Node[]\n    width: number\n    height: number\n    margin?: Margin\n    getNodePosition?: NodePositionAccessor<Node>\n    // Can be used in case you want to keep track of the current node externally,\n    // the current node being the last hovered node.\n    setCurrent?: (node: Node | null) => void\n    onMouseEnter?: NodeMouseHandler<Node>\n    onMouseMove?: NodeMouseHandler<Node>\n    onMouseLeave?: NodeMouseHandler<Node>\n    onMouseDown?: NodeMouseHandler<Node>\n    onMouseUp?: NodeMouseHandler<Node>\n    onClick?: NodeMouseHandler<Node>\n    onDoubleClick?: NodeMouseHandler<Node>\n    onTouchStart?: NodeTouchHandler<Node>\n    onTouchMove?: NodeTouchHandler<Node>\n    onTouchEnd?: NodeTouchHandler<Node>\n    enableTouchCrosshair?: boolean\n    // Restrict the node detection to a given radius, default to `Infinity`.\n    detectionRadius?: number\n    // If specified, tooltips are going to be handled automatically.\n    tooltip?: (node: Node) => JSX.Element\n    tooltipPosition?: TooltipPosition\n    tooltipAnchor?: TooltipAnchor\n    // Display the voronoi mesh for debugging purpose.\n    debug?: boolean\n}\n\nexport const Mesh = <Node,>({\n    nodes,\n    width,\n    height,\n    margin = defaultMargin,\n    getNodePosition,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    enableTouchCrosshair = false,\n    detectionRadius = Infinity,\n    tooltip,\n    tooltipPosition = defaultTooltipPosition,\n    tooltipAnchor = defaultTooltipAnchor,\n    debug,\n}: MeshProps<Node>) => {\n    const elementRef = useRef<SVGRectElement | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh<Node>({\n        points: nodes,\n        getNodePosition,\n        width,\n        height,\n        margin,\n        debug,\n    })\n\n    const {\n        current,\n        handleMouseEnter,\n        handleMouseMove,\n        handleMouseLeave,\n        handleMouseDown,\n        handleMouseUp,\n        handleClick,\n        handleDoubleClick,\n        handleTouchStart,\n        handleTouchMove,\n        handleTouchEnd,\n    } = useMeshEvents<Node, SVGRectElement>({\n        elementRef,\n        nodes,\n        delaunay,\n        margin,\n        detectionRadius,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onMouseDown,\n        onMouseUp,\n        onClick,\n        onDoubleClick,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n        enableTouchCrosshair,\n        tooltip,\n        tooltipPosition,\n        tooltipAnchor,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) return voronoi.render()\n        return undefined\n    }, [debug, voronoi])\n\n    return (\n        <g ref={elementRef} transform={`translate(${-margin.left},${-margin.top})`}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {detectionRadius < Infinity && (\n                        <path\n                            stroke=\"red\"\n                            strokeWidth={0.35}\n                            fill=\"none\"\n                            d={delaunay.renderPoints(undefined, detectionRadius)}\n                        />\n                    )}\n                    {/* highlight the current cell */}\n                    {current && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(current[0])} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                data-ref=\"mesh-interceptor\"\n                width={margin.left + width + margin.right}\n                height={margin.top + height + margin.bottom}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}\n                onTouchStart={handleTouchStart}\n                onTouchMove={handleTouchMove}\n                onTouchEnd={handleTouchEnd}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick}\n            />\n        </g>\n    )\n}\n","import { forwardRef, Ref } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = ResponsiveProps<\n    Partial<Omit<VoronoiSvgProps, 'data'>> & Pick<VoronoiSvgProps, 'data'>\n>\n\nexport const ResponsiveVoronoi = forwardRef(\n    (\n        { defaultWidth, defaultHeight, onResize, debounceResize, ...props }: ResponsiveVoronoiProps,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <Voronoi {...props} width={width} height={height} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n)\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderDelaunayPointsToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    delaunay: Delaunay<Delaunay.Point>,\n    radius: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.15\n    ctx.beginPath()\n    delaunay.renderPoints(ctx, radius)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'pink'\n    ctx.fill()\n\n    ctx.restore()\n}\n\nexport const renderDebugToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        delaunay,\n        voronoi,\n        detectionRadius,\n        index,\n    }: {\n        delaunay: Delaunay<Delaunay.Point>\n        voronoi: Voronoi<Delaunay.Point>\n        detectionRadius: number\n        index: number | null\n    }\n) => {\n    renderVoronoiToCanvas(ctx, voronoi)\n\n    if (detectionRadius < Infinity) {\n        renderDelaunayPointsToCanvas(ctx, delaunay, detectionRadius)\n    }\n\n    if (index !== null) {\n        renderVoronoiCellToCanvas(ctx, voronoi, index)\n    }\n}\n","import { memo } from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { LineSeries, PointTooltipProps } from './types'\n\nexport const NonMemoizedPointTooltip = <Series extends LineSeries>({\n    point,\n}: PointTooltipProps<Series>) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.seriesColor}\n        />\n    )\n}\n\nexport const PointTooltip = memo(NonMemoizedPointTooltip)\n","import { defaultAxisProps } from '@nivo/axes'\nimport {\n    CommonLineProps,\n    LineSvgPropsWithDefaults,\n    LineCanvasPropsWithDefaults,\n    DefaultSeries,\n    LineLayerId,\n} from './types'\nimport { PointTooltip } from './PointTooltip'\nimport { SliceTooltip } from './SliceTooltip'\n\nexport const commonDefaultProps: Omit<\n    CommonLineProps<DefaultSeries>,\n    | 'data'\n    | 'xFormat'\n    | 'yFormat'\n    | 'layers'\n    | 'width'\n    | 'height'\n    | 'margin'\n    | 'theme'\n    | 'pointSymbol'\n    | 'gridXValues'\n    | 'gridYValues'\n    | 'onMouseEnter'\n    | 'onMouseMove'\n    | 'onMouseLeave'\n    | 'onMouseDown'\n    | 'onMouseUp'\n    | 'onClick'\n    | 'onDoubleClick'\n    | 'onTouchStart'\n    | 'onTouchMove'\n    | 'onTouchEnd'\n> & {\n    layers: LineLayerId[]\n} = {\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    curve: 'linear',\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'series.color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    enableGridX: true,\n    enableGridY: true,\n    legends: [],\n    isInteractive: true,\n    tooltip: PointTooltip,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    renderWrapper: true,\n}\n\nexport const svgDefaultProps: Omit<\n    LineSvgPropsWithDefaults<DefaultSeries>,\n    'data' | 'width' | 'height' | 'margin' | 'theme'\n> = {\n    ...commonDefaultProps,\n    defs: [],\n    fill: [],\n    enablePointLabel: false,\n    pointLabel: 'data.yFormatted',\n    areaBlendMode: 'normal',\n    axisTop: null,\n    axisRight: null,\n    axisBottom: defaultAxisProps,\n    axisLeft: defaultAxisProps,\n    useMesh: false,\n    enableSlices: false,\n    debugSlices: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n    enableTouchCrosshair: false,\n    initialHiddenIds: [],\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps: Omit<\n    LineCanvasPropsWithDefaults<DefaultSeries>,\n    'data' | 'width' | 'height' | 'margin' | 'theme'\n> = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? (window.devicePixelRatio ?? 1) : 1,\n    axisTop: null,\n    axisRight: null,\n    axisBottom: defaultAxisProps,\n    axisLeft: defaultAxisProps,\n}\n","import { memo } from 'react'\nimport { useTheme } from '@nivo/theming'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\nimport { LineSeries, SliceTooltipProps } from './types'\n\nexport const NonMemoizedSliceTooltip = <Series extends LineSeries>({\n    slice,\n    axis,\n}: SliceTooltipProps<Series>) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.seriesColor} style={theme.tooltip.chip} />,\n                point.seriesId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nexport const SliceTooltip = memo(NonMemoizedSliceTooltip)\n","import { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport uniqueId from 'lodash/uniqueId.js'\nimport { curveFromProp, useValueFormatter } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport {\n    useOrdinalColorScale,\n    useInheritedColor,\n    OrdinalColorScaleConfig,\n    InheritedColorConfig,\n} from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { commonDefaultProps, svgDefaultProps } from './defaults'\nimport {\n    LineSeries,\n    CommonLineProps,\n    DataProps,\n    InferX,\n    InferY,\n    InferSeriesId,\n    LineSvgProps,\n    LineGenerator,\n    AreaGenerator,\n    AllowedValue,\n    ComputedSeries,\n    Point,\n    SliceData,\n    PointColorContext,\n} from './types'\n\nexport function useLineGenerator(curve: CommonLineProps<LineSeries>['curve']): LineGenerator {\n    return useMemo(() => {\n        return line<{\n            x: number\n            y: number\n        }>()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y(d => d.y)\n            .curve(curveFromProp(curve))\n    }, [curve])\n}\n\nexport function useAreaGenerator<Y extends AllowedValue>({\n    curve,\n    yScale,\n    areaBaselineValue,\n}: {\n    curve: CommonLineProps<LineSeries>['curve']\n    yScale: (y: Y) => number\n    areaBaselineValue: Y\n}): AreaGenerator {\n    return useMemo(() => {\n        return area<{\n            x: number\n            y: number\n        }>()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nfunction usePoints<Series extends LineSeries>({\n    series,\n    getPointColor,\n    getPointBorderColor,\n    formatX,\n    formatY,\n}: {\n    series: ComputedSeries<Series>[]\n    getPointColor: (context: PointColorContext<Series>) => string\n    getPointBorderColor: (point: Omit<Point<Series>, 'borderColor'>) => string\n    formatX: (x: InferX<Series>) => string\n    formatY: (y: InferY<Series>) => string\n}) {\n    return useMemo(() => {\n        return series.reduce((acc, seriesItem, seriesIndex) => {\n            return [\n                ...acc,\n                ...seriesItem.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, indexInSeries) => {\n                        const point: Omit<Point<Series>, 'color' | 'borderColor'> & {\n                            color?: string\n                            borderColor?: string\n                        } = {\n                            id: `${seriesItem.id}.${indexInSeries}`,\n                            indexInSeries,\n                            absIndex: acc.length + indexInSeries,\n                            seriesIndex,\n                            seriesId: seriesItem.id,\n                            seriesColor: seriesItem.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                            data: {\n                                ...datum.data,\n                                xFormatted: formatX(datum.data.x as InferX<Series>),\n                                yFormatted: formatY(datum.data.y as InferY<Series>),\n                            },\n                        }\n                        point.color = getPointColor({\n                            series: seriesItem,\n                            point: point as Omit<Point<Series>, 'color' | 'borderColor'>,\n                        })\n                        point.borderColor = getPointBorderColor(\n                            point as Omit<Point<Series>, 'borderColor'>\n                        )\n\n                        return point as Point<Series>\n                    }),\n            ]\n        }, [] as Point<Series>[])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = <Series extends LineSeries>({\n    componentId,\n    enableSlices,\n    points,\n    width,\n    height,\n}: {\n    componentId: string\n    enableSlices: Exclude<LineSvgProps<Series>['enableSlices'], undefined>\n    points: Point<Series>[]\n    width: number\n    height: number\n}) => {\n    return useMemo(() => {\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: `slice:${componentId}:${x}`,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    } as SliceData<Series>\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    } as SliceData<Series>\n                })\n        }\n\n        return []\n    }, [componentId, enableSlices, height, points, width])\n}\n\nexport const LINE_UNIQUE_ID_PREFIX = 'line'\n\nexport const useLine = <Series extends LineSeries>({\n    data,\n    xScale: xScaleSpec = commonDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = commonDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = commonDefaultProps.colors as OrdinalColorScaleConfig<Series>,\n    curve = commonDefaultProps.curve,\n    areaBaselineValue = commonDefaultProps.areaBaselineValue as InferY<Series>,\n    pointColor = commonDefaultProps.pointColor as InheritedColorConfig<PointColorContext<Series>>,\n    pointBorderColor = commonDefaultProps.pointBorderColor as InheritedColorConfig<\n        Omit<Point<Series>, 'borderColor'>\n    >,\n    enableSlices = svgDefaultProps.enableSlices as Exclude<\n        LineSvgProps<Series>['enableSlices'],\n        undefined\n    >,\n    initialHiddenIds = svgDefaultProps.initialHiddenIds as InferSeriesId<Series>[],\n}: DataProps<Series> &\n    Pick<\n        CommonLineProps<Series>,\n        | 'xScale'\n        | 'yScale'\n        | 'colors'\n        | 'curve'\n        | 'areaBaselineValue'\n        | 'pointColor'\n        | 'pointBorderColor'\n    > & {\n        xFormat?: CommonLineProps<Series>['xFormat']\n        yFormat?: CommonLineProps<Series>['yFormat']\n    } & Pick<LineSvgProps<Series>, 'enableSlices' | 'initialHiddenIds'> & {\n        width: number\n        height: number\n    }): {\n    legendData: {\n        id: InferSeriesId<Series>\n        label: string\n        color: string\n        hidden: boolean\n    }[]\n    toggleSeries: (id: InferSeriesId<Series>) => void\n    lineGenerator: LineGenerator\n    areaGenerator: AreaGenerator\n    getColor: (series: Series) => string\n    series: ComputedSeries<Series>[]\n    xScale: (x: InferX<Series>) => number\n    yScale: (y: InferY<Series>) => number\n    slices: SliceData<Series>[]\n    points: Point<Series>[]\n} => {\n    const [componentId] = useState(uniqueId(LINE_UNIQUE_ID_PREFIX))\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries<Series, Series['data'][number]>(\n                data.filter(item => hiddenIds.indexOf(item.id as InferSeriesId<Series>) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(seriesItem => ({\n            id: seriesItem.id as InferSeriesId<Series>,\n            label: `${seriesItem.id}`,\n            color: getColor(seriesItem),\n        }))\n\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(seriesItem => seriesItem.id === datum.id)!,\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id)) as unknown as ComputedSeries<Series>[]\n\n        const legendData = dataWithColor\n            .map(item => ({\n                ...item,\n                hidden: !series.find(seriesItem => seriesItem.id === item.id),\n            }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSeries = useCallback((id: InferSeriesId<Series>) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints<Series>({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices<Series>({\n        componentId,\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator(curve)\n    const areaGenerator = useAreaGenerator<InferY<Series>>({\n        curve,\n        yScale: yScale as (y: InferY<Series>) => number,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSeries,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale: xScale as (x: InferX<Series>) => number,\n        yScale: yScale as (y: InferY<Series>) => number,\n        slices,\n        points,\n    }\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { memo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { CssMixBlendMode, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { LineSeries, ComputedSeries, AreaGenerator } from './types'\n\nconst AreaPath = ({\n    areaBlendMode,\n    areaOpacity,\n    color,\n    fill,\n    path,\n}: {\n    areaBlendMode: CssMixBlendMode\n    areaOpacity: number\n    color: string\n    fill?: string\n    path: string\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nconst NonMemoizedAreas = <Series extends LineSeries>({\n    areaGenerator,\n    areaOpacity,\n    areaBlendMode,\n    series,\n}: {\n    areaGenerator: AreaGenerator\n    areaOpacity: number\n    areaBlendMode: CssMixBlendMode\n    series: readonly ComputedSeries<Series>[]\n}) => {\n    const reversedSeries = series.slice(0).reverse()\n\n    return (\n        <g>\n            {reversedSeries.map(seriesItem => (\n                <AreaPath\n                    key={`${seriesItem.id}`}\n                    path={areaGenerator(seriesItem.data.map(d => d.position))!}\n                    {...{ areaOpacity, areaBlendMode, ...seriesItem }}\n                />\n            ))}\n        </g>\n    )\n}\n\nexport const Areas = memo(NonMemoizedAreas) as typeof NonMemoizedAreas\n","import { memo, useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\nimport { LineGenerator } from './types'\n\nexport const NonMemoizedLinesItem = ({\n    lineGenerator,\n    points,\n    color,\n    thickness,\n}: {\n    lineGenerator: LineGenerator\n    points: { x: number; y: number }[]\n    color: string\n    thickness: number\n}) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path!)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nexport const LinesItem = memo(NonMemoizedLinesItem) as typeof NonMemoizedLinesItem\n","import { memo } from 'react'\nimport { LineSeries, ComputedSeries, LineGenerator } from './types'\nimport { LinesItem } from './LinesItem'\n\nexport const NonMemoizedLines = <Series extends LineSeries>({\n    series,\n    lineGenerator,\n    lineWidth,\n}: {\n    series: readonly ComputedSeries<Series>[]\n    lineGenerator: LineGenerator\n    lineWidth: number\n}) => {\n    return (\n        <>\n            {series\n                .slice(0)\n                .reverse()\n                .map(({ id, data, color }) => (\n                    <LinesItem\n                        key={id}\n                        points={data.map(d => d.position)}\n                        lineGenerator={lineGenerator}\n                        color={color}\n                        thickness={lineWidth}\n                    />\n                ))}\n        </>\n    )\n}\n\nexport const Lines = memo(NonMemoizedLines) as typeof NonMemoizedLines\n","import { createElement, memo, useCallback, MouseEvent, TouchEvent } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { LineSeries, SliceData, CommonLineProps, LineSvgProps } from './types'\n\nexport const NonMemoizedSlicesItem = <Series extends LineSeries>({\n    slice,\n    slices,\n    axis,\n    debug,\n    tooltip,\n    isCurrent,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n}: {\n    slice: SliceData<Series>\n    slices: readonly SliceData<Series>[]\n    axis: Exclude<LineSvgProps<Series>['enableSlices'], undefined | false>\n    debug: boolean\n    tooltip: CommonLineProps<Series>['sliceTooltip']\n    isCurrent: boolean\n    setCurrent: (slice: SliceData<Series> | null) => void\n    onMouseEnter?: CommonLineProps<Series>['onMouseEnter']\n    onMouseMove?: CommonLineProps<Series>['onMouseMove']\n    onMouseLeave?: CommonLineProps<Series>['onMouseLeave']\n    onMouseDown?: CommonLineProps<Series>['onMouseDown']\n    onMouseUp?: CommonLineProps<Series>['onMouseUp']\n    onClick?: CommonLineProps<Series>['onClick']\n    onDoubleClick?: CommonLineProps<Series>['onDoubleClick']\n    onTouchStart?: CommonLineProps<Series>['onTouchStart']\n    onTouchMove?: CommonLineProps<Series>['onTouchMove']\n    onTouchEnd?: CommonLineProps<Series>['onTouchEnd']\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n            onMouseEnter?.(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, axis, setCurrent, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            onMouseMove?.(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, axis, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave?.(slice, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave, slice]\n    )\n\n    const handleMouseDown = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseDown?.(slice, event)\n        },\n        [slice, onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseUp?.(slice, event)\n        },\n        [slice, onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.(slice, event)\n        },\n        [slice, onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onDoubleClick?.(slice, event)\n        },\n        [slice, onDoubleClick]\n    )\n\n    const handeOnTouchStart = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n            onTouchStart?.(slice, event)\n        },\n        [axis, onTouchStart, setCurrent, showTooltipFromEvent, slice, tooltip]\n    )\n\n    const handeOnTouchMove = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            // This event will be locked to the element that was touched originally\n            // We find the element that is currently being \"hovered over\" by getting the element at the touch point\n            const touchPoint = event.touches[0]\n            const touchingElement = document.elementFromPoint(\n                touchPoint.clientX,\n                touchPoint.clientY\n            )\n            // Is this a nivo ref?\n            const touchingSliceId = touchingElement?.getAttribute('data-ref')\n            if (touchingSliceId) {\n                // Is this a slice for this graph?\n                const slice = slices.find(slice => slice.id === touchingSliceId)\n                if (slice) {\n                    showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n                    setCurrent(slice)\n                }\n            }\n\n            // Note here, this will pass the original slice, not the one we found\n            // But this can be found with document.elementFromPoint()\n            onTouchMove?.(slice, event)\n        },\n        [axis, onTouchMove, setCurrent, showTooltipFromEvent, slice, slices, tooltip]\n    )\n\n    const handleOnTouchEnd = useCallback(\n        (event: TouchEvent<SVGRectElement>) => {\n            hideTooltip()\n            setCurrent(null)\n            onTouchEnd?.(slice, event)\n        },\n        [hideTooltip, setCurrent, onTouchEnd, slice]\n    )\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onClick={handleClick}\n            onDoubleClick={handleDoubleClick}\n            onTouchStart={handeOnTouchStart}\n            onTouchMove={handeOnTouchMove}\n            onTouchEnd={handleOnTouchEnd}\n            data-ref={slice.id}\n        />\n    )\n}\n\nexport const SlicesItem = memo(NonMemoizedSlicesItem) as typeof NonMemoizedSlicesItem\n","import { memo } from 'react'\nimport { SlicesItem } from './SlicesItem'\nimport { LineSeries, SliceData, CommonLineProps, LineSvgProps } from './types'\n\nexport const NonMemoizedSlices = <Series extends LineSeries>({\n    slices,\n    axis,\n    debug,\n    tooltip,\n    current,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n}: {\n    slices: readonly SliceData<Series>[]\n    axis: Exclude<LineSvgProps<Series>['enableSlices'], undefined | false>\n    debug: boolean\n    tooltip: CommonLineProps<Series>['sliceTooltip']\n    current: SliceData<Series> | null\n    setCurrent: (slice: SliceData<Series> | null) => void\n    onMouseEnter?: CommonLineProps<Series>['onMouseEnter']\n    onMouseMove?: CommonLineProps<Series>['onMouseMove']\n    onMouseLeave?: CommonLineProps<Series>['onMouseLeave']\n    onMouseDown?: CommonLineProps<Series>['onMouseDown']\n    onMouseUp?: CommonLineProps<Series>['onMouseUp']\n    onClick?: CommonLineProps<Series>['onClick']\n    onDoubleClick?: CommonLineProps<Series>['onDoubleClick']\n    onTouchStart?: CommonLineProps<Series>['onTouchStart']\n    onTouchMove?: CommonLineProps<Series>['onTouchMove']\n    onTouchEnd?: CommonLineProps<Series>['onTouchEnd']\n}) => {\n    return (\n        <>\n            {slices.map(slice => (\n                <SlicesItem<Series>\n                    key={slice.id}\n                    slice={slice}\n                    slices={slices}\n                    axis={axis}\n                    debug={debug}\n                    tooltip={tooltip}\n                    setCurrent={setCurrent}\n                    isCurrent={current !== null && current.id === slice.id}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                    onMouseDown={onMouseDown}\n                    onMouseUp={onMouseUp}\n                    onClick={onClick}\n                    onDoubleClick={onDoubleClick}\n                    onTouchStart={onTouchStart}\n                    onTouchMove={onTouchMove}\n                    onTouchEnd={onTouchEnd}\n                />\n            ))}\n        </>\n    )\n}\n\nexport const Slices = memo(NonMemoizedSlices) as typeof NonMemoizedSlices\n","import { createElement, memo } from 'react'\n// @ts-expect-error no types\nimport { getLabelGenerator } from '@nivo/core'\nimport { DotsItem, Margin } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { LineSeries, LineSvgPropsWithDefaults, Point } from './types'\n\nconst NonMemoizedPoints = <Series extends LineSeries>({\n    points,\n    symbol,\n    size,\n    borderWidth,\n    enableLabel,\n    label,\n    labelYOffset,\n    isFocusable,\n    setCurrentPoint,\n    tooltip,\n    margin,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    ariaHidden,\n    ariaDisabled,\n}: {\n    points: readonly Point<Series>[]\n    symbol: LineSvgPropsWithDefaults<Series>['pointSymbol']\n    size: number\n    borderWidth: LineSvgPropsWithDefaults<Series>['pointBorderWidth']\n    enableLabel: LineSvgPropsWithDefaults<Series>['enablePointLabel']\n    label: LineSvgPropsWithDefaults<Series>['pointLabel']\n    labelYOffset: LineSvgPropsWithDefaults<Series>['pointLabelYOffset']\n    isFocusable: LineSvgPropsWithDefaults<Series>['isFocusable']\n    setCurrentPoint: (point: Point<Series> | null) => void\n    tooltip: LineSvgPropsWithDefaults<Series>['tooltip']\n    margin: Margin\n    ariaLabel: LineSvgPropsWithDefaults<Series>['pointAriaLabel']\n    ariaLabelledBy: LineSvgPropsWithDefaults<Series>['pointAriaLabelledBy']\n    ariaDescribedBy: LineSvgPropsWithDefaults<Series>['pointAriaDescribedBy']\n    ariaHidden: LineSvgPropsWithDefaults<Series>['pointAriaHidden']\n    ariaDisabled: LineSvgPropsWithDefaults<Series>['pointAriaDisabled']\n}) => {\n    const getLabel = getLabelGenerator(label)\n\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    // We sort the points so that the lower series are drawn on top of the higher ones.\n    const mappedPoints = points\n        .slice(0)\n        .sort((a, b) => a.indexInSeries - b.indexInSeries)\n        .sort((a, b) => b.seriesIndex - a.seriesIndex)\n        .map(point => {\n            return {\n                id: point.id,\n                x: point.x,\n                y: point.y,\n                datum: point.data,\n                fill: point.color,\n                stroke: point.borderColor,\n                label: enableLabel ? getLabel(point) : null,\n                ariaLabel: ariaLabel ? ariaLabel(point) : undefined,\n                ariaLabelledBy: ariaLabelledBy ? ariaLabelledBy(point) : undefined,\n                ariaDescribedBy: ariaDescribedBy ? ariaDescribedBy(point) : undefined,\n                ariaHidden: ariaHidden ? ariaHidden(point) : undefined,\n                ariaDisabled: ariaDisabled ? ariaDisabled(point) : undefined,\n                onFocus: isFocusable\n                    ? () => {\n                          setCurrentPoint(point)\n                          showTooltipAt(\n                              createElement(tooltip, { point }),\n                              [margin.left + point.x, margin.top + point.y],\n                              'top'\n                          )\n                      }\n                    : undefined,\n                onBlur: isFocusable\n                    ? () => {\n                          setCurrentPoint(null)\n                          hideTooltip()\n                      }\n                    : undefined,\n            }\n        })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol as any}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    ariaLabel={point.ariaLabel}\n                    ariaLabelledBy={point.ariaLabelledBy}\n                    ariaDescribedBy={point.ariaDescribedBy}\n                    ariaHidden={point.ariaHidden}\n                    ariaDisabled={point.ariaDisabled}\n                    isFocusable={isFocusable}\n                    onFocus={point.onFocus}\n                    onBlur={point.onBlur}\n                    testId={`line.point.${point.id}`}\n                />\n            ))}\n        </g>\n    )\n}\n\nexport const Points = memo(NonMemoizedPoints) as typeof NonMemoizedPoints\n","import { createElement, memo, useCallback, MouseEvent, TouchEvent } from 'react'\nimport { Margin } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport { LineSeries, Point, LineSvgProps, LineSvgPropsWithDefaults } from './types'\n\nconst NonMemoizedMesh = <Series extends LineSeries>({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    tooltip,\n    debug,\n    enableTouchCrosshair,\n}: {\n    points: Point<Series>[]\n    width: number\n    height: number\n    margin: Margin\n    setCurrent: (point: Point<Series> | null) => void\n    onMouseEnter?: LineSvgProps<Series>['onMouseEnter']\n    onMouseMove?: LineSvgProps<Series>['onMouseMove']\n    onMouseLeave?: LineSvgProps<Series>['onMouseLeave']\n    onMouseDown?: LineSvgProps<Series>['onMouseDown']\n    onMouseUp?: LineSvgProps<Series>['onMouseUp']\n    onClick?: LineSvgProps<Series>['onClick']\n    onDoubleClick?: LineSvgProps<Series>['onDoubleClick']\n    onTouchStart?: LineSvgProps<Series>['onTouchStart']\n    onTouchMove?: LineSvgProps<Series>['onTouchMove']\n    onTouchEnd?: LineSvgProps<Series>['onTouchEnd']\n    tooltip: LineSvgPropsWithDefaults<Series>['tooltip']\n    debug: boolean\n    enableTouchCrosshair: LineSvgPropsWithDefaults<Series>['enableTouchCrosshair']\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            onMouseEnter?.(point, event)\n        },\n        [showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            onMouseMove?.(point, event)\n        },\n        [showTooltipAt, tooltip, margin.left, margin.top, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(point, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n\n    const handleMouseDown = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            onMouseDown?.(point, event)\n        },\n        [onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            onMouseUp?.(point, event)\n        },\n        [onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            onClick?.(point, event)\n        },\n        [onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (point: Point<Series>, event: MouseEvent) => {\n            onDoubleClick?.(point, event)\n        },\n        [onDoubleClick]\n    )\n\n    const handleTouchStart = useCallback(\n        (point: Point<Series>, event: TouchEvent) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            onTouchStart?.(point, event)\n        },\n        [margin.left, margin.top, onTouchStart, showTooltipAt, tooltip]\n    )\n\n    const handleTouchMove = useCallback(\n        (point: Point<Series>, event: TouchEvent) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            onTouchMove?.(point, event)\n        },\n        [margin.left, margin.top, onTouchMove, showTooltipAt, tooltip]\n    )\n\n    const handleTouchEnd = useCallback(\n        (point: Point<Series>, event: TouchEvent) => {\n            hideTooltip()\n            onTouchEnd?.(point, event)\n        },\n        [onTouchEnd, hideTooltip]\n    )\n\n    return (\n        <BaseMesh<Point<Series>>\n            nodes={points}\n            width={width}\n            height={height}\n            setCurrent={setCurrent}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onClick={handleClick}\n            onDoubleClick={handleDoubleClick}\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n            onTouchEnd={handleTouchEnd}\n            enableTouchCrosshair={enableTouchCrosshair}\n            debug={debug}\n        />\n    )\n}\n\nexport const Mesh = memo(NonMemoizedMesh) as typeof NonMemoizedMesh\n","import { Fragment, ReactNode, useState, forwardRef, Ref, ReactElement } from 'react'\nimport {\n    // @ts-expect-error no types\n    bindDefs,\n    useDimensions,\n    SvgWrapper,\n    CartesianMarkers,\n    Container,\n    LineCurveFactoryId,\n    WithChartRef,\n} from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair, CrosshairType } from '@nivo/tooltip'\nimport { AnyScale } from '@nivo/scales'\nimport { useLine } from './hooks'\nimport { Areas } from './Areas'\nimport { Lines } from './Lines'\nimport { Slices } from './Slices'\nimport { Points } from './Points'\nimport { Mesh } from './Mesh'\nimport {\n    LineSeries,\n    InferSeriesId,\n    InferY,\n    LineLayerId,\n    LineSvgProps,\n    Point,\n    PointColorContext,\n    SliceData,\n    LineCustomSvgLayerProps,\n    PointTooltipComponent,\n    SliceTooltipComponent,\n    LineSvgPropsWithDefaults,\n} from './types'\nimport { svgDefaultProps } from './defaults'\n\nfunction InnerLine<Series extends LineSeries>(\n    props: LineSvgProps<Series> & { forwardedRef: Ref<SVGSVGElement> }\n) {\n    const {\n        data,\n        xScale: xScaleSpec = svgDefaultProps.xScale,\n        xFormat,\n        yScale: yScaleSpec = svgDefaultProps.yScale,\n        yFormat,\n        curve = svgDefaultProps.curve as LineCurveFactoryId,\n        margin: partialMargin,\n        width,\n        height,\n        colors = svgDefaultProps.colors as OrdinalColorScaleConfig<Series>,\n        lineWidth = svgDefaultProps.lineWidth as number,\n        layers = svgDefaultProps.layers as readonly LineLayerId[],\n        enableArea = svgDefaultProps.enableArea,\n        areaBaselineValue = svgDefaultProps.areaBaselineValue as InferY<Series>,\n        areaOpacity = svgDefaultProps.areaOpacity,\n        areaBlendMode = svgDefaultProps.areaBlendMode,\n        enablePoints = svgDefaultProps.enablePoints,\n        pointSymbol,\n        pointSize = svgDefaultProps.pointSize,\n        pointColor = svgDefaultProps.pointColor as InheritedColorConfig<PointColorContext<Series>>,\n        pointBorderWidth = svgDefaultProps.pointBorderWidth,\n        pointBorderColor = svgDefaultProps.pointBorderColor as InheritedColorConfig<\n            Omit<Point<Series>, 'borderColor'>\n        >,\n        enablePointLabel = svgDefaultProps.enablePointLabel,\n        pointLabel = svgDefaultProps.pointLabel as string,\n        pointLabelYOffset,\n        enableGridX = svgDefaultProps.enableGridX,\n        gridXValues,\n        enableGridY = svgDefaultProps.enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom = svgDefaultProps.axisBottom,\n        axisLeft = svgDefaultProps.axisLeft,\n        defs = svgDefaultProps.defs,\n        fill = svgDefaultProps.fill,\n        markers,\n        legends = svgDefaultProps.legends,\n        isInteractive = svgDefaultProps.isInteractive,\n        useMesh = svgDefaultProps.useMesh,\n        debugMesh = svgDefaultProps.debugMesh,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onMouseDown,\n        onMouseUp,\n        onClick,\n        onDoubleClick,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n        tooltip = svgDefaultProps.tooltip as PointTooltipComponent<Series>,\n        enableSlices = svgDefaultProps.enableSlices,\n        debugSlices = svgDefaultProps.debugSlices,\n        sliceTooltip = svgDefaultProps.sliceTooltip as SliceTooltipComponent<Series>,\n        enableCrosshair = svgDefaultProps.enableCrosshair,\n        crosshairType = svgDefaultProps.crosshairType as CrosshairType,\n        enableTouchCrosshair = svgDefaultProps.enableTouchCrosshair,\n        role = svgDefaultProps.role,\n        ariaLabel,\n        ariaLabelledBy,\n        ariaDescribedBy,\n        isFocusable = svgDefaultProps.isFocusable,\n        pointAriaLabel,\n        pointAriaLabelledBy,\n        pointAriaDescribedBy,\n        pointAriaHidden,\n        pointAriaDisabled,\n        initialHiddenIds = svgDefaultProps.initialHiddenIds as InferSeriesId<Series>[],\n        forwardedRef,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSeries,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine<Series>({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n        initialHiddenIds,\n    })\n\n    const [currentPoint, setCurrentPoint] = useState<Point<Series> | null>(null)\n    const [currentSlice, setCurrentSlice] = useState<SliceData<Series> | null>(null)\n\n    const layerById: Record<LineLayerId, ReactNode> = {\n        grid: null,\n        markers: null,\n        axes: null,\n        areas: null,\n        crosshair: null,\n        lines: null,\n        points: null,\n        slices: null,\n        mesh: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid') && (enableGridX || enableGridY)) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as AnyScale) : null}\n                yScale={enableGridY ? (yScale as AnyScale) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('markers') && Array.isArray(markers) && markers.length > 0) {\n        layerById.markers = (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as AnyScale}\n                yScale={yScale as AnyScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('lines')) {\n        layerById.lines = (\n            <Lines<Series>\n                key=\"lines\"\n                series={series}\n                lineGenerator={lineGenerator}\n                lineWidth={lineWidth}\n            />\n        )\n    }\n\n    if (layers.includes('legends') && legends.length > 0) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legend.data || legendData}\n                        toggleSerie={\n                            legend.toggleSerie\n                                ? (toggleSeries as (id: string | number) => void)\n                                : undefined\n                        }\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas<Series>\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                series={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices<Series>\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onClick={onClick}\n                onDoubleClick={onDoubleClick}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                onTouchEnd={onTouchEnd}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points<Series>\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                borderWidth={pointBorderWidth}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n                isFocusable={isFocusable}\n                setCurrentPoint={setCurrentPoint}\n                tooltip={tooltip}\n                margin={margin}\n                ariaLabel={pointAriaLabel}\n                ariaLabelledBy={pointAriaLabelledBy}\n                ariaDescribedBy={pointAriaDescribedBy}\n                ariaHidden={pointAriaHidden}\n                ariaDisabled={pointAriaDisabled}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null && enableSlices) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh<Series>\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onClick={onClick}\n                onDoubleClick={onDoubleClick}\n                onTouchStart={onTouchStart}\n                onTouchMove={onTouchMove}\n                onTouchEnd={onTouchEnd}\n                tooltip={tooltip}\n                enableTouchCrosshair={enableTouchCrosshair}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    const customLayerProps: LineCustomSvgLayerProps<Series> = {\n        ...(props as LineSvgPropsWithDefaults<Series>),\n        innerWidth,\n        innerHeight,\n        series,\n        slices,\n        points,\n        xScale,\n        yScale,\n        lineGenerator,\n        areaGenerator,\n        currentPoint,\n        setCurrentPoint,\n        currentSlice,\n        setCurrentSlice,\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(customLayerProps)}</Fragment>\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Line = forwardRef(\n    <Series extends LineSeries>(\n        {\n            isInteractive = svgDefaultProps.isInteractive,\n            animate = svgDefaultProps.animate,\n            motionConfig = svgDefaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...otherProps\n        }: LineSvgProps<Series>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            animate={animate}\n            isInteractive={isInteractive}\n            motionConfig={motionConfig}\n            renderWrapper={renderWrapper}\n            theme={theme}\n        >\n            <InnerLine<Series> isInteractive={isInteractive} {...otherProps} forwardedRef={ref} />\n        </Container>\n    )\n) as <Series extends LineSeries>(\n    props: WithChartRef<LineSvgProps<Series>, SVGSVGElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport { Line } from './Line'\nimport { LineSvgProps, LineSeries } from './types'\n\nexport const ResponsiveLine = forwardRef(\n    <Series extends LineSeries>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<LineSvgProps<Series>>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <Line<Series> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <Series extends LineSeries>(\n    props: WithChartRef<ResponsiveProps<LineSvgProps<Series>>, SVGSVGElement>\n) => ReactElement\n","import {\n    createElement,\n    useRef,\n    useEffect,\n    useState,\n    useCallback,\n    forwardRef,\n    ForwardedRef,\n    MouseEvent,\n    useMemo,\n    ReactElement,\n    Ref,\n} from 'react'\nimport { useDimensions, getRelativeCursor, isCursorInRect, Container, mergeRefs } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { OrdinalColorScaleConfig, InheritedColorConfig } from '@nivo/colors'\nimport { useLine } from './hooks'\nimport {\n    InferY,\n    LineCanvasProps,\n    LineLayerId,\n    LineSeries,\n    PointTooltipComponent,\n    Point,\n    LineCustomCanvasLayerProps,\n    PointColorContext,\n} from './types'\nimport { canvasDefaultProps } from './defaults'\nimport { AnyScale } from '@nivo/scales'\n\nconst InnerLineCanvas = <Series extends LineSeries>({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    data,\n    xScale: xScaleSpec = canvasDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = canvasDefaultProps.yScale,\n    yFormat,\n    curve = canvasDefaultProps.curve,\n    layers = canvasDefaultProps.layers as LineLayerId[],\n    colors = canvasDefaultProps.colors as OrdinalColorScaleConfig<Series>,\n    lineWidth = canvasDefaultProps.lineWidth,\n    enableArea = canvasDefaultProps.enableArea,\n    areaBaselineValue = canvasDefaultProps.areaBaselineValue as InferY<Series>,\n    areaOpacity = canvasDefaultProps.areaOpacity,\n    enablePoints = canvasDefaultProps.enablePoints,\n    pointSize = canvasDefaultProps.pointSize,\n    pointColor = canvasDefaultProps.pointColor as InheritedColorConfig<PointColorContext<Series>>,\n    pointBorderWidth = canvasDefaultProps.pointBorderWidth,\n    pointBorderColor = canvasDefaultProps.pointBorderColor as InheritedColorConfig<\n        Omit<Point<Series>, 'borderColor'>\n    >,\n    enableGridX = canvasDefaultProps.enableGridX,\n    gridXValues,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    legends = canvasDefaultProps.legends,\n    isInteractive = canvasDefaultProps.isInteractive,\n    debugMesh = canvasDefaultProps.debugMesh,\n    onMouseLeave,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onDoubleClick,\n    tooltip = canvasDefaultProps.tooltip as PointTooltipComponent<Series>,\n    role,\n    forwardedRef,\n}: Omit<LineCanvasProps<Series>, 'renderWrapper' | 'theme'> & {\n    forwardedRef: Ref<HTMLCanvasElement>\n}) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState<Point<Series> | null>(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine<Series>({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const customLayerProps: LineCustomCanvasLayerProps<Series> = useMemo(\n        () => ({\n            innerWidth,\n            innerHeight,\n            series,\n            points,\n            xScale,\n            yScale,\n            lineWidth,\n            lineGenerator,\n            areaGenerator,\n            currentPoint,\n            setCurrentPoint,\n        }),\n        [\n            innerWidth,\n            innerHeight,\n            series,\n            points,\n            xScale,\n            yScale,\n            lineWidth,\n            lineGenerator,\n            areaGenerator,\n            currentPoint,\n            setCurrentPoint,\n        ]\n    )\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasEl.current === null) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer(ctx, customLayerProps)\n            }\n\n            const gridLineWidth = theme.grid.line.strokeWidth ?? 0\n            if (layer === 'grid' && typeof gridLineWidth !== 'string' && gridLineWidth > 0) {\n                ctx.lineWidth = gridLineWidth\n                ctx.strokeStyle = theme.grid.line.stroke as string\n\n                if (enableGridX) {\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale as AnyScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n                }\n\n                if (enableGridY) {\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale as AnyScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n                }\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale as AnyScale,\n                    yScale: yScale as AnyScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                for (let i = series.length - 1; i >= 0; i--) {\n                    ctx.fillStyle = series[i].color\n                    ctx.beginPath()\n                    areaGenerator(series[i].data.map(d => d.position))\n                    ctx.fill()\n                }\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(seriesItem => {\n                    ctx.strokeStyle = seriesItem.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(seriesItem.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true && voronoi !== undefined) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.absIndex)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        outerWidth,\n        innerHeight,\n        outerHeight,\n        margin.left,\n        margin.top,\n        pixelRatio,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        pointBorderWidth,\n        currentPoint,\n        customLayerProps,\n        debugMesh,\n        enableArea,\n        areaGenerator,\n        areaOpacity,\n        lineWidth,\n        voronoi,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (!canvasEl.current) return null\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay, points]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            hideTooltip()\n            setCurrentPoint(null)\n            if (currentPoint) onMouseLeave?.(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave, currentPoint]\n    )\n\n    const handleMouseDown = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (onMouseDown) {\n                const point = getPointFromMouseEvent(event)\n                if (point) onMouseDown(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onMouseDown]\n    )\n\n    const handleMouseUp = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (onMouseUp) {\n                const point = getPointFromMouseEvent(event)\n                if (point) onMouseUp(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onMouseUp]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                if (point) onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    const handleDoubleClick = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (onDoubleClick) {\n                const point = getPointFromMouseEvent(event)\n                if (point) onDoubleClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onDoubleClick]\n    )\n\n    return (\n        <canvas\n            ref={mergeRefs<HTMLCanvasElement>(canvasEl, forwardedRef)}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onMouseDown={isInteractive ? handleMouseDown : undefined}\n            onMouseUp={isInteractive ? handleMouseUp : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            onDoubleClick={isInteractive ? handleDoubleClick : undefined}\n            role={role}\n        />\n    )\n}\n\nexport const LineCanvas = forwardRef(\n    <Series extends LineSeries>(\n        { isInteractive, renderWrapper, theme, ...props }: LineCanvasProps<Series>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerLineCanvas<Series> {...props} forwardedRef={ref} />\n        </Container>\n    )\n) as <Series extends LineSeries>(\n    props: LineCanvasProps<Series> & {\n        ref?: ForwardedRef<HTMLCanvasElement>\n    }\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport { LineCanvasProps, LineSeries } from './types'\nimport { LineCanvas } from './LineCanvas'\n\nexport const ResponsiveLineCanvas = forwardRef(\n    <Series extends LineSeries>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<LineCanvasProps<Series>>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultWidth}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <LineCanvas<Series> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <Series extends LineSeries>(\n    props: WithChartRef<ResponsiveProps<LineCanvasProps<Series>>, HTMLCanvasElement>\n) => ReactElement\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n"],"names":["epsilon","splitter","resulterrbound","sum","elen","e","flen","f","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","n","Float64Array","B","C1","C2","D","u","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","Math","abs","acxtail","acytail","bcxtail","bcytail","c","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","i","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","from","points","getX","arguments","length","undefined","defaultGetX","getY","defaultGetY","coords","p","constructor","Error","this","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","x","y","i0","i1","i2","minDist","d","dist","i0x","i0y","i1x","i1y","minRadius","r","circumradius","i2x","i2y","quicksort","hull","j","d0","id","subarray","triangles","halfedges","center","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","fill","_hashKey","trianglesLen","_addTriangle","xp","yp","k","start","key","q","t","_legalize","floor","pseudoAngle","a","ar","b","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","px","py","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","arr","tmp","Path","_x0","_y0","_x1","_y1","_","moveTo","concat","closePath","lineTo","arc","x0","y0","rect","w","value","Polygon","push","slice","Voronoi","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t2","t3","x1","y1","x2","y2","x3","y3","ab","sign","render","context","buffer","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","v","_project","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","index","polygon","S","c0","_regioncode","c1","_clipSegment","contains","_step","neighbors","ci","cj","loop","ai","li","aj","lj","_cell","e0","V","_simplify","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","flip","vx0","vy0","vxn","vyn","Array","unshift","splice","vx","vy","tau","PI","pointX","pointY","jitter","sin","cos","Delaunay","that","array","call","flatArray","flatIterable","_delaunator","_hullIndex","collinear","sort","bounds","hypot","hullIndex","voronoi","l","indexOf","find","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","trianglePolygons","trianglePolygon","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","role","L","T","R","o","getNodePosition","margin","map","top","E","width","height","debug","g","bottom","W","U","elementRef","nodes","setCurrent","detectionRadius","m","isInteractive","C","onMouseEnter","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onClick","onDoubleClick","onTouchStart","onTouchMove","z","onTouchEnd","A","enableTouchCrosshair","N","H","tooltip","O","tooltipPosition","I","tooltipAnchor","F","G","J","current","K","s","M","showTooltipAt","X","showTooltipFromEvent","Y","hideTooltip","Z","$","nn","on","en","tn","ln","rn","un","an","handleMouseEnter","handleMouseMove","handleMouseLeave","handleMouseDown","handleMouseUp","handleClick","handleDoubleClick","handleTouchStart","handleTouchMove","handleTouchEnd","data","forwardedRef","outerWidth","outerHeight","domain","range","innerWidth","innerHeight","links","cells","includes","stroke","strokeWidth","ref","children","theme","animate","defaultWidth","defaultHeight","onResize","debounceResize","transform","opacity","style","cursor","save","globalAlpha","beginPath","strokeStyle","lineWidth","restore","fillStyle","ee","oe","xScale","type","yScale","min","curve","colors","scheme","pointBorderWidth","pointBorderColor","enableArea","areaBaselineValue","areaOpacity","enableGridX","enableGridY","legends","point","xFormatted","yFormatted","enableChip","color","seriesColor","sliceTooltip","axis","rows","chip","seriesId","tableCellValue","debugMesh","renderWrapper","ie","defs","enablePointLabel","pointLabel","areaBlendMode","axisTop","axisRight","axisBottom","axisLeft","useMesh","enableSlices","debugSlices","enableCrosshair","crosshairType","initialHiddenIds","motionConfig","isFocusable","ne","pixelRatio","window","devicePixelRatio","te","defined","re","constant","curveLinear","output","path","withPath","area","defined0","x0z","y0z","areaStart","lineStart","lineEnd","areaEnd","arealine","line","lineX0","lineY0","lineY1","lineX1","se","xFormat","yFormat","filter","series","label","Boolean","legendData","hidden","reverse","getPointColor","getPointBorderColor","formatX","formatY","reduce","position","indexInSeries","absIndex","seriesIndex","borderColor","componentId","Map","forEach","has","get","set","entries","ae","toggleSeries","lineGenerator","areaGenerator","getColor","slices","ue","config","immediate","fillOpacity","mixBlendMode","de","ce","thickness","he","fe","isCurrent","touches","document","elementFromPoint","clientX","clientY","getAttribute","strokeOpacity","pe","ve","symbol","size","borderWidth","enableLabel","labelYOffset","setCurrentPoint","ariaLabel","ariaLabelledBy","ariaDescribedBy","ariaHidden","ariaDisabled","datum","onFocus","onBlur","testId","be","ge","me","pointSymbol","pointLabelYOffset","gridXValues","le","gridYValues","ye","xe","Me","Ce","Se","Be","markers","we","Te","ke","We","Le","De","Ie","Fe","Ee","Ge","He","Pe","Re","Oe","ze","Ae","Ve","Ye","Ue","Xe","je","qe","Je","Ke","Ne","Qe","Ze","$e","_e","eo","oo","io","no","to","ro","ao","lo","so","uo","co","pointAriaLabel","ho","pointAriaLabelledBy","fo","pointAriaDescribedBy","po","pointAriaHidden","vo","pointAriaDisabled","bo","go","mo","yo","xo","Mo","Co","So","Bo","wo","To","ko","Wo","Lo","Do","Io","Fo","Eo","Go","Ho","Po","Ro","Oo","zo","Ao","Vo","grid","axes","areas","crosshair","lines","mesh","xValues","yValues","isArray","containerWidth","containerHeight","toggleSerie","Yo","Uo","currentPoint","currentSlice","setCurrentSlice","getContext","scale","background","fillRect","translate","values","pi","tauEpsilon","append","strings","digits","_append","round","appendRound","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","quadraticCurveTo","_templateObject4","bezierCurveTo","_templateObject5","arcTo","x21","y21","x01","y01","l01_2","_templateObject6","x20","y20","l21_2","l20_2","l21","l01","tan","acos","t01","t21","_templateObject8","_templateObject9","_templateObject7","a1","ccw","cw","da","_templateObject0","_templateObject1","_templateObject10","_templateObject11","_templateObject12","toString","shape","RangeError","prototype","require","idCounter","module","exports","prefix"],"sourceRoot":""}