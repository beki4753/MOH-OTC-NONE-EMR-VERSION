{"version":3,"file":"static/js/8286.c6f291c7.chunk.js","mappings":"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","sources":["../node_modules/d3-shape/src/arc.js","../node_modules/@nivo/arcs/src/arc_labels/ArcLabel.tsx","../node_modules/@nivo/arcs/src/utils.ts","../node_modules/@nivo/arcs/src/arcTransitionMode.ts","../node_modules/@nivo/arcs/src/centers.ts","../node_modules/@nivo/arcs/src/arc_labels/ArcLabelsLayer.tsx","../node_modules/@nivo/arcs/src/arc_labels/useArcLabels.ts","../node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabel.tsx","../node_modules/@nivo/arcs/src/arc_link_labels/compute.ts","../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabelsTransition.ts","../node_modules/@nivo/arcs/src/arc_link_labels/ArcLinkLabelsLayer.tsx","../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinkLabels.ts","../node_modules/@nivo/arcs/src/arc_link_labels/useArcLinks.ts","../node_modules/@nivo/arcs/src/ArcShape.tsx","../node_modules/@nivo/arcs/src/interpolateArc.ts","../node_modules/@nivo/arcs/src/ArcsLayer.tsx","../node_modules/@nivo/arcs/src/useArcsTransition.ts","../node_modules/@nivo/arcs/src/interactivity.ts","../node_modules/@nivo/arcs/src/useArcGenerator.ts","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/@nivo/pie/src/PieLegends.tsx","../node_modules/@nivo/pie/src/props.ts","../node_modules/@nivo/pie/src/PieTooltip.tsx","../node_modules/@nivo/pie/src/hooks.ts","../node_modules/d3-shape/src/pie.js","../node_modules/@nivo/arcs/src/boundingBox.ts","../node_modules/@nivo/pie/src/Arcs.tsx","../node_modules/@nivo/pie/src/Pie.tsx","../node_modules/@nivo/pie/src/ResponsivePie.tsx","../node_modules/@nivo/pie/src/PieCanvas.tsx","../node_modules/@nivo/arcs/src/arc_link_labels/canvas.ts","../node_modules/@nivo/arcs/src/arc_labels/canvas.ts","../node_modules/@nivo/pie/src/ResponsivePieCanvas.tsx"],"sourcesContent":["import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\nimport { Text } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <Text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </Text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = (typeof arcTransitionModes)[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport type ArcTransitionProps<ExtraProps extends Record<string, any> = Record<string, never>> =\n    Arc & {\n        progress: number\n    } & ExtraProps\n\nexport const useArcTransitionMode = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) =>\n                ({\n                    progress: 0,\n                    ...transitionMode.enter(datum.arc),\n                    ...(extraTransition ? extraTransition.enter(datum) : {}),\n                }) as ArcTransitionProps<ExtraProps>,\n            update: (datum: Datum) =>\n                ({\n                    progress: 1,\n                    ...transitionMode.update(datum.arc),\n                    ...(extraTransition ? extraTransition.update(datum) : {}),\n                }) as ArcTransitionProps<ExtraProps>,\n            leave: (datum: Datum) =>\n                ({\n                    progress: 0,\n                    ...transitionMode.leave(datum.arc),\n                    ...(extraTransition ? extraTransition.leave(datum) : {}),\n                }) as ArcTransitionProps<ExtraProps>,\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue, TransitionFn } from '@react-spring/web'\nimport { midAngle, positionFromAngle, useMotionConfig } from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport {\n    ArcTransitionMode,\n    ArcTransitionProps,\n    TransitionExtra,\n    useArcTransitionMode,\n} from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<Datum, ArcTransitionProps<ExtraProps>>(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    }) as unknown as TransitionFn<Datum, ArcTransitionProps<ExtraProps>>\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({}) as ExtraProps,\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    skipRadius: ArcLabelsProps<Datum>['arcLabelsSkipRadius']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    skipRadius,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                const angle = Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle))\n                const radius = Math.abs(datum.arc.outerRadius - datum.arc.innerRadius)\n\n                return angle >= skipAngle && radius >= skipRadius\n            }),\n        [data, skipAngle, skipRadius]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        progress: transitionProps.progress,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\nimport { Text } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <Text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </Text>\n        </animated.g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor, offset]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>,\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({}) as ExtraProps,\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback, MouseEvent } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onClick?.(datum, event),\n        [onClick, datum]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onMouseMove?.(datum, event),\n        [onMouseMove, datum]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGPathElement>) => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n            data-testid={`arc.${datum.id}`}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { createElement } from 'react'\nimport { useTheme } from '@nivo/theming'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { TransitionFn, useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport {\n    ArcTransitionMode,\n    useArcTransitionMode,\n    TransitionExtra,\n    ArcTransitionProps,\n} from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, never>,\n>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<Datum, ArcTransitionProps<ExtraProps>>(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    }) as unknown as TransitionFn<Datum, ArcTransitionProps<ExtraProps>>\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, DatumId, LegendDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: LegendDatum<RawDatum>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nexport const PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i: number) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLinkLabels', 'arcLabels', 'legends'],\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsSkipRadius: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n    isInteractive: true,\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    tooltip: PieTooltip,\n    legends: [],\n    role: 'img',\n    pixelRatio: typeof window !== 'undefined' ? (window.devicePixelRatio ?? 1) : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    MayHaveLabel,\n    CompletePieSvgProps,\n    ComputedDatum,\n    DatumId,\n    PieArc,\n    PieCustomLayerProps,\n    LegendDatum,\n    CommonPieProps,\n} from './types'\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: readonly RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n    forwardLegendData,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n    forwardLegendData?: CommonPieProps<RawDatum>['forwardLegendData']\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: LegendDatum<RawDatum>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    const result = useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData: LegendDatum<RawDatum>[] = data.map(item => ({\n            id: item.id,\n            label: item.label,\n            color: item.color,\n            hidden: hiddenIds.includes(item.id),\n            data: item,\n        }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n\n    // Forward the legends data if `forwardLegendData` is defined.\n    const legendData = result.legendData\n    const forwardLegendDataRef = useRef(forwardLegendData)\n    useEffect(() => {\n        if (typeof forwardLegendDataRef.current !== 'function') return\n        forwardLegendDataRef.current(legendData)\n    }, [forwardLegendDataRef, legendData])\n\n    return result\n}\n\n/**\n * Encapsulate the logic for defining/reading the active arc ID,\n * which can be either controlled (handled externally), or uncontrolled\n * (handled internally), we can optionally define a default value when\n * it's uncontrolled.\n */\nconst useActiveId = ({\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId = null,\n}: {\n    activeId?: DatumId | null\n    onActiveIdChange?: (id: DatumId | null) => void\n    defaultActiveId?: DatumId | null\n}) => {\n    const isControlled = typeof activeIdFromProps != 'undefined'\n\n    const [internalActiveId, setInternalActiveId] = useState<DatumId | null>(\n        !isControlled ? defaultActiveId : null\n    )\n\n    const activeId = isControlled ? activeIdFromProps : internalActiveId\n\n    const setActiveId = useCallback(\n        (id: DatumId | null) => {\n            if (onActiveIdChange) {\n                onActiveIdChange(id)\n            }\n\n            if (!isControlled) {\n                setInternalActiveId(id)\n            }\n        },\n        [isControlled, onActiveIdChange, setInternalActiveId]\n    )\n\n    return { activeId, setActiveId }\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n    | 'activeId'\n    | 'onActiveIdChange'\n    | 'defaultActiveId'\n    | 'forwardLegendData'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> &\n    Pick<\n        Partial<CompletePieSvgProps<RawDatum>>,\n        'activeId' | 'onActiveIdChange' | 'defaultActiveId' | 'forwardLegendData'\n    > & {\n        data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    }) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        activeId,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement, forwardRef, Ref, ReactElement } from 'react'\nimport {\n    // @ts-expect-error no types\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n    WithChartRef,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { PieLegends } from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    width,\n    height,\n    margin: partialMargin,\n    colors = defaultProps.colors,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsSkipRadius = defaultProps.arcLabelsSkipRadius,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    transitionMode = defaultProps.transitionMode,\n    legends = defaultProps.legends,\n    forwardLegendData,\n    role = defaultProps.role,\n    forwardedRef,\n}: PieSvgProps<RawDatum> & {\n    forwardedRef: Ref<SVGSVGElement>\n}) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n        forwardLegendData,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                skipRadius={arcLabelsSkipRadius}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ref={forwardedRef}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            isInteractive = defaultProps.isInteractive,\n            animate = defaultProps.animate,\n            motionConfig = defaultProps.motionConfig,\n            theme,\n            renderWrapper,\n            ...otherProps\n        }: PieSvgProps<RawDatum>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <Container\n            animate={animate}\n            isInteractive={isInteractive}\n            motionConfig={motionConfig}\n            renderWrapper={renderWrapper}\n            theme={theme}\n        >\n            <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} forwardedRef={ref} />\n        </Container>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<PieSvgProps<RawDatum>, SVGSVGElement>\n) => ReactElement\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps, MayHaveLabel } from './types'\n\nexport const ResponsivePie = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<PieSvgProps<RawDatum>>,\n        ref: Ref<SVGSVGElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <Pie<RawDatum> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<ResponsiveProps<PieSvgProps<RawDatum>>, SVGSVGElement>\n) => ReactElement\n","import {\n    createElement,\n    useEffect,\n    useMemo,\n    useRef,\n    MouseEvent,\n    forwardRef,\n    Ref,\n    ReactElement,\n} from 'react'\nimport { getRelativeCursor, useDimensions, Container, WithChartRef, mergeRefs } from '@nivo/core'\nimport { useTheme } from '@nivo/theming'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = defaultProps.pixelRatio,\n    colors = defaultProps.colors,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    legends = defaultProps.legends,\n    forwardLegendData,\n    role,\n    forwardedRef,\n}: PieCanvasProps<RawDatum> & {\n    forwardedRef: Ref<HTMLCanvasElement>\n}) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n            activeId: activeIdFromProps,\n            onActiveIdChange,\n            defaultActiveId,\n            forwardLegendData,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        borderWidth,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={mergeRefs(canvasEl, forwardedRef)}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n        />\n    )\n}\n\nexport const PieCanvas = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            isInteractive = defaultProps.isInteractive,\n            theme,\n            renderWrapper,\n            ...otherProps\n        }: PieCanvasProps<RawDatum>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }}>\n            <InnerPieCanvas<RawDatum>\n                isInteractive={isInteractive}\n                {...otherProps}\n                forwardedRef={ref}\n            />\n        </Container>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<PieCanvasProps<RawDatum>, HTMLCanvasElement>\n) => ReactElement\n","import {\n    // @ts-expect-error no types\n    textPropsByEngine,\n} from '@nivo/core'\nimport { Theme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: Theme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    setCanvasFont(ctx, theme.labels.text)\n\n    labels.forEach(label => {\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        drawCanvasText(\n            ctx,\n            {\n                ...theme.labels.text,\n                fill: label.textColor,\n            },\n            String(label.label),\n            label.x,\n            label.y\n        )\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { Theme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: Theme\n) => {\n    setCanvasFont(ctx, theme.labels.text)\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n\n    labels.forEach(label => {\n        drawCanvasText(\n            ctx,\n            {\n                ...theme.labels.text,\n                fill: label.textColor,\n            },\n            String(label.label),\n            label.x,\n            label.y\n        )\n    })\n}\n","import { forwardRef, Ref, ReactElement } from 'react'\nimport { ResponsiveWrapper, ResponsiveProps, WithChartRef } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps, MayHaveLabel } from './types'\n\nexport const ResponsivePieCanvas = forwardRef(\n    <RawDatum extends MayHaveLabel>(\n        {\n            defaultWidth,\n            defaultHeight,\n            onResize,\n            debounceResize,\n            ...props\n        }: ResponsiveProps<PieCanvasProps<RawDatum>>,\n        ref: Ref<HTMLCanvasElement>\n    ) => (\n        <ResponsiveWrapper\n            defaultWidth={defaultWidth}\n            defaultHeight={defaultHeight}\n            onResize={onResize}\n            debounceResize={debounceResize}\n        >\n            {({ width, height }: { width: number; height: number }) => (\n                <PieCanvas<RawDatum> width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n) as <RawDatum extends MayHaveLabel>(\n    props: WithChartRef<ResponsiveProps<PieCanvasProps<RawDatum>>, HTMLCanvasElement>\n) => ReactElement\n"],"names":["arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","x0","y0","x1","y1","r1","rc","cw","x01","y01","lo","sqrt","ox","oy","x11","y11","x10","y10","x00","y00","dx","dy","d2","r","D","max","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","constant","padRadius","context","path","withPath","arc","buffer","r0","apply","this","arguments","a0","halfPi","a1","da","abs","epsilon","tau","moveTo","cos","sin","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","min","rc0","rc1","p0","asin","p1","oc","pi","x2","y2","x3","y3","x32","y32","t","intersect","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","centroid","a","_","length","L","pointerEvents","P","e","label","style","o","i","s","n","g","transform","opacity","progress","children","textAnchor","dominantBaseline","b","labels","text","fill","textColor","O","Math","PI","E","filter","W","enter","update","leave","middleAngle","centerRadius","pushIn","pushOut","j","w","v","p","B","x","y","q","center","data","transitionMode","radiusOffset","u","skipAngle","l","skipRadius","f","component","h","A","R","M","m","animate","config","transition","keys","id","initial","from","immediate","interpolate","S","k","C","c","key","datum","offset","computeExtraProps","map","G","H","stroke","linkColor","strokeWidth","thickness","textPosition","K","side","points","N","Q","U","J","V","Y","diagonalLength","straightLength","textOffset","getLinkColor","getTextColor","interpolateLink","interpolateTextAnchor","interpolateTextPosition","X","$","rn","onClick","onMouseEnter","onMouseMove","onMouseLeave","color","borderColor","borderWidth","an","un","arcGenerator","on","dn","ln","find","fn","NaN","width","height","legends","toggleSerie","T","containerWidth","containerHeight","value","sortByValue","layers","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsSkipRadius","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","isInteractive","motionConfig","tooltip","z","formattedValue","enableChip","role","pixelRatio","window","devicePixelRatio","valueFormat","hidden","activeId","hiddenIds","forwardLegendData","identity","sortValues","descending","sort","pie","array","sum","index","Array","arcs","pa","includes","dataWithArc","angle","angleDeg","legendData","current","onActiveIdChange","defaultActiveId","setActiveId","I","push","round","F","box","ratio","centerX","centerY","radius","debug","indexOf","concat","Z","showTooltipFromEvent","hideTooltip","margin","ee","ie","te","ae","ne","re","oe","de","le","arcLabelsComponent","se","ce","ue","fe","ve","ge","he","Le","be","Ae","pe","Re","ke","me","Ie","Oe","Ce","we","xe","We","Me","arcLinkLabelComponent","ye","Se","Te","De","Ve","Be","ze","He","Ge","Ee","Fe","Xe","Ye","Pe","je","qe","Je","Ke","Ne","Qe","Ue","Ze","$e","forwardedRef","_e","ei","outerWidth","ii","outerHeight","ti","ai","innerWidth","ni","innerHeight","ri","oi","di","li","si","ci","ui","fi","vi","gi","hi","Li","bi","arcLinkLabels","arcLabels","Ai","ref","renderWrapper","defaultWidth","defaultHeight","onResize","debounceResize","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","forEach","beginPath","strokeStyle","lineWidth","textBaseline","textAlign","canvas","align","String","restore","cursor"],"sourceRoot":""}