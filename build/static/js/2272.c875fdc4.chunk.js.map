{"version":3,"file":"static/js/2272.c875fdc4.chunk.js","mappings":"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","sources":["../node_modules/lodash/uniq.js","../node_modules/d3-shape/src/constant.js","../node_modules/lodash/_baseIsDate.js","../node_modules/@nivo/axes/src/compute.ts","../node_modules/@nivo/axes/src/components/AxisTick.tsx","../node_modules/@nivo/axes/src/defaults.ts","../node_modules/@nivo/axes/src/components/Axis.tsx","../node_modules/@nivo/axes/src/props.ts","../node_modules/@nivo/axes/src/components/Axes.tsx","../node_modules/@nivo/axes/src/components/GridLine.tsx","../node_modules/@nivo/axes/src/components/GridLines.tsx","../node_modules/@nivo/axes/src/components/Grid.tsx","../node_modules/@nivo/axes/src/canvas.ts","../node_modules/d3-scale/src/band.js","../node_modules/d3-scale/node_modules/d3-array/src/range.js","../node_modules/d3-scale/node_modules/d3-time/src/duration.js","../node_modules/d3-scale/node_modules/d3-time/src/interval.js","../node_modules/d3-scale/node_modules/d3-time/src/millisecond.js","../node_modules/d3-scale/node_modules/d3-time/src/second.js","../node_modules/d3-scale/node_modules/d3-time/src/minute.js","../node_modules/d3-scale/node_modules/d3-time/src/hour.js","../node_modules/d3-scale/node_modules/d3-time/src/day.js","../node_modules/d3-scale/node_modules/d3-time/src/week.js","../node_modules/d3-scale/node_modules/d3-time/src/month.js","../node_modules/d3-scale/node_modules/d3-time/src/year.js","../node_modules/d3-scale/node_modules/d3-time/src/ticks.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/time.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/@nivo/scales/src/timeHelpers.ts","../node_modules/@nivo/scales/src/linearScale.ts","../node_modules/@nivo/scales/src/pointScale.ts","../node_modules/@nivo/scales/src/bandScale.ts","../node_modules/@nivo/scales/src/timeScale.ts","../node_modules/d3-scale/src/utcTime.js","../node_modules/@nivo/scales/src/logScale.ts","../node_modules/@nivo/scales/src/symlogScale.ts","../node_modules/@nivo/scales/src/compute.ts","../node_modules/@nivo/scales/src/ticks.ts","../node_modules/lodash/isDate.js","../node_modules/d3-shape/src/array.js"],"sourcesContent":["var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-expect-error no types\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    truncateTickAt,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    truncateTickAt?: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const truncateTick = (value: string) => {\n        const valueLength = String(value).length\n\n        if (truncateTickAt && truncateTickAt > 0 && valueLength > truncateTickAt) {\n            return `${String(value).slice(0, truncateTickAt).concat('...')}`\n        }\n        return `${value}`\n    }\n\n    const ticks = values.map((value: Value) => {\n        const processedValue =\n            typeof value === 'string' ? (truncateTick(value) as unknown as Value) : value\n        return {\n            key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n            value: processedValue,\n            ...translate(value),\n            ...line,\n            ...text,\n        }\n    })\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { Text } from '@nivo/text'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    theme,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.line} />\n            <Text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.text}\n            >\n                {`${value}`}\n            </Text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { AxisProps } from './types'\n\nexport const defaultAxisProps: Pick<\n    Required<AxisProps>,\n    'tickSize' | 'tickPadding' | 'tickRotation' | 'legendPosition' | 'legendOffset'\n> = {\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legendPosition: 'middle',\n    legendOffset: 0,\n}\n","import { useMotionConfig } from '@nivo/core'\nimport { useTheme, useExtendedAxisTheme } from '@nivo/theming'\nimport { Text } from '@nivo/text'\nimport { AnyScale, ScaleValue } from '@nivo/scales'\nimport { animated, useSpring, useTransition } from '@react-spring/web'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisProps } from '../types'\nimport { AxisTick } from './AxisTick'\nimport { defaultAxisProps } from '../defaults'\n\nexport const NonMemoizedAxis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = defaultAxisProps.tickSize,\n    tickPadding = defaultAxisProps.tickPadding,\n    tickRotation = defaultAxisProps.tickRotation,\n    format,\n    renderTick = AxisTick,\n    truncateTickAt,\n    legend,\n    legendPosition = defaultAxisProps.legendPosition,\n    legendOffset = defaultAxisProps.legendOffset,\n    style,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n    const axisTheme = useExtendedAxisTheme(theme.axis, style)\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        truncateTickAt,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <>\n                <Text\n                    transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                    textAnchor={textAnchor}\n                    style={{\n                        ...axisTheme.legend.text,\n                        dominantBaseline: 'central',\n                    }}\n                >\n                    {legend}\n                </Text>\n            </>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const getAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => {\n            return {\n                opacity: 1,\n                transform: `translate(${tick.x},${tick.y})`,\n                textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n            }\n        },\n        [tickRotation]\n    )\n    const getFromAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        [tickRotation]\n    )\n\n    const transition = useTransition<\n        (typeof ticks)[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: getAnimatedProps,\n        from: getFromAnimatedProps,\n        enter: getAnimatedProps,\n        update: getAnimatedProps,\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    truncateTickAt: truncateTickAt,\n                    animatedProps: transitionProps,\n                    theme: axisTheme.ticks,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={axisTheme.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nexport const Axis = memo(NonMemoizedAxis) as typeof NonMemoizedAxis\n","export const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                            truncateTickAt={axis.truncateTickAt}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo, SVGAttributes } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/theming'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return (\n            <animated.line\n                {...animatedProps}\n                {...(theme.grid.line as SVGAttributes<SVGLineElement>)}\n            />\n        )\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians } from '@nivo/core'\nimport { Theme, PartialTheme, extendAxisTheme } from '@nivo/theming'\nimport { setCanvasFont, drawCanvasText } from '@nivo/text'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { defaultAxisProps } from './defaults'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n        ticksPosition,\n        tickValues,\n        tickSize = defaultAxisProps.tickSize,\n        tickPadding = defaultAxisProps.tickPadding,\n        tickRotation = defaultAxisProps.tickRotation,\n        format: _format,\n        legend,\n        legendPosition = defaultAxisProps.legendPosition,\n        legendOffset = defaultAxisProps.legendOffset,\n        theme,\n        style,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: Theme\n        style?: PartialTheme['axis']\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    const axisTheme = extendAxisTheme(theme.axis, style)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n\n    setCanvasFont(ctx, axisTheme.ticks.text)\n\n    const domainLineWidth = axisTheme.domain.line.strokeWidth ?? 0\n    if (typeof domainLineWidth !== 'string' && domainLineWidth > 0) {\n        ctx.lineWidth = domainLineWidth\n        ctx.lineCap = 'square'\n\n        if (axisTheme.domain.line.stroke) {\n            ctx.strokeStyle = axisTheme.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    const tickLineWidth = axisTheme.ticks.line.strokeWidth ?? 0\n    const shouldRenderTickLine = typeof tickLineWidth !== 'string' && tickLineWidth > 0\n    ticks.forEach(tick => {\n        if (shouldRenderTickLine) {\n            ctx.lineWidth = tickLineWidth\n            ctx.lineCap = 'square'\n\n            if (axisTheme.ticks.line.stroke) {\n                ctx.strokeStyle = axisTheme.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        drawCanvasText(ctx, axisTheme.ticks.text, `${value}`)\n\n        ctx.fillText(`${value}`, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        setCanvasFont(ctx, axisTheme.legend.text)\n\n        if (axisTheme.legend.text.fill) {\n            ctx.fillStyle = axisTheme.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        drawCanvasText(ctx, axisTheme.legend.text, legend)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: Theme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n","import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = (typeof timePrecisions)[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n","import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { interpolateRound, interpolateNumber } from 'd3-interpolate'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const linearScaleDefaults: Required<ScaleLinearSpec> = {\n    type: 'linear',\n    min: 0,\n    max: 'auto',\n    stacked: false,\n    reverse: false,\n    clamp: false,\n    nice: true,\n    round: false,\n}\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = linearScaleDefaults.min,\n        max = linearScaleDefaults.max,\n        stacked = linearScaleDefaults.stacked,\n        reverse = linearScaleDefaults.reverse,\n        clamp = linearScaleDefaults.clamp,\n        nice = linearScaleDefaults.nice,\n        round = linearScaleDefaults.round,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? (data.minStacked ?? 0) : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? (data.maxStacked ?? 0) : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .interpolate(round ? interpolateRound : interpolateNumber)\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n","import { scalePoint, ScalePoint as D3ScalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n\nexport const castPointScale = <Input extends StringValue>(scale: D3ScalePoint<Input>) => {\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n","import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const bandScaleDefaults: Required<ScaleBandSpec> = {\n    type: 'band',\n    round: false,\n}\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = bandScaleDefaults.round }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input extends StringValue>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n","import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const timeScaleDefaults: Required<ScaleTimeSpec> = {\n    type: 'time',\n    format: 'native',\n    precision: 'millisecond',\n    min: 'auto',\n    max: 'auto',\n    useUTC: true,\n    nice: false,\n}\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = timeScaleDefaults.format,\n        precision = timeScaleDefaults.precision,\n        min = timeScaleDefaults.min,\n        max = timeScaleDefaults.max,\n        useUTC = timeScaleDefaults.useUTC,\n        nice = timeScaleDefaults.nice,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n","import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const logScaleDefaults: Required<ScaleLogSpec> = {\n    type: 'log',\n    base: 10,\n    min: 'auto',\n    max: 'auto',\n    round: false,\n    reverse: false,\n    nice: true,\n}\n\nexport const createLogScale = (\n    {\n        base = logScaleDefaults.base,\n        min = logScaleDefaults.min,\n        max = logScaleDefaults.max,\n        round = logScaleDefaults.round,\n        reverse = logScaleDefaults.reverse,\n        nice = logScaleDefaults.nice,\n    }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>().base(base)\n\n    const range = axis === 'x' ? [0, size] : [size, 0]\n    if (round === true) scale.rangeRound(range)\n    else scale.range(range)\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    // @ts-expect-error not sure why this is not working, it's available for symlog.\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return typedScale\n}\n","import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const symlogScaleDefaults: Required<ScaleSymlogSpec> = {\n    type: 'symlog',\n    constant: 1,\n    min: 'auto',\n    max: 'auto',\n    round: false,\n    reverse: false,\n    nice: true,\n}\n\nexport const createSymlogScale = (\n    {\n        constant = symlogScaleDefaults.constant,\n        min = symlogScaleDefaults.min,\n        max = symlogScaleDefaults.max,\n        round = symlogScaleDefaults.round,\n        reverse = symlogScaleDefaults.reverse,\n        nice = symlogScaleDefaults.nice,\n    }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>().constant(constant)\n\n    const range = axis === 'x' ? [0, size] : [size, 0]\n    if (round === true) scale.rangeRound(range)\n    else scale.range(range)\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n","import uniq from 'lodash/uniq.js'\nimport uniqBy from 'lodash/uniqBy.js'\nimport sortBy from 'lodash/sortBy.js'\nimport last from 'lodash/last.js'\nimport isDate from 'lodash/isDate.js'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date | null\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date | null\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: readonly D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Exclude<Input, null>>(spec, data, size)\n        case 'band':\n            return createBandScale<Exclude<Input, null>>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n","import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\n/**\n * Band and point scales are not centered, meaning the ticks would\n * be positioned at the beginning of each step; however, we want\n * them to be centered for each step.\n */\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable,\n            // however, local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n"],"names":["baseUniq","require","module","exports","array","length","x","baseGetTag","isObjectLike","value","T","t","e","i","axis","n","scale","r","ticksPosition","o","tickValues","l","tickSize","c","tickPadding","s","tickRotation","f","truncateTickAt","d","engine","u","h","m","a","y","p","g","lineX","lineY","v","textX","textY","k","document","dir","b","align","center","P","baseline","top","bottom","left","right","ticks","map","String","slice","concat","A","key","Date","valueOf","textAlign","textBaseline","w","type","O","width","height","values","Array","isArray","x1","x2","y1","y2","X","format","onClick","textAnchor","theme","animatedProps","opacity","style","cursor","transform","children","line","dominantBaseline","textTransform","text","Y","legendPosition","legendOffset","z","B","R","V","C","D","renderTick","j","E","W","legend","q","H","I","F","G","J","K","ariaHidden","L","M","N","Q","U","Z","$","_","tt","et","it","nt","S","rt","at","animate","ot","config","lt","lineX2","lineY2","immediate","ct","st","ft","keys","initial","from","enter","update","leave","tickIndex","rotate","domain","xScale","yScale","grid","lines","xValues","yValues","forEach","save","translate","strokeWidth","lineWidth","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","fillText","restore","fill","fillStyle","band","step","bandwidth","ordinal","unknown","undefined","ordinalRange","range","r0","r1","round","paddingInner","paddingOuter","rescale","reverse","start","stop","Math","max","floor","arguments","ceil","sequence","rangeRound","padding","min","copy","initRange","apply","pointish","point","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","t0","t1","timeInterval","floori","offseti","count","field","interval","date","d0","d1","offset","previous","push","filter","test","setTime","end","every","isFinite","millisecond","second","getMilliseconds","getUTCSeconds","timeMinute","getSeconds","getMinutes","utcMinute","setUTCSeconds","getUTCMinutes","timeHour","getHours","utcHour","setUTCMinutes","getUTCHours","timeDay","setHours","setDate","getDate","getTimezoneOffset","utcDay","setUTCHours","setUTCDate","getUTCDate","unixDay","timeWeekday","getDay","timeSunday","timeMonday","timeTuesday","timeWednesday","timeThursday","timeFriday","timeSaturday","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","timeMonth","setMonth","getMonth","getFullYear","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","timeYear","setFullYear","utcYear","setUTCFullYear","ticker","year","month","week","day","hour","minute","tickIntervals","tickInterval","target","abs","bisector","_ref","tickStep","utcTicks","utcTickInterval","timeTicks","timeTickInterval","nice","i0","i1","x0","number","calendar","continuous","invert","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickFormat","specifier","transformLog","log","transformExp","exp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","pow","powp","formatSpecifier","precision","trim","Infinity","transformer","transformSymlog","sign","log1p","transformSymexp","expm1","symlog","constant","linearish","symlogish","setMilliseconds","setSeconds","setMinutes","useUTC","stacked","clamp","minStacked","maxStacked","interpolate","nn","all","en","rn","an","on","un","utcWeek","utcSecond","utcFormat","UTC","timeWeek","timeSecond","timeFormat","cn","sn","some","Error","dn","mn","ln","vn","getTime","pn","yn","data","hn","gn","Tn","bn","position","series","xn","getValue","setValue","parseFloat","sort","kn","fn","find","Mn","wn","sunday","monday","tuesday","wednesday","thursday","friday","saturday","En","Object","Sn","RegExp","join","Cn","match","Number","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate","prototype"],"sourceRoot":""}