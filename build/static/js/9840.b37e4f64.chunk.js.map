{"version":3,"file":"static/js/9840.b37e4f64.chunk.js","mappings":"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","sources":["pages/bar/index.jsx","components/Header.jsx","../node_modules/lodash/_baseSlice.js","components/BarChart.jsx","theme.js","../node_modules/lodash/isNumber.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport BarChart from \"../../components/BarChart\";\r\n\r\nconst Bar = () => {\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Bar Chart\" subtitle=\"Simple Bar Chart\" />\r\n      <Box height=\"75vh\">\r\n        <BarChart />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import { Typography, Box, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\n\r\nconst Header = ({ title, subtitle }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <Box mb=\"30px\">\r\n      <Typography\r\n        variant=\"h2\"\r\n        color={colors.grey[100]}\r\n        fontWeight=\"bold\"\r\n        sx={{ m: \"0 0 5px 0\" }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" color={colors.greenAccent[400]}>\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport api from \"../utils/api\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\n\r\nconst tokenvalue = getTokenValue();\r\nconst BarChart = ({ isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const today = new Date();\r\n  const startDate = new Date(today);\r\n  startDate.setDate(today.getDate() - 7);\r\n  const [result, setResult] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.put(\"/Payment/Get-all-Payment\", {\r\n          startDate: startDate,\r\n          endDate: today,\r\n          user: tokenvalue?.name,\r\n        });\r\n      \r\n        const summary = response?.data\r\n          ? response?.data?.reduce((acc, payment) => {\r\n              const { paymentType, paymentAmount } = payment;\r\n              // const dateKey = new Date(createdOn).toISOString().split('T')[0];\r\n              if (!acc[paymentType]) {\r\n                acc[paymentType] = 0;\r\n              }\r\n              acc[paymentType] += parseFloat(paymentAmount);\r\n              return acc;\r\n            }, {})\r\n          : [];\r\n      \r\n\r\n        const mapped =  Object.entries(summary).map(([key, value]) => ({\r\n          method: key,\r\n          amount: value,\r\n        }));\r\n        mapped.sort((a, b) => b.y - a.y);\r\n\r\n        setResult(mapped);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // If data hasn't loaded yet\r\n\r\n  return (\r\n    <ResponsiveBar\r\n      data={result} // <-- Use the result directly\r\n      indexBy=\"method\" // <-- Use the x as category\r\n      keys={[\"amount\"]} // <-- y is the value we're plotting\r\n      margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n      padding={0.3}\r\n      theme={{\r\n        axis: {\r\n          domain: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n            },\r\n          },\r\n          legend: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n          ticks: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n              strokeWidth: 1,\r\n            },\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        },\r\n        legends: {\r\n          text: {\r\n            fill: colors.grey[100],\r\n          },\r\n        },\r\n      }}\r\n      // colors={{ scheme: \"nivo\" }}\r\n      colors={colors.greenAccent[500]}\r\n      axisBottom={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Payment Type\",\r\n        legendPosition: \"middle\",\r\n        legendOffset: 32,\r\n      }}\r\n      axisLeft={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Amount\",\r\n        legendPosition: \"middle\",\r\n        legendOffset: -40,\r\n      }}\r\n      legends={[\r\n        {\r\n          dataFrom: \"keys\",\r\n          anchor: \"bottom-right\",\r\n          direction: \"column\",\r\n          justify: false,\r\n          translateX: 120,\r\n          translateY: 0,\r\n          itemsSpacing: 2,\r\n          itemWidth: 100,\r\n          itemHeight: 20,\r\n          itemDirection: \"left-to-right\",\r\n          itemOpacity: 0.85,\r\n          symbolSize: 20,\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemOpacity: 1,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      role=\"application\"\r\n      barAriaLabel={function (e) {\r\n        return e.id + \": \" + e.formattedValue + \" in category: \" + e.indexValue;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarChart;","import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\n// color design tokens export\r\nexport const tokens = (mode) => ({\r\n  ...(mode === \"dark\"\r\n    ? {\r\n        grey: {\r\n          100: \"#e0e0e0\",\r\n          200: \"#c2c2c2\",\r\n          300: \"#a3a3a3\",\r\n          400: \"#858585\",\r\n          500: \"#666666\",\r\n          600: \"#525252\",\r\n          700: \"#3d3d3d\",\r\n          800: \"#292929\",\r\n          900: \"#141414\",\r\n        },\r\n        primary: {\r\n          100: \"#d0d1d5\",\r\n          200: \"#a1a4ab\",\r\n          300: \"#727681\",\r\n          400: \"#1F2A40\",\r\n          500: \"#141b2d\",\r\n          600: \"#101624\",\r\n          700: \"#0c101b\",\r\n          800: \"#080b12\",\r\n          900: \"#040509\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#dbf5ee\",\r\n          200: \"#b7ebde\",\r\n          300: \"#94e2cd\",\r\n          400: \"#70d8bd\",\r\n          500: \"#4cceac\",\r\n          600: \"#3da58a\",\r\n          700: \"#2e7c67\",\r\n          800: \"#1e5245\",\r\n          900: \"#0f2922\",\r\n        },\r\n        redAccent: {\r\n          100: \"#f8dcdb\",\r\n          200: \"#f1b9b7\",\r\n          300: \"#e99592\",\r\n          400: \"#e2726e\",\r\n          500: \"#db4f4a\",\r\n          600: \"#af3f3b\",\r\n          700: \"#832f2c\",\r\n          800: \"#58201e\",\r\n          900: \"#2c100f\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#e1e2fe\",\r\n          200: \"#c3c6fd\",\r\n          300: \"#a4a9fc\",\r\n          400: \"#868dfb\",\r\n          500: \"#6870fa\",\r\n          600: \"#535ac8\",\r\n          700: \"#3e4396\",\r\n          800: \"#2a2d64\",\r\n          900: \"#151632\",\r\n        },\r\n      }\r\n    : {\r\n        grey: {\r\n          100: \"#141414\",\r\n          200: \"#292929\",\r\n          300: \"#3d3d3d\",\r\n          400: \"#525252\",\r\n          500: \"#666666\",\r\n          600: \"#858585\",\r\n          700: \"#a3a3a3\",\r\n          800: \"#c2c2c2\",\r\n          900: \"#e0e0e0\",\r\n        },\r\n        primary: {\r\n          100: \"#040509\",\r\n          200: \"#080b12\",\r\n          300: \"#0c101b\",\r\n          400: \"#f2f0f0\", // manually changed\r\n          500: \"#141b2d\",\r\n          600: \"#1F2A40\",\r\n          700: \"#727681\",\r\n          800: \"#a1a4ab\",\r\n          900: \"#d0d1d5\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#0f2922\",\r\n          200: \"#1e5245\",\r\n          300: \"#2e7c67\",\r\n          400: \"#3da58a\",\r\n          500: \"#4cceac\",\r\n          600: \"#70d8bd\",\r\n          700: \"#94e2cd\",\r\n          800: \"#b7ebde\",\r\n          900: \"#dbf5ee\",\r\n        },\r\n        redAccent: {\r\n          100: \"#2c100f\",\r\n          200: \"#58201e\",\r\n          300: \"#832f2c\",\r\n          400: \"#af3f3b\",\r\n          500: \"#db4f4a\",\r\n          600: \"#e2726e\",\r\n          700: \"#e99592\",\r\n          800: \"#f1b9b7\",\r\n          900: \"#f8dcdb\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#151632\",\r\n          200: \"#2a2d64\",\r\n          300: \"#3e4396\",\r\n          400: \"#535ac8\",\r\n          500: \"#6870fa\",\r\n          600: \"#868dfb\",\r\n          700: \"#a4a9fc\",\r\n          800: \"#c3c6fd\",\r\n          900: \"#e1e2fe\",\r\n        },\r\n      }),\r\n});\r\n\r\n// mui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: {\r\n      mode: mode,\r\n      ...(mode === \"dark\"\r\n        ? {\r\n            // palette values for dark mode\r\n            primary: {\r\n              main: colors.primary[500],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: colors.primary[500],\r\n            },\r\n          }\r\n        : {\r\n            // palette values for light mode\r\n            primary: {\r\n              main: colors.primary[100],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: \"#fcfcfc\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n      fontSize: 12,\r\n      h1: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 40,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 32,\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 24,\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 20,\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 16,\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};\r\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };"],"names":["Bar","_jsxs","Box","m","children","_jsx","Header","title","subtitle","height","BarChart","_ref","theme","useTheme","colors","tokens","palette","mode","mb","Typography","variant","color","grey","fontWeight","sx","greenAccent","module","exports","array","start","end","index","length","result","Array","tokenvalue","getTokenValue","isDashboard","today","Date","startDate","setDate","getDate","setResult","useState","useEffect","async","_response$data","response","api","put","endDate","user","name","summary","data","reduce","acc","payment","paymentType","paymentAmount","parseFloat","mapped","Object","entries","map","_ref2","key","value","method","amount","sort","a","b","y","error","console","fetchData","ResponsiveBar","indexBy","keys","margin","top","right","bottom","left","padding","axis","domain","line","stroke","legend","text","fill","ticks","strokeWidth","legends","axisBottom","tickSize","tickPadding","tickRotation","undefined","legendPosition","legendOffset","axisLeft","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","role","barAriaLabel","e","id","formattedValue","indexValue","_objectSpread","primary","redAccent","blueAccent","ColorModeContext","createContext","toggleColorMode","useMode","setMode","colorMode","useMemo","prev","createTheme","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","themeSettings","baseGetTag","require","isObjectLike","_objectWithoutProperties","t","o","r","i","getOwnPropertySymbols","n","indexOf","propertyIsEnumerable","call"],"sourceRoot":""}