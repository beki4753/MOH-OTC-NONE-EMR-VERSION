{"version":3,"file":"static/js/9064.800de0fe.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","../node_modules/@mui/material/Snackbar/useSnackbar.js","../node_modules/@mui/material/Snackbar/Snackbar.js","../node_modules/@mui/material/Snackbar/snackbarClasses.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"className\", \"message\", \"role\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n      action,\n      className,\n      message,\n      role = 'alert'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useTimeout as useTimeout } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base-ui/react-snackbar/hooks-api/#use-snackbar)\n */\nfunction useSnackbar(parameters = {}) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = useTimeout();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null || onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null || onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    timerAutoHide.start(autoHideDurationParam, () => {\n      handleClose(null, 'timeout');\n    });\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return timerAutoHide.clear;\n  }, [open, autoHideDuration, setAutoHideTimer, timerAutoHide]);\n  const handleClickAway = event => {\n    onClose == null || onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = timerAutoHide.clear;\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null || onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null || onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null || onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null || onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, open, handleResume, handlePause]);\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalProps, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}\nexport default useSnackbar;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useSnackbar from './useSnackbar';\nimport ClickAwayListener from '../ClickAwayListener';\nimport { styled, useTheme } from '../styles';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      open,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive snackbars using a single parent-rendered\n   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.\n   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update\n   * in place, and features like `autoHideDuration` could be affected.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;"],"names":["_excluded","SnackbarContentRoot","styled","Paper","name","slot","overridesResolver","props","styles","root","_ref","theme","emphasis","palette","mode","backgroundColor","emphasize","background","default","_extends","typography","body2","color","vars","SnackbarContent","getContrastText","bg","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","message","SnackbarContentAction","action","marginLeft","paddingLeft","marginRight","React","inProps","ref","useDefaultProps","className","role","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getSnackbarContentUtilityClass","useUtilityClasses","_jsxs","square","elevation","clsx","children","_jsx","generateUtilityClass","generateUtilityClasses","parameters","arguments","length","undefined","autoHideDuration","disableWindowBlurListener","onClose","open","resumeHideDuration","timerAutoHide","useTimeout","document","addEventListener","handleKeyDown","removeEventListener","nativeEvent","defaultPrevented","key","handleClose","useEventCallback","event","reason","setAutoHideTimer","autoHideDurationParam","start","clear","handlePause","handleResume","createHandleFocus","otherHandlers","onFocusCallback","onFocus","createMouseEnter","onMouseEnterCallback","onMouseEnter","createMouseLeave","onMouseLeaveCallback","onMouseLeave","window","getRootProps","externalProps","externalEventHandlers","extractEventHandlers","onBlur","onBlurCallback","onClickAway","_excluded2","SnackbarRoot","concat","capitalize","anchorOrigin","vertical","horizontal","zIndex","snackbar","position","left","right","justifyContent","top","bottom","transform","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ClickAwayListenerProps","ContentProps","TransitionComponent","Grow","transitionDuration","TransitionProps","onEnter","onExited","slots","getSnackbarUtilityClass","useSnackbar","exited","setExited","rootProps","useSlotProps","elementType","getSlotProps","externalForwardedProps","additionalProps","ClickAwayListener","appear","in","timeout","direction","handleEnter","node","isAppearing"],"sourceRoot":""}