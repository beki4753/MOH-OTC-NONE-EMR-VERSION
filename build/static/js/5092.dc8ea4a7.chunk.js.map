{"version":3,"file":"static/js/5092.dc8ea4a7.chunk.js","mappings":"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","sources":["components/PaymentManagement.jsx","components/CancelConfirm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Modal,\r\n  Typography,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  Paper,\r\n  Card,\r\n  Avatar,\r\n  CircularProgress,\r\n  InputAdornment,\r\n  Stack,\r\n  IconButton,\r\n  useTheme,\r\n  OutlinedInput,\r\n  Tabs,\r\n  Tab,\r\n} from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\nimport { PDFDocument, rgb } from \"pdf-lib\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport RenderPDF from \"../pages/hospitalpayment/RenderPDF\";\r\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\nimport MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport LocalAtmIcon from \"@mui/icons-material/LocalAtm\";\r\nimport CreditScoreIcon from \"@mui/icons-material/CreditScore\";\r\nimport VolunteerActivismIcon from \"@mui/icons-material/VolunteerActivism\";\r\nimport PaymentIcon from \"@mui/icons-material/Payment\";\r\nimport api from \"../utils/api\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { formatAccounting2 } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport ReceiptModal from \"../pages/hospitalpayment/ReceiptModal\";\r\nimport { generatePDF } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport CancelConfirm from \"./CancelConfirm\";\r\nimport { CarCrash, Refresh } from \"@mui/icons-material\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\nimport { normalizeText } from \"../utils/normalizer\";\r\nimport CurrencyExchangeIcon from \"@mui/icons-material/CurrencyExchange\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nconst formatter2 = new Intl.NumberFormat(\"en-US\", {\r\n  minimumFractionDigits: 0,\r\n  maximumFractionDigits: 0,\r\n  useGrouping: true,\r\n});\r\n\r\nexport const formatNumber = (num) => {\r\n  const formatted = formatter2.format(Math.abs(num));\r\n  return num < 0 ? `(${formatted})` : formatted;\r\n};\r\n\r\nconst icons = {\r\n  Cash: <LocalAtmIcon />,\r\n  CBHI: <VolunteerActivismIcon />,\r\n  Credit: <CreditScoreIcon />,\r\n  \"Free of Charge\": <MonetizationOnIcon />,\r\n  Reversed: <CurrencyExchangeIcon />,\r\n  Digital: <AttachMoneyIcon />,\r\n  Traffic: <CarCrash />,\r\n};\r\n\r\n//const creditOrganizations = [\"Tsedey Bank\", \"Amhara Bank\", \"Ethio Telecom\"]; // example list\r\nconst initialState = {\r\n  PRNo: \"\",\r\n  services: \"\",\r\n  method: \"\",\r\n  digitalChannel: \"\",\r\n  trxref: \"\",\r\n  organization: \"\",\r\n  employeeId: \"\",\r\n};\r\n\r\nfunction PaymentManagement() {\r\n  const [rows, setRows] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [isChecking, setIsChecking] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [paymentOptions, setPaymentOptions] = useState([]);\r\n  const [digitalChannels, setDigitalChannels] = useState([]);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [trxRefError, settrxRefError] = useState(\"\");\r\n  const [paperReError, setPaperReError] = useState(\"\");\r\n  const [formDataError, setFormDataError] = useState(initialState);\r\n  const [creditOrganizations, setcreditOrganizations] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [totals, setTotals] = useState({});\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [receiptOpen, setReceiptOpen] = useState(false);\r\n  const [receiptData, setReceiptData] = useState(null);\r\n  const [isPrintLoading, setIsPrintLoading] = useState(false);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [cancelLoad, setCancelLoad] = useState(false);\r\n  const [renderDescription, setRenderDescription] = useState(false);\r\n  const [selectedLocation, setSelectedLocation] = useState(\"ALL\");\r\n  const [selectedLocationCount, setSelectedLocationCount] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const getCountByLocation = (locationName) => {\r\n    try {\r\n      const match = selectedLocationCount?.find(\r\n        (item) => item?.name === locationName\r\n      );\r\n      return match?.count ?? 0;\r\n    } catch (error) {\r\n      console.error(\"This is getCountByLocation Error :  \", error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Location Fetcher\r\n  useEffect(() => {\r\n    const getLocations = () => {\r\n      try {\r\n        if (rows?.length > 0) {\r\n          const allPurposes = rows.flatMap((item) =>\r\n            item?.requestedCatagories?.map((cat) => cat?.purpose)\r\n          );\r\n\r\n          // Getting unique purposes\r\n          const purposeSet = new Set(allPurposes);\r\n          const purpose = [\r\n            \"ALL\",\r\n            ...Array.from(purposeSet).sort((a, b) => a.localeCompare(b)),\r\n          ];\r\n          setLocations(purpose);\r\n\r\n          // Count purposes\r\n          const counts = allPurposes.reduce((acc, curr) => {\r\n            if (curr) acc[curr] = (acc[curr] || 0) + 1;\r\n            return acc;\r\n          }, {});\r\n\r\n          //count as the total count of all purposes\r\n          counts[\"ALL\"] = allPurposes.length;\r\n\r\n          // Converting to array of { name, count }\r\n          const purposeCounts = Object.entries(counts).map(([name, count]) => ({\r\n            name,\r\n            count,\r\n          }));\r\n\r\n          setSelectedLocationCount(purposeCounts);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"This is getLocations Error: \", error);\r\n      }\r\n    };\r\n\r\n    getLocations();\r\n  }, [rows]);\r\n\r\n  //setRenderDescription check\r\n  useEffect(() => {\r\n    const check = paymentOptions\r\n      ?.filter(\r\n        (item) => normalizeText(item.type) === normalizeText(formData?.method)\r\n      )\r\n      .some(\r\n        (item) =>\r\n          Array.isArray(item.description) &&\r\n          item.description.some(\r\n            (desc) =>\r\n              desc?.description && desc.description.toString().trim().length > 0\r\n          )\r\n      );\r\n    if (check) {\r\n      const value = paymentOptions?.filter(\r\n        (item) => normalizeText(item.type) === normalizeText(formData?.method)\r\n      )[0]?.description;\r\n      setServices(value);\r\n    } else {\r\n      setServices([]);\r\n    }\r\n    setRenderDescription(check);\r\n  }, [paymentOptions, formData?.method]);\r\n\r\n  // Fetch all payment types with descriptions\r\n  const fetchPaymentTypes = async () => {\r\n    try {\r\n      const response = await api.get(\"/Lookup/payment-type-description\");\r\n      if (response?.status === 200) {\r\n        setPaymentOptions(\r\n          response.data.data\r\n            ?.map(({ id, ...rest }, index) => ({\r\n              id: index + 1,\r\n              mainId: id,\r\n              ...rest,\r\n            }))\r\n            ?.filter(\r\n              (item) => normalizeText(item?.type) !== normalizeText(\"all\")\r\n            )\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch error:\", error);\r\n      toast.error(\"Failed to load payment types\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPaymentTypes();\r\n  }, []);\r\n\r\n  const handleMethodChange = (event, newValue) => {\r\n    setSelectedLocation(newValue);\r\n  };\r\n\r\n  const filteredRows =\r\n    rows\r\n      ?.filter((payment) => {\r\n        if (selectedLocation === \"ALL\") return true;\r\n\r\n        const categories = payment?.requestedCatagories;\r\n        if (!Array.isArray(categories) || categories.length === 0) return false;\r\n\r\n        return categories.every(\r\n          (item) =>\r\n            item?.purpose?.toLowerCase() === selectedLocation.toLowerCase()\r\n        );\r\n      })\r\n      ?.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn)) || [];\r\n\r\n  //Fetch Organization with agreement\r\n  useEffect(() => {\r\n    const fetchORG = async () => {\r\n      try {\r\n        const response = await api.get(`/Organiztion/Organization`);\r\n        if (response?.status === 200 || response?.status === 201) {\r\n          setcreditOrganizations(\r\n            response?.data?.map((item) => item.organization)\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchORG();\r\n  }, []);\r\n\r\n  //All Payments by casher\r\n  useEffect(() => {\r\n    const fetchPaymetInfo = async () => {\r\n      try {\r\n        const response = await api.put(\r\n          \"/Payment/payment-by-cashier\",\r\n          tokenvalue.name,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.status === 200) {\r\n          const sortedPayment = await response?.data.sort(\r\n            (a, b) => b.id - a.id\r\n          );\r\n          updatePaymentSummary(sortedPayment);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchPaymetInfo();\r\n  }, [refresh]);\r\n\r\n  const updatePaymentSummary = (payments) => {\r\n    try {\r\n      if (!Array.isArray(payments)) {\r\n        throw new Error(\"Invalid payments data: expected an array.\");\r\n      }\r\n\r\n      const summary = payments.reduce((acc, payment) => {\r\n        const { paymentType, paymentAmount, isReversed } = payment;\r\n        const amount = parseFloat(paymentAmount);\r\n\r\n        if (isNaN(amount)) {\r\n          // Skip invalid amounts\r\n          return acc;\r\n        }\r\n\r\n        // Initialize sums for paymentType if not present\r\n        if (!acc[paymentType]) {\r\n          acc[paymentType] = 0;\r\n        }\r\n\r\n        // Initialize sums for reversed payments of this paymentType\r\n        const reversedKey = `${paymentType} REVERSED`;\r\n        if (!acc[reversedKey]) {\r\n          acc[reversedKey] = 0;\r\n        }\r\n\r\n        if (isReversed === true) {\r\n          // Add to reversed sum for this paymentType (positive amount)\r\n          acc[reversedKey] -= amount;\r\n        } else {\r\n          // Add to normal sum for this paymentType\r\n          acc[paymentType] += amount;\r\n        }\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      // Remove reversed keys with zero or falsy values\r\n      Object.keys(summary).forEach((key) => {\r\n        if (\r\n          key.endsWith(\" REVERSED\") &&\r\n          (!summary[key] || summary[key] === 0)\r\n        ) {\r\n          delete summary[key];\r\n        }\r\n      });\r\n\r\n      setTotals(summary);\r\n\r\n      // Calculate total excluding reversed amounts\r\n      const total = Object.entries(summary)\r\n        .filter(([key]) => !key.includes(\"REVERSED\"))\r\n        .reduce((acc, [, value]) => acc + value, 0);\r\n\r\n      setTotal(total);\r\n    } catch (error) {\r\n      console.error(\"This is update Payment Summary Error: \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChane = async () => {\r\n      try {\r\n        const response = await api.get(\"/Lookup/payment-channel\");\r\n        if (response?.status === 200) {\r\n          setDigitalChannels(response?.data?.map((item) => item.channel));\r\n        }\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchChane();\r\n  }, []);\r\n\r\n  const handleConfClose = () => {\r\n    setOpenConfirm(false);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleCancel = async (confirm) => {\r\n    try {\r\n      if (confirm.message === \"Yes Please!\") {\r\n        setCancelLoad(true);\r\n        const endPoint = selectedRow?.whoRequested\r\n          ?.toLowerCase()\r\n          ?.includes(\"nurse\")\r\n          ? \"/Patient/cancel-nurse-request\"\r\n          : selectedRow?.whoRequested?.toLowerCase()?.includes(\"doctor\")\r\n          ? \"/Request/doctor/cancel-request\"\r\n          : \"/Patient/cancel-patient-request\";\r\n        const results = await Promise.allSettled(\r\n          confirm?.selectedPayload?.map((item) =>\r\n            api.delete(endPoint, {\r\n              data: {\r\n                patientCardNumber: item.patientCardNumber,\r\n                groupID: item.groupID,\r\n                purpose: item.purpose,\r\n              },\r\n            })\r\n          )\r\n        );\r\n\r\n        results.forEach((result, index) => {\r\n          if (result.status === \"fulfilled\" && result?.value?.status === 200) {\r\n            const msg = result.value.data?.msg || \"Success\";\r\n            const purpose =\r\n              JSON.parse(result?.value?.config?.data)?.purpose || \"Unknown\";\r\n            toast.success(\r\n              `✅ Success ${index + 1}: ${msg} (Purpose: ${purpose})`\r\n            );\r\n          } else {\r\n            const errorMsg =\r\n              result?.reason?.response?.data?.msg ||\r\n              result?.reason?.message ||\r\n              \"Unknown error occurred\";\r\n\r\n            toast.error(`❌ Failed ${index + 1}: ${errorMsg}`);\r\n            setCancelLoad(false);\r\n          }\r\n        });\r\n        setRefresh((prev) => !prev);\r\n        setCancelLoad(false);\r\n        handleConfClose();\r\n      } else {\r\n        setSelectedRow(confirm);\r\n        setOpenConfirm(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is canceling Payment error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"method\") {\r\n      setFormData({\r\n        ...formData,\r\n        method: e.target.value,\r\n        digitalChannel: \"\",\r\n        trxref: \"\",\r\n        organization: \"\",\r\n        employeeId: \"\",\r\n        services: \"\",\r\n        PRNo: \"\",\r\n      });\r\n\r\n      setFormDataError({\r\n        ...formDataError,\r\n        method: \"\",\r\n        digitalChannel: \"\",\r\n        trxref: \"\",\r\n        organization: \"\",\r\n        employeeId: \"\",\r\n        services: \"\",\r\n        PRNo: \"\",\r\n      });\r\n      settrxRefError(\"\");\r\n      setPaperReError(\"\");\r\n    } else {\r\n      if (e.target.name === \"trxref\") {\r\n        validateTransactionRef(e.target.value);\r\n      }\r\n\r\n      if (e.target.name === \"employeeId\") {\r\n        letterNumberCheck(e.target.name, e.target.value);\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        return;\r\n      }\r\n\r\n      if (e.target.name === \"PRNo\") {\r\n        numberOnlyCheck(e.target.value);\r\n      }\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n      setFormDataError({ ...formDataError, [e.target.name]: \"\" });\r\n    }\r\n  };\r\n\r\n  const numberOnlyCheck = (num) => {\r\n    const numRegx = /^[0-9]{6,}$/;\r\n    if (!numRegx.test(num) && num?.length > 0) {\r\n      setPaperReError(\"Please insert valid receipt number.\");\r\n    } else {\r\n      setPaperReError(\"\");\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  const validateTransactionRef = (trxRef) => {\r\n    const trxPattern = /^[A-Za-z0-9-_]{10,25}$/;\r\n\r\n    if (!trxRef) {\r\n      settrxRefError(\"Transaction reference is required\");\r\n    } else if (!trxPattern.test(trxRef)) {\r\n      settrxRefError(\r\n        \"Invalid format. Use 10-25 characters with letters, numbers, -, _\"\r\n      );\r\n    } else {\r\n      settrxRefError(\"\");\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  const letterNumberCheck = (name, value) => {\r\n    try {\r\n      const valid = /^[a-zA-Z0-9\\u1200-\\u137F\\s/\\\\]+$/.test(value);\r\n\r\n      if (!valid && value?.length > 0) {\r\n        setFormDataError({\r\n          ...formDataError,\r\n          [name]: \"Letters and numbers and \\\\ / only.\",\r\n        });\r\n      } else {\r\n        setFormDataError({\r\n          ...formDataError,\r\n          [name]: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is letterNumberCheck Error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleOpenModal = (row) => {\r\n    try {\r\n      setSelectedRow(row);\r\n      setOpenModal(true);\r\n    } catch (error) {\r\n      console.error(\"This is The Open Modal error: \", error);\r\n      toast.error(\"Unable to open.\");\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setFormData(initialState);\r\n    setFormDataError(initialState);\r\n    settrxRefError(\"\");\r\n    setPaperReError(\"\");\r\n    setSelectedRow(null);\r\n    setServices([]);\r\n  };\r\n\r\n  const handleConfSave = async () => {\r\n    try {\r\n      const errorMessage = \"Please Fill this field\";\r\n      const errors = {};\r\n\r\n      const method = formData.method?.toUpperCase();\r\n\r\n      // Basic validation\r\n      if (!formData.method) {\r\n        errors.method = errorMessage;\r\n      }\r\n\r\n      if (method?.includes(\"DIGITAL\")) {\r\n        if (!formData.digitalChannel) errors.digitalChannel = errorMessage;\r\n        if (!formData.trxref || trxRefError) errors.trxref = errorMessage;\r\n      }\r\n\r\n      if (method?.includes(\"CREDIT\")) {\r\n        if (!formData.organization) errors.organization = errorMessage;\r\n        if (!formData.employeeId) errors.employeeId = errorMessage;\r\n      }\r\n\r\n      if (method?.includes(\"CASH\")) {\r\n        if (!formData.PRNo || paperReError) errors.PRNo = errorMessage;\r\n      }\r\n\r\n      if (services?.length > 0 && !formData.services) {\r\n        errors.services = errorMessage;\r\n      }\r\n\r\n      if (Object.keys(errors).length > 0) {\r\n        setFormDataError((prev) => ({ ...prev, ...errors }));\r\n        toast.error(\"Please Fill All Fields.\");\r\n        return;\r\n      }\r\n\r\n      // Check for form-level errors (e.g., client validation)\r\n      if (Object.values(formDataError).some((msg) => msg?.length > 0)) {\r\n        toast.error(\"Please fix the error first.\");\r\n        return;\r\n      }\r\n\r\n      // Ensure at least one item is paid\r\n      const paidItems = selectedRow?.requestedCatagories?.filter(\r\n        (item) => item.isPaid === true\r\n      );\r\n\r\n      if (!paidItems?.length) {\r\n        toast.error(\"Should have at least one payment.\");\r\n        return;\r\n      }\r\n\r\n      const totalPaidAmount = paidItems.reduce(\r\n        (sum, item) => sum + (item.amount || 0),\r\n        0\r\n      );\r\n      if (totalPaidAmount <= 0) {\r\n        toast.error(\"Should have Total Amount Greater than zero (0).\");\r\n        return;\r\n      }\r\n\r\n      const checkData = {\r\n        cardNumber: selectedRow?.patientCardNumber,\r\n        amount: paidItems,\r\n        method: formData?.method,\r\n        reason: paidItems.map((item) => item.purpose),\r\n        description: \"-\",\r\n      };\r\n\r\n      setReceiptOpen(true);\r\n      setReceiptData(checkData || []);\r\n    } catch (error) {\r\n      console.error(\"This is Handle Confirm Error:\", error);\r\n      toast.error(\"Internal Server Error.\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setIsPrintLoading(true);\r\n\r\n      const isNurse = selectedRow?.whoRequested\r\n        ?.toLowerCase()\r\n        ?.includes(\"nurse\");\r\n      // const isDoctor = selectedRow?.whoRequested?.toLowerCase() === \"doctor\";\r\n      const isLab = selectedRow?.requestedDepartment?.toLowerCase() === \"lab\";\r\n      const isPharmacy =\r\n        selectedRow?.requestedDepartment?.toLowerCase() === \"pharmacy\";\r\n\r\n      // Format the amount array as expected\r\n      const amountArray = (selectedRow?.requestedCatagories || []).map(\r\n        (item) => ({\r\n          amount: Number(item?.amount || 0),\r\n          purpose: item?.purpose || \"-\",\r\n          groupID: item?.groupID || \"-\",\r\n          isPaid: true,\r\n        })\r\n      );\r\n\r\n      const payload = {\r\n        paymentType: formData?.method,\r\n        cardNumber: selectedRow?.patientCardNumber,\r\n        descriptionId:\r\n          services?.length > 0\r\n            ? services?.find(\r\n                (item) =>\r\n                  normalizeText(item.description) ===\r\n                  normalizeText(formData?.services)\r\n              )?.id || 0\r\n            : 0,\r\n        amount: amountArray,\r\n        description: \"-\",\r\n        createdby: tokenvalue?.name,\r\n        paymentRefNo: formData?.PRNo,\r\n        channel: formData?.digitalChannel || \"-\",\r\n        paymentVerifingID: formData?.trxref || \"-\",\r\n        patientWorkID: formData?.employeeId || \"-\",\r\n        organization: formData?.organization || \"-\",\r\n        // request source flags\r\n        ...(isNurse && { isNurseRequest: true }),\r\n        ...(isLab && { isLabRequest: true }),\r\n        ...(isPharmacy && { isPharmacy: true }),\r\n      };\r\n\r\n      const response = await api.post(\"/Payment/add-payment\", payload, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response?.data?.refNo?.length > 0) {\r\n        toast.success(`Payment Regitstered Under ${response?.data?.refNo}`);\r\n        setRefresh((prev) => !prev);\r\n        const data = {\r\n          method: formData.method || \"\",\r\n          amount:\r\n            selectedRow?.requestedCatagories?.filter(\r\n              (item) => item.isPaid === true\r\n            ) || \"\",\r\n          patientName: selectedRow?.patientFName || \"\",\r\n          cardNumber: selectedRow?.patientCardNumber || \"\",\r\n          digitalChannel: formData?.digitalChannel || \"\",\r\n          trxref: formData?.trxref || \"\",\r\n          organization: formData?.organization || \"\",\r\n          employeeId: formData?.employeeId || \"\",\r\n          cbhiId: response?.data?.data?.map((item) => item.patientCBHI_ID)[0],\r\n          refNo: response?.data?.refNo || \"-\",\r\n          recipt: formData?.PRNo || \"-\",\r\n        };\r\n\r\n        await generatePDF(data);\r\n        setIsPrintLoading(false);\r\n        setReceiptData(null);\r\n        handleCloseModal();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is Error on handle Save: \", error);\r\n      toast.error(\r\n        error?.response?.data?.errorDescription || \"Internal Server Error.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n      setIsPrintLoading(false);\r\n      setReceiptOpen(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientFName\", headerName: \"First Name\", flex: 1 },\r\n    { field: \"patientGender\", headerName: \"Gender\", flex: 1 },\r\n    {\r\n      field: \"noRequestedServices\",\r\n      headerName: \"No of Requested Services\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"requestedCatagories\",\r\n      headerName: \"Reason\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          return params?.row?.requestedCatagories\r\n            .map((item) => item?.purpose)\r\n            .join(\", \");\r\n        } catch (error) {\r\n          console.error(\"Error Occured on rendering: \", error);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      field: \"totalPrice\",\r\n      headerName: \"Amount\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          return formatAccounting2(params.row.totalPrice);\r\n        } catch (error) {\r\n          console.error(\"Error Occured on rendering: \", error);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      field: \"paid\",\r\n      headerName: \"Status\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          return params.row.paid ? \"Completed\" : \"Pending\";\r\n        } catch (error) {\r\n          console.error(\"Error Occured on rendering: \", error);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      field: \"whoRequested\",\r\n      headerName: \"Request From\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"createdOn\",\r\n      headerName: \"Date\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          return renderETDateAtCell(params?.row?.createdOn);\r\n        } catch (error) {\r\n          console.error(\"Error Occured on rendering: \", error);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Manage\",\r\n      flex: 1,\r\n      renderCell: (params) => (\r\n        <Button\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          onClick={() => handleOpenModal(params.row)}\r\n        >\r\n          Manage\r\n        </Button>\r\n      ),\r\n    },\r\n    {\r\n      field: \"cancel\",\r\n      headerName: \"Cancel\",\r\n      flex: 1,\r\n      renderCell: (params) => (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"error\"\r\n          onClick={() => handleCancel(params.row)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //Fetch DataGrid Data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setRows([]);\r\n        const [resDoctor, res1, res2] = await Promise.all([\r\n          api.get(\"/Request/doctor/get-request-casheir\"),\r\n          api.put(\"/Patient/get-patient-request-cashier\", {\r\n            loggedInUser: tokenvalue?.name,\r\n          }),\r\n          api.put(\"/Patient/get-nurse-request-cashier\"),\r\n        ]);\r\n\r\n        // ✅ 1. Group & Map Doctor Requests\r\n        const doctorData = resDoctor?.data?.data?.value || [];\r\n\r\n        const groupedDoctorData = doctorData.reduce((acc, item) => {\r\n          const key = `${item.patientCardNumber}_${new Date(item.createdOn)\r\n            .toISOString()\r\n            .slice(0, 16)}`; // grouped to nearest minute\r\n\r\n          if (!acc[key]) {\r\n            acc[key] = {\r\n              patientCardNumber: item.patientCardNumber,\r\n              patientFName: [\r\n                item.patientFirstName,\r\n                item.patientMiddleName,\r\n                item.patientLastName,\r\n              ]\r\n                .filter(Boolean)\r\n                .join(\" \"),\r\n              requestedDepartment: item.requestedDepartment || null,\r\n              patientMotherName: item.patientMotherName || null,\r\n              patientAge: item.patientAge,\r\n              patientGender: item.patientGender,\r\n              createdBy: item.requestedBy || \"-\",\r\n              createdOn: item.createdOn,\r\n              whoRequested: \"Doctor\",\r\n              requestedCatagories: [],\r\n            };\r\n          }\r\n\r\n          acc[key].requestedCatagories.push(\r\n            ...item.requestedItems.map((r) => ({\r\n              purpose: r.requestedServices,\r\n              groupID: item.requestGroup,\r\n              amount: Number(r.price) || 0,\r\n              isPaid: true,\r\n            }))\r\n          );\r\n\r\n          return acc;\r\n        }, {});\r\n\r\n        const modDoctorData = Object.values(groupedDoctorData).map((entry) => {\r\n          const totalPrice = entry.requestedCatagories.reduce(\r\n            (sum, item) => sum + Number(item.amount || 0),\r\n            0\r\n          );\r\n\r\n          const summarizedPurpose =\r\n            entry.requestedDepartment?.toLowerCase() === \"lab\"\r\n              ? \"Laboratory\"\r\n              : entry.requestedDepartment?.toLowerCase() === \"pharmacy\"\r\n              ? \"Medicines\"\r\n              : \"Other\";\r\n\r\n          return {\r\n            ...entry,\r\n            totalPrice,\r\n            noRequestedServices: entry.requestedCatagories.length,\r\n            requestedCatagories: [\r\n              {\r\n                purpose: summarizedPurpose,\r\n                amount: totalPrice,\r\n                groupID: entry.requestedCatagories[0]?.groupID || \"-\",\r\n                isPaid: true,\r\n              },\r\n            ],\r\n            paid: false,\r\n            isCompleted: false,\r\n          };\r\n        });\r\n        // ✅ 2. Lab / Radiology Data\r\n        const modData = (res1?.data || []).map(\r\n          ({\r\n            patientFirstName,\r\n            patientMiddleName,\r\n            patientLastName,\r\n            ...rest\r\n          }) => ({\r\n            patientFName: [patientFirstName, patientMiddleName, patientLastName]\r\n              .filter(Boolean)\r\n              .join(\" \"),\r\n            whoRequested: (rest?.requestedCatagories || [])\r\n              .map((i) => i?.purpose)\r\n              .join(\", \")\r\n              ?.toLowerCase()\r\n              ?.includes(\"laboratory\")\r\n              ? \"Laboratory\"\r\n              : \"Radiology\",\r\n            ...rest,\r\n          })\r\n        );\r\n\r\n        // ✅ 3. Ward Nurse Requests\r\n        const modData2 = (res2?.data || []).map(\r\n          ({\r\n            patientFirstName,\r\n            patientMiddleName,\r\n            patientLastName,\r\n            rquestedServices,\r\n            ...rest\r\n          }) => ({\r\n            patientFName: [patientFirstName, patientMiddleName, patientLastName]\r\n              .filter(Boolean)\r\n              .join(\" \"),\r\n            requestedCatagories: rquestedServices?.map(\r\n              ({ services, price, amount, ...r }) => ({\r\n                purpose: services,\r\n                amount: price,\r\n                isPaid: true,\r\n                ...r,\r\n              })\r\n            ),\r\n            whoRequested: \"Nurse (Ward)\",\r\n            ...rest,\r\n          })\r\n        );\r\n\r\n        // ✅ 4. Merge and Assign IDs\r\n        const merged = [...modDoctorData, ...modData, ...modData2].map(\r\n          (item, index) => ({\r\n            ...item,\r\n            id: index + 1,\r\n          })\r\n        );\r\n\r\n        setRows(merged);\r\n      } catch (error) {\r\n        console.error(\"This is Fetch Table Data Error: \", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  const openNewTab = (id) => {\r\n    window.open(\r\n      `https://cs.bankofabyssinia.com/slip/?trx=${id}`,\r\n      \"_blank\",\r\n      \"noopener,noreferrer\"\r\n    );\r\n  };\r\n\r\n  const generateAndOpenPDF = async (error) => {\r\n    try {\r\n      const responseData = error?.response?.data;\r\n\r\n      // Check if response is a Blob (e.g., an actual PDF file)\r\n      if (responseData instanceof Blob) {\r\n        const blobUrl = URL.createObjectURL(responseData);\r\n        window.open(blobUrl, \"_blank\");\r\n\r\n        // Revoke the blob after a few seconds to free memory\r\n        setTimeout(() => URL.revokeObjectURL(blobUrl), 5000);\r\n        return;\r\n      }\r\n\r\n      // If it's not a Blob, try to extract message\r\n      let message = \"Incorrect Receipt ID\";\r\n      if (responseData?.message) {\r\n        message = String(responseData.message);\r\n      }\r\n\r\n      // Generate a simple PDF with the message using pdf-lib\r\n      const pdfDoc = await PDFDocument.create();\r\n      const page = pdfDoc.addPage([600, 400]);\r\n      const { height } = page.getSize();\r\n\r\n      page.drawText(message, {\r\n        x: 50,\r\n        y: height - 100,\r\n        size: 16,\r\n        color: rgb(0, 0, 0),\r\n      });\r\n\r\n      const pdfBytes = await pdfDoc.save();\r\n      const pdfBlob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n      const pdfUrl = URL.createObjectURL(pdfBlob);\r\n\r\n      window.open(pdfUrl, \"_blank\");\r\n      setTimeout(() => URL.revokeObjectURL(pdfUrl), 5000);\r\n    } catch (err) {\r\n      console.error(\"generateAndOpenPDF error:\", err);\r\n    }\r\n  };\r\n\r\n  const handleOpenPage = async () => {\r\n    try {\r\n      setIsChecking(true);\r\n      if (formData?.trxref?.length <= 0) {\r\n        toast.info(\"Transaction Refference Number is Empty.\");\r\n        return;\r\n      }\r\n\r\n      if (\r\n        formDataError?.trxref?.length > 0 ||\r\n        trxRefError?.length > 0 ||\r\n        paperReError?.length > 0\r\n      ) {\r\n        toast.info(\"Please Fix The Error First.\");\r\n        return;\r\n      }\r\n      const receptId = formData?.trxref;\r\n\r\n      let config = {};\r\n      let url;\r\n      if (\r\n        formData.digitalChannel.toUpperCase().includes(\"CBE MOBILE BANKING\") ||\r\n        formData.digitalChannel.toUpperCase().includes(\"TELEBIRR\")\r\n      ) {\r\n        url = `/Lookup/payment-verify/${receptId}?channel=${formData?.digitalChannel.toUpperCase()}`;\r\n        if (\r\n          formData.digitalChannel.toUpperCase().includes(\"CBE MOBILE BANKING\")\r\n        ) {\r\n          config = { responseType: \"blob\" };\r\n        } else {\r\n          config = {};\r\n        }\r\n      } else if (\r\n        formData.digitalChannel.toUpperCase().includes(\"BANK OF ABYSSINIA\")\r\n      ) {\r\n        // url = `/Lookup/redirecttoboa?transactionId=${receptId}`;\r\n        openNewTab(receptId);\r\n        // <a href={`https://cs.bankofabyssinia.com/slip/?trx=${receptId}`} target=\"_blank\">View Slip</a>\r\n      }\r\n\r\n      if (\r\n        !formData.digitalChannel.toUpperCase().includes(\"BANK OF ABYSSINIA\")\r\n      ) {\r\n        const response = await api.get(url, config);\r\n\r\n        if (formData.digitalChannel.toUpperCase().includes(\"TELEBIRR\")) {\r\n          const newTab = window.open();\r\n          if (newTab) {\r\n            const newTabDocument = newTab.document;\r\n\r\n            // Create a root div\r\n            const rootDiv = newTabDocument.createElement(\"div\");\r\n            rootDiv.id = \"root\";\r\n            newTabDocument.body.appendChild(rootDiv);\r\n\r\n            // Render the component in the new tab\r\n            const root = ReactDOM.createRoot(rootDiv);\r\n            root.render(<RenderPDF html={response?.data} />);\r\n          }\r\n        } else if (\r\n          formData.digitalChannel.toUpperCase().includes(\"CBE MOBILE BANKING\")\r\n        ) {\r\n          try {\r\n            const pdfBlob = response?.data\r\n              ? new Blob([response?.data], {\r\n                  type: \"application/pdf\",\r\n                })\r\n              : new Blob(\"Unknown status received.\");\r\n\r\n            const pdfUrl = URL.createObjectURL(pdfBlob);\r\n            window.open(pdfUrl, \"_blank\");\r\n          } catch (error) {\r\n            console.error(\"CBE Error: \", error);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      if (\r\n        formData.digitalChannel.toUpperCase().includes(\"CBE MOBILE BANKING\")\r\n      ) {\r\n        await generateAndOpenPDF(error);\r\n      }\r\n      toast.error(\r\n        error?.response?.data?.message ||\r\n          (error?.message?.toLowerCase().includes(\"network\") &&\r\n            error?.message) ||\r\n          \"Something is wrong Please try again\"\r\n      );\r\n    } finally {\r\n      setIsChecking(false);\r\n    }\r\n  };\r\n\r\n  const normalizeTexts = (text) => {\r\n    try {\r\n      if (text.toLowerCase() === \"cash\") {\r\n        return \"Cash\";\r\n      } else if (text.toLowerCase() === \"cbhi\") {\r\n        return \"CBHI\";\r\n      } else if (text.toLowerCase() === \"credit\") {\r\n        return \"Credit\";\r\n      } else if (text.toLowerCase() === \"digital\") {\r\n        return \"Digital\";\r\n      } else if (text.toLowerCase() === \"free of charge\") {\r\n        return \"Free of Charge\";\r\n      } else if (text.toLowerCase() === \"traffic\") {\r\n        return \"Traffic\";\r\n      } else {\r\n        return text;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is text Normalizig Error: \", error);\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={3}>\r\n      {/* 🔝 Summary */}\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        💰 Today's Payment Summary\r\n      </Typography>\r\n      <Grid container spacing={2} mb={3}>\r\n        {Object.entries(totals).map(([method, amt]) => (\r\n          <Grid item xs={12} sm={6} md={3} key={method}>\r\n            <Card\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                p: 2,\r\n                boxShadow: 3,\r\n                borderRadius: 3,\r\n              }}\r\n            >\r\n              <Avatar sx={{ bgcolor: \"#1976d2\", mr: 2 }} variant=\"rounded\">\r\n                {icons[normalizeTexts(method)] || <PaymentIcon />}\r\n              </Avatar>\r\n              <Box>\r\n                <Typography variant=\"subtitle2\">{method}</Typography>\r\n                <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                  {formatAccounting2(amt)} Birr\r\n                </Typography>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 2,\r\n              backgroundColor:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#e3f2fd\"\r\n                  : theme.palette.primary.dark,\r\n              borderLeft: `5px solid ${\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#1976d2\"\r\n                  : theme.palette.text.primary\r\n              }`,\r\n              borderRadius: 2,\r\n              mt: 1,\r\n              color: theme.palette.text.primary, // ensure text color matches theme\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" fontWeight=\"bold\">\r\n              Total Received Today: {formatAccounting2(total)} Birr\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* 📋 Data Table */}\r\n      <Grid container spacing={2} alignItems=\"center\" mb={2}>\r\n        <Grid item xs={8}>\r\n          {/* Tabs for Requested Place*/}\r\n          {locations?.length > 0 && (\r\n            <Tabs\r\n              value={selectedLocation}\r\n              onChange={handleMethodChange}\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n              allowScrollButtonsMobile\r\n              sx={{ marginTop: 5, marginBottom: 5 }}\r\n              TabIndicatorProps={{\r\n                sx: {\r\n                  backgroundColor:\r\n                    theme.palette.mode === \"dark\"\r\n                      ? theme.palette.secondary.main\r\n                      : theme.palette.primary.main,\r\n                },\r\n              }}\r\n            >\r\n              {locations.map((location) => (\r\n                <Tab\r\n                  key={location}\r\n                  label={`${location} (${formatNumber(\r\n                    getCountByLocation(location)\r\n                  )})`}\r\n                  value={location}\r\n                  sx={{\r\n                    color: theme.palette.text.primary,\r\n                    \"&.Mui-selected\": {\r\n                      color:\r\n                        theme.palette.mode === \"dark\"\r\n                          ? theme.palette.secondary.main\r\n                          : theme.palette.primary.main,\r\n                    },\r\n                  }}\r\n                />\r\n              ))}\r\n            </Tabs>\r\n          )}\r\n\r\n          <Typography variant=\"h6\">🕓 Pending Payments</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} md={4} textAlign=\"right\">\r\n          <Stack\r\n            direction=\"row\"\r\n            spacing={2}\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={() => navigate(\"/payments\")}\r\n            >\r\n              Add Payment\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                color: colors.grey[100],\r\n                borderColor: colors.grey[100],\r\n                \"&:hover\": {\r\n                  borderColor: colors.grey[300],\r\n                  color: colors.grey[300],\r\n                },\r\n              }}\r\n              onClick={() => setRefresh((prev) => !prev)}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <CircularProgress size={24} color=\"inherit\" />\r\n              ) : (\r\n                <Refresh\r\n                  sx={{\r\n                    transition: \"transform 0.5s\",\r\n                    \"&:hover\": { transform: \"rotate(90deg)\" },\r\n                  }}\r\n                />\r\n              )}\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataGrid\r\n            rows={filteredRows}\r\n            loading={isLoading}\r\n            columns={columns}\r\n            autoHeight \r\n            sx={{ minWidth: 320 }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* 💳 Modal */}\r\n      <Modal\r\n        open={openModal}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleCloseModal();\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: {\r\n              xs: \"90vw\",\r\n              sm: 500,\r\n              md: 600,\r\n              lg: 700,\r\n            },\r\n            maxWidth: \"95vw\",\r\n            maxHeight: \"90vh\",\r\n            bgcolor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"background.paper\"\r\n                : \"background.default\",\r\n            boxShadow: 24,\r\n            borderRadius: 3,\r\n            p: 4,\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            color={theme.palette.mode === \"light\" ? \"primary\" : \"#ffffff\"}\r\n          >\r\n            Manage Payment for: {selectedRow?.patientFName}\r\n          </Typography>\r\n\r\n          <Card\r\n            sx={{\r\n              mb: 2,\r\n              p: 2,\r\n              backgroundColor:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"background.paper\"\r\n                  : \"background.default\",\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              Card Number: <strong>{selectedRow?.patientCardNumber}</strong>\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n              Total Amount:{\" \"}\r\n              {/* <strong>{formatAccounting2(selectedRow?.totalPrice)}</strong> */}\r\n              <strong>\r\n                {formatAccounting2(\r\n                  selectedRow?.requestedCatagories\r\n                    ?.filter((item) => item.isPaid)\r\n                    .reduce((sum, item) => sum + item.amount, 0)\r\n                )}\r\n                &nbsp; Birr\r\n              </strong>\r\n            </Typography>\r\n          </Card>\r\n\r\n          {/* Payment Method */}\r\n          <FormControl\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n            error={!!formDataError?.method}\r\n            helpertext={formDataError?.method}\r\n          >\r\n            <Select\r\n              name=\"method\"\r\n              value={formData.method}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n              input={\r\n                <OutlinedInput\r\n                  sx={{\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  }}\r\n                />\r\n              }\r\n              renderValue={(selected) =>\r\n                selected ? (\r\n                  <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    {icons[normalizeTexts(selected)]}&nbsp;{selected}\r\n                  </Box>\r\n                ) : (\r\n                  <span style={{ color: \"#888\" }}>\r\n                    Select Payment Method...*\r\n                  </span>\r\n                )\r\n              }\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <em>Select Payment Method...</em>\r\n              </MenuItem>\r\n              {paymentOptions.map((option) => (\r\n                <MenuItem key={option?.type} value={option?.type}>\r\n                  {icons[normalizeTexts(option?.type)]} &nbsp; {option?.type}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          {/*Paper receipt for cash payment only.*/}\r\n          {formData?.method?.toLowerCase().includes(\"cash\") && (\r\n            <TextField\r\n              label=\"Paper Receipt\"\r\n              variant=\"outlined\"\r\n              name=\"PRNo\"\r\n              value={formData?.PRNo}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              error={\r\n                paperReError?.length > 0\r\n                  ? !!paperReError\r\n                  : !!formDataError?.PRNo\r\n              }\r\n              helperText={\r\n                paperReError?.length > 0 ? paperReError : formDataError?.PRNo\r\n              }\r\n              sx={{\r\n                marginTop: \"10px\",\r\n              }}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {/* Digital */}\r\n          {formData?.method?.toLowerCase().includes(\"digital\") && (\r\n            <>\r\n              <FormControl\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                error={!!formDataError?.digitalChannel}\r\n                helpertext={formDataError?.digitalChannel}\r\n              >\r\n                <Select\r\n                  name=\"digitalChannel\"\r\n                  value={formData.digitalChannel}\r\n                  onChange={handleChange}\r\n                  displayEmpty\r\n                  input={\r\n                    <OutlinedInput\r\n                      sx={{\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  renderValue={(selected) =>\r\n                    selected ? (\r\n                      selected\r\n                    ) : (\r\n                      <span style={{ color: \"#888\" }}>\r\n                        Select Digital Channel...\r\n                      </span>\r\n                    )\r\n                  }\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>Select Digital Channel...</em>\r\n                  </MenuItem>\r\n                  {digitalChannels.map((channel) => (\r\n                    <MenuItem key={channel} value={channel}>\r\n                      {channel}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                name=\"trxref\"\r\n                label=\"Transaction Ref. No\"\r\n                value={formData?.trxref}\r\n                onChange={handleChange}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      {isChecking ? (\r\n                        <CircularProgress size={24} color=\"inherit\" />\r\n                      ) : (\r\n                        <IconButton onClick={handleOpenPage} edge=\"end\">\r\n                          <OpenInNewIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </InputAdornment>\r\n                  ),\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n                error={\r\n                  trxRefError?.length > 0\r\n                    ? !!trxRefError\r\n                    : !!formDataError?.trxref\r\n                }\r\n                helperText={\r\n                  trxRefError?.length > 0 ? trxRefError : formDataError?.trxref\r\n                }\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {/* Credit */}\r\n          {formData?.method?.toLowerCase().includes(\"credit\") && (\r\n            <>\r\n              <FormControl\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                error={!!formDataError?.organization}\r\n              >\r\n                <Select\r\n                  name=\"organization\"\r\n                  value={formData.organization}\r\n                  onChange={handleChange}\r\n                  displayEmpty\r\n                  input={\r\n                    <OutlinedInput\r\n                      sx={{\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  renderValue={(selected) =>\r\n                    selected ? (\r\n                      selected\r\n                    ) : (\r\n                      <span style={{ color: \"#888\" }}>\r\n                        Select Organization...\r\n                      </span>\r\n                    )\r\n                  }\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>Select Organization...</em>\r\n                  </MenuItem>\r\n                  {creditOrganizations.map((org) => (\r\n                    <MenuItem key={org} value={org}>\r\n                      {org}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                name=\"employeeId\"\r\n                label=\"Employee ID\"\r\n                value={formData.employeeId}\r\n                onChange={handleChange}\r\n                margin=\"normal\"\r\n                required\r\n                error={!!formDataError?.employeeId}\r\n                helperText={formDataError?.employeeId}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {renderDescription && (\r\n            <>\r\n              <FormControl\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                error={!!formDataError?.services}\r\n              >\r\n                <Select\r\n                  name=\"services\"\r\n                  value={formData?.services || \"\"}\r\n                  onChange={handleChange}\r\n                  displayEmpty\r\n                  input={\r\n                    <OutlinedInput\r\n                      sx={{\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  renderValue={(selected) =>\r\n                    selected ? (\r\n                      selected\r\n                    ) : (\r\n                      <span style={{ color: \"#888\" }}>Select Services...</span>\r\n                    )\r\n                  }\r\n                >\r\n                  <MenuItem disabled value=\"\">\r\n                    <em>Select Services...</em>\r\n                  </MenuItem>\r\n                  {services?.map((serv) => (\r\n                    <MenuItem key={serv?.id} value={serv?.description}>\r\n                      {serv?.description}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </>\r\n          )}\r\n\r\n          {/* Action Buttons */}\r\n          <Grid container spacing={2} sx={{ mt: 2 }}>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                color=\"error\"\r\n                onClick={() => handleCloseModal()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n                onClick={handleConfSave}\r\n                disabled={loading}\r\n                startIcon={\r\n                  loading ? <CircularProgress size={20} /> : <PaymentIcon />\r\n                }\r\n              >\r\n                {loading ? \"Processing...\" : \"Confirm Payment\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Modal>\r\n      <ReceiptModal\r\n        open={receiptOpen}\r\n        onClose={() => {\r\n          setReceiptOpen(false);\r\n          setReceiptData(null);\r\n        }}\r\n        data={receiptData}\r\n        onPrint={handleSave}\r\n        onloading={isPrintLoading}\r\n      />\r\n      <CancelConfirm\r\n        isOpen={openConfirm}\r\n        onClose={handleConfClose}\r\n        onConfirm={handleCancel}\r\n        userData={selectedRow}\r\n        onloading={cancelLoad}\r\n      />\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PaymentManagement;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\n\r\nconst CancelConfirm = ({ isOpen, onClose, onConfirm, userData, onloading }) => {\r\n  const [selectedGroups, setSelectedGroups] = useState([]);\r\n\r\n  const theme = useTheme();\r\n  const checkboxColor =\r\n    theme.palette.mode === \"light\"\r\n      ? theme.palette.primary.main\r\n      : theme.palette.secondary.main;\r\n\r\n  useEffect(() => {\r\n    if (isOpen) setSelectedGroups([]);\r\n  }, [userData, isOpen]);\r\n\r\n  const handleCheckboxChange = (group) => {\r\n    try {\r\n      setSelectedGroups((prev) =>\r\n        prev.includes(group?.groupID)\r\n          ? prev?.filter((id) => id !== group.groupID)\r\n          : [...prev, group.groupID]\r\n      );\r\n    } catch (error) {\r\n      console.error(\"This is handle CheckBox Error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    try {\r\n      const selectedPayload = userData?.requestedCatagories\r\n        ?.filter((group) => selectedGroups.includes(group.groupID))\r\n        ?.map((group) => ({\r\n          patientCardNumber: userData?.patientCardNumber,\r\n          groupID: group.groupID,\r\n          purpose: group.purpose || \"N/A\",\r\n        }));\r\n\r\n      if (selectedPayload.length > 0) {\r\n        onConfirm({ selectedPayload: selectedPayload, message: \"Yes Please!\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is the handle Confimr Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          onClose();\r\n        }\r\n      }}\r\n      disableEscapeKeyDown\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{ timeout: 500 }}\r\n      aria-labelledby=\"confirmation-modal-title\"\r\n      aria-describedby=\"confirmation-modal-description\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          ...modalStyle,\r\n          bgcolor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"background.paper\"\r\n              : \"background.default\",\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            fontWeight=\"bold\"\r\n            color=\"primary\"\r\n            id=\"confirmation-modal-title\"\r\n          >\r\n            <InfoIcon sx={{ fontSize: 30, verticalAlign: \"middle\", mr: 1 }} />\r\n            Confirm Cancellation\r\n          </Typography>\r\n          <IconButton\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            aria-label=\"close modal\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n\r\n        <Typography variant=\"body1\" mt={2} mb={1}>\r\n          Cancel payment for <strong>{userData?.patientFName}</strong>?\r\n        </Typography>\r\n\r\n        <Divider sx={{ my: 2 }} />\r\n\r\n        <Typography variant=\"subtitle1\" fontWeight=\"medium\" mb={1}>\r\n          Select categories to cancel:\r\n        </Typography>\r\n\r\n        {userData?.requestedCatagories?.length > 0 ? (\r\n          userData.requestedCatagories.map((group) => (\r\n            <FormControlLabel\r\n              key={group.groupID}\r\n              control={\r\n                <Checkbox\r\n                  checked={selectedGroups.includes(group.groupID)}\r\n                  onChange={() => handleCheckboxChange(group)}\r\n                  sx={{\r\n                    color: checkboxColor,\r\n                    \"&.Mui-checked\": {\r\n                      color: checkboxColor,\r\n                    },\r\n                  }}\r\n                />\r\n              }\r\n              label={`${group.purpose} - ${group.amount} Birr`}\r\n              sx={{ textAlign: \"left\" }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            No categories found.\r\n          </Typography>\r\n        )}\r\n\r\n        {/* Buttons */}\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mt={3} gap={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            onClick={onClose}\r\n            disabled={onloading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n            disabled={selectedGroups.length === 0 || onloading}\r\n            onClick={handleSubmit}\r\n          >\r\n            {onloading ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: \"90%\",\r\n  maxWidth: 500,\r\n  boxShadow: 24,\r\n  p: 3,\r\n  borderRadius: 2,\r\n};\r\n\r\nexport default CancelConfirm;\r\n"],"names":["tokenvalue","getTokenValue","formatter2","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","useGrouping","formatNumber","num","formatted","format","Math","abs","concat","icons","Cash","_jsx","LocalAtmIcon","CBHI","VolunteerActivismIcon","Credit","CreditScoreIcon","MonetizationOnIcon","Reversed","CurrencyExchangeIcon","Digital","AttachMoneyIcon","Traffic","CarCrash","initialState","PRNo","services","method","digitalChannel","trxref","organization","employeeId","_rows$filter","_selectedRow$requeste5","_formData$method2","_formData$method3","_formData$method4","rows","setRows","useState","openModal","setOpenModal","isChecking","setIsChecking","selectedRow","setSelectedRow","paymentOptions","setPaymentOptions","digitalChannels","setDigitalChannels","formData","setFormData","trxRefError","settrxRefError","paperReError","setPaperReError","formDataError","setFormDataError","creditOrganizations","setcreditOrganizations","setServices","totals","setTotals","total","setTotal","loading","setLoading","refresh","setRefresh","isLoading","setIsLoading","receiptOpen","setReceiptOpen","receiptData","setReceiptData","isPrintLoading","setIsPrintLoading","openConfirm","setOpenConfirm","cancelLoad","setCancelLoad","renderDescription","setRenderDescription","selectedLocation","setSelectedLocation","selectedLocationCount","setSelectedLocationCount","locations","setLocations","navigate","useNavigate","theme","useTheme","colors","tokens","palette","mode","getCountByLocation","locationName","_match$count","match","find","item","name","count","error","console","useEffect","getLocations","length","allPurposes","flatMap","_item$requestedCatago","requestedCatagories","map","cat","purpose","purposeSet","Set","Array","from","sort","a","b","localeCompare","counts","reduce","acc","curr","purposeCounts","Object","entries","_ref","check","filter","normalizeText","type","some","isArray","description","desc","toString","trim","_paymentOptions$filte","value","async","response","api","get","_response$data$data","_response$data$data$m","status","data","_ref2","index","id","rest","_objectWithoutProperties","_excluded","_objectSpread","mainId","toast","fetchPaymentTypes","filteredRows","payment","categories","every","_item$purpose","toLowerCase","Date","createdOn","_response$data","message","fetchORG","put","headers","sortedPayment","updatePaymentSummary","fetchPaymetInfo","payments","Error","summary","paymentType","paymentAmount","isReversed","amount","parseFloat","isNaN","reversedKey","keys","forEach","key","endsWith","_ref3","includes","_ref4","_response$data2","channel","fetchChane","handleConfClose","handleCancel","confirm","_selectedRow$whoReque","_selectedRow$whoReque2","_selectedRow$whoReque3","_selectedRow$whoReque4","_confirm$selectedPayl","endPoint","whoRequested","Promise","allSettled","selectedPayload","delete","patientCardNumber","groupID","result","_result$value","_result$value$data","_JSON$parse","_result$value2","_result$value2$config","msg","JSON","parse","config","success","_result$reason","_result$reason$respon","_result$reason$respon2","_result$reason2","errorMsg","reason","prev","handleChange","e","target","validateTransactionRef","letterNumberCheck","numberOnlyCheck","test","trxRef","handleCloseModal","columns","field","headerName","flex","renderCell","params","_params$row","row","join","formatAccounting2","totalPrice","paid","_params$row2","renderETDateAtCell","Button","variant","color","onClick","handleOpenModal","children","_resDoctor$data","_resDoctor$data$data","resDoctor","res1","res2","all","loggedInUser","groupedDoctorData","toISOString","slice","patientFName","patientFirstName","patientMiddleName","patientLastName","Boolean","requestedDepartment","patientMotherName","patientAge","patientGender","createdBy","requestedBy","push","requestedItems","r","requestedServices","requestGroup","Number","price","isPaid","modDoctorData","values","entry","_entry$requestedDepar","_entry$requestedDepar2","_entry$requestedCatag","sum","summarizedPurpose","noRequestedServices","isCompleted","modData","_ref5","_map$join","_map$join$toLowerCase","_excluded2","i","modData2","_ref6","rquestedServices","_excluded3","_ref7","_excluded4","merged","fetchData","normalizeTexts","text","_jsxs","Box","p","Typography","gutterBottom","Grid","container","spacing","mb","_ref8","amt","xs","sm","md","Card","sx","display","alignItems","boxShadow","borderRadius","Avatar","bgcolor","mr","PaymentIcon","fontWeight","Paper","elevation","backgroundColor","primary","dark","borderLeft","mt","Tabs","onChange","handleMethodChange","event","newValue","scrollButtons","allowScrollButtonsMobile","marginTop","marginBottom","TabIndicatorProps","secondary","main","location","Tab","label","textAlign","Stack","direction","justifyContent","grey","borderColor","disabled","CircularProgress","size","Refresh","transition","transform","DataGrid","autoHeight","minWidth","Modal","open","onClose","position","top","left","width","lg","maxWidth","maxHeight","overflowY","FormControl","fullWidth","margin","required","helpertext","Select","displayEmpty","input","OutlinedInput","renderValue","selected","style","MenuItem","option","TextField","helperText","InputProps","InputLabelProps","_Fragment","endAdornment","InputAdornment","IconButton","_formData$trxref","_formDataError$trxref","info","receptId","url","toUpperCase","responseType","window","newTab","newTabDocument","document","rootDiv","createElement","body","appendChild","ReactDOM","render","RenderPDF","html","pdfBlob","Blob","pdfUrl","URL","createObjectURL","_error$response3","_error$response3$data","_error$message","_error$response2","responseData","blobUrl","setTimeout","revokeObjectURL","String","pdfDoc","PDFDocument","create","page","addPage","height","getSize","drawText","x","y","rgb","pdfBytes","save","err","generateAndOpenPDF","edge","OpenInNewIcon","org","serv","_formData$method","_selectedRow$requeste","errorMessage","errors","paidItems","checkData","cardNumber","startIcon","ReceiptModal","onPrint","_selectedRow$whoReque5","_selectedRow$whoReque6","_selectedRow$requeste2","_selectedRow$requeste3","_services$find","_response$data3","_response$data3$refNo","isNurse","isLab","isPharmacy","amountArray","payload","descriptionId","createdby","paymentRefNo","paymentVerifingID","patientWorkID","isNurseRequest","isLabRequest","post","refNo","_response$data4","_selectedRow$requeste4","_response$data5","_response$data5$data","_response$data6","patientName","cbhiId","patientCBHI_ID","recipt","generatePDF","_error$response","_error$response$data","errorDescription","onloading","CancelConfirm","isOpen","onConfirm","userData","ToastContainer","modalStyle","_userData$requestedCa3","selectedGroups","setSelectedGroups","checkboxColor","disableEscapeKeyDown","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","InfoIcon","fontSize","verticalAlign","CloseIcon","Divider","my","group","FormControlLabel","control","Checkbox","checked","handleCheckboxChange","gap","handleSubmit","_userData$requestedCa","_userData$requestedCa2"],"sourceRoot":""}