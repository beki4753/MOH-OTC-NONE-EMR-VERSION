{"version":3,"file":"static/js/5735.6640a15b.chunk.js","mappings":"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","sources":["pages/bar/index.jsx","components/DoctorPrescription.jsx","components/EmployeeUploadManager.jsx","components/PatientTransactionsModal.jsx","components/PieChart.jsx","components/TreatmentEntry.jsx","components/ConfirmationModal.jsx","components/LineChart.jsx","components/BahmniOrderPage.jsx","components/PaymentRecords.jsx","components/ProgressCircle.jsx","components/Routes.jsx","components/StatBox.jsx","components/TreatmentEntryR.jsx","pages/faq/index.jsx","components/PharmacyPage.jsx","pages/calendar/calendar.jsx","pages/line/index.jsx","components/AddRoleModal.jsx","components/RoleManagment.jsx","components/UnauthorizedPage.jsx","components/PaymentManagementLists.jsx","components/BarChart.jsx","components/TrafficAccidentForm.jsx","components/PharmacyRequestsPage.jsx","components/DischargeForm.jsx","components/EditCreditUsers.jsx","components/OrgUploadManager.jsx","pages/form/index.jsx","components/EditStaffModal.jsx","components/ReversalModal.jsx","components/ReceiptReversalManager.jsx","pages/dashboard/index.jsx","pages/global/Topbar.jsx","components/PaymentTypeForm.jsx","pages/login/index.jsx","components/PaymentTypeLimitForm.jsx","components/AddUserModal.jsx","components/SmartModal.jsx","components/UserManagment.jsx","components/FriendlyAgeFilterDataGrid.jsx","pages/pie/index.jsx","components/ReportReceiptFetcher.jsx","components/AddHospitalServices.jsx","components/CBHIUsersManager.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport BarChart from \"../../components/BarChart\";\r\n\r\nconst Bar = () => {\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Bar Chart\" subtitle=\"Simple Bar Chart\" />\r\n      <Box height=\"75vh\">\r\n        <BarChart />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  Stack,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport api from \"../utils/api\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\r\nimport MedicationOutlinedIcon from \"@mui/icons-material/MedicationOutlined\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport { capitalizeWords } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport { fetchPatientName } from \"../services/user_service\";\r\n\r\nconst initialItem = {\r\n  medication: \"\",\r\n  dosage: \"\",\r\n  frequency: \"\",\r\n  duration: \"\",\r\n  instructions: \"\",\r\n};\r\n\r\nconst DoctorPrescription = () => {\r\n  const theme = useTheme();\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardNumberError, setCardNumberError] = useState(\"\");\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [prescriptionItems, setPrescriptionItems] = useState([initialItem]);\r\n  const [prescriptionItemsError, setPrescriptionItemsError] = useState([\r\n    initialItem,\r\n  ]);\r\n  const [rows, setRows] = useState([]);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const brandColor = \"#3b8ada\"; // your hospital brand color\r\n\r\n  const sectionBgColor =\r\n    theme.palette.mode === \"dark\" ? theme.palette.background.paper : \"#f5f8fd\"; // light background for light mode\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const fetchPatientNames = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (\r\n        cardNumber.length <= 0 ||\r\n        patientName?.length > 0 ||\r\n        !!cardNumberError\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const fullName = await fetchPatientName(cardNumber);\r\n\r\n      if (fullName) {\r\n        setPatientName(fullName);\r\n      } else {\r\n        toast.error(\"Card Number Not Registered.\");\r\n        setPatientName(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"This is fetchPatientNames Error: \", err);\r\n      toast.error(\"Error fetching patient info.\");\r\n      setPatientName(\"\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (index, field, value) => {\r\n    setPrescriptionItems((items) =>\r\n      items.map((item, i) => (i === index ? { ...item, [field]: value } : item))\r\n    );\r\n    letterOnlyCheck(index, field, value);\r\n  };\r\n\r\n  const letterOnlyCheck = (index, key, value) => {\r\n    const regex = /^[A-Za-z0-9\\s._]+$/;\r\n    if (!regex.test(value) && value?.length > 0) {\r\n      setPrescriptionItemsError((items) =>\r\n        items.map((item, i) =>\r\n          i === index\r\n            ? { ...item, [key]: \"Only letters, numbers and spaces allowed.\" }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      setPrescriptionItemsError((items) =>\r\n        items.map((item, i) => (i === index ? { ...item, [key]: \"\" } : item))\r\n      );\r\n    }\r\n  };\r\n\r\n  const addMedication = () => {\r\n    setPrescriptionItems([...prescriptionItems, initialItem]);\r\n    setPrescriptionItemsError([...prescriptionItemsError, initialItem]);\r\n  };\r\n\r\n  const removeMedication = (index) => {\r\n    if (prescriptionItems.length <= 1) {\r\n      toast.warning(\"At least one medication is required.\");\r\n      return;\r\n    }\r\n    setPrescriptionItems((items) => items.filter((_, i) => i !== index));\r\n    setPrescriptionItemsError((items) => items.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const groupRequestsByPatientAndDate = async (data) => {\r\n    try {\r\n      const result = [];\r\n\r\n      data.forEach((entry) => {\r\n        const fullDate = entry.createdOn;\r\n        const cardNumber = entry.patientCardNumber;\r\n\r\n        // Skip entry if required fields are missing\r\n        if (!fullDate || !cardNumber || !Array.isArray(entry.requestedItems))\r\n          return;\r\n\r\n        // Find or create patient + date group\r\n        let patientGroup = result.find(\r\n          (g) => g.patientCardNumber === cardNumber && g.date === fullDate\r\n        );\r\n\r\n        if (!patientGroup) {\r\n          patientGroup = {\r\n            patientCardNumber: cardNumber,\r\n            date: fullDate,\r\n            patientInfo: {\r\n              patientFirstName: entry.patientFirstName,\r\n              patientMiddleName: entry.patientMiddleName,\r\n              patientLastName: entry.patientLastName,\r\n              patientGender: entry.patientGender,\r\n            },\r\n            services: [],\r\n          };\r\n          result.push(patientGroup);\r\n        }\r\n\r\n        // Process each requested item\r\n        entry.requestedItems.forEach((item) => {\r\n          const serviceName = item.requestedServices?.trim().toLowerCase();\r\n          if (!serviceName) return;\r\n\r\n          const existingService = patientGroup.services.find(\r\n            (s) => s.requestedServices.trim().toLowerCase() === serviceName\r\n          );\r\n\r\n          if (existingService) {\r\n            existingService.details.push(item);\r\n            const count = parseInt(item.procedeureCount) || 0;\r\n            existingService.totalCount += count;\r\n          } else {\r\n            patientGroup.services.push({\r\n              requestedServices: item.requestedServices,\r\n              totalCount: parseInt(item.procedeureCount) || 0,\r\n              details: [item],\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      // Sort by most recent createdOn\r\n      result.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.error(\"Error during grouping:\", error);\r\n      return []; // return safe fallback\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await api.get(\"/Request/doctor/get-request/Pharmacy\");\r\n      const value = response?.data?.data?.value || [];\r\n\r\n      const sorted = await groupRequestsByPatientAndDate(value);\r\n\r\n      const formatted = sorted.map((item, index) => ({\r\n        id: index + 1,\r\n        cardNumber: item.patientCardNumber,\r\n        date: item.date,\r\n        patientName: [\r\n          item.patientInfo?.patientFirstName,\r\n          item.patientInfo?.patientMiddleName,\r\n          item.patientInfo?.patientLastName,\r\n        ]\r\n          .filter(Boolean)\r\n          .join(\" \"),\r\n        gender: item.patientInfo?.patientGender,\r\n        services: item.services,\r\n      }));\r\n\r\n      setRows(formatted);\r\n    } catch (error) {\r\n      console.error(\"Error fetching pharmacy requests:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsSending(true);\r\n      if (!cardNumber) return toast.warning(\"Enter and verify card number.\");\r\n      if (prescriptionItems.some((item) => !item.medication))\r\n        return toast.warning(\"Medication name is required.\");\r\n\r\n      const errorCheck = prescriptionItemsError?.some((item) =>\r\n        Object.values(item || {}).some((each) => each?.length > 0)\r\n      );\r\n      if (errorCheck) {\r\n        toast.error(\"Please fix the error.\");\r\n        return;\r\n      }\r\n      const payload = {\r\n        patientCardnumber: cardNumber,\r\n        reqestedTo: \"pharmacy\",\r\n        requestItems: prescriptionItems.map((item) => ({\r\n          prodedures: item.medication,\r\n          prodeduresCount: item.frequency,\r\n          measurment: item.dosage,\r\n          duration: item.duration,\r\n          instruction: item.instructions,\r\n        })),\r\n      };\r\n\r\n      const response = await api.post(\"/Request/doctor/order-request\", payload);\r\n\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        toast.success(`Prescription sent successfully`);\r\n        fetchData();\r\n        setPatientName(\"\");\r\n        setCardNumber(\"\");\r\n        setPrescriptionItems([initialItem]);\r\n        setPrescriptionItemsError([initialItem]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"API errors:\", err);\r\n      toast.error(err?.response?.data?.errorDescription);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  const mrnCheck = (value) => {\r\n    const valid = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/.test(value);\r\n    if (!valid && value?.length > 0) {\r\n      setCardNumberError(\"Please enter valid MRN (5+ digits).\");\r\n    } else {\r\n      setCardNumberError(\"\");\r\n    }\r\n  };\r\n\r\n  /*const columns = [\r\n    { field: \"cardNumber\", headerName: \"Card Number\", flex: 1.5 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 2.5 },\r\n    { field: \"medication\", headerName: \"Medication\", flex: 2.5 },\r\n    { field: \"frequency\", headerName: \"Frequency\", flex: 1 },\r\n    { field: \"dosage\", headerName: \"Dosage\", flex: 1 },\r\n    { field: \"duration\", headerName: \"Duration\", flex: 1.5 },\r\n    { field: \"instructions\", headerName: \"Instructions\", flex: 2.5 },\r\n  ];\r\n  */\r\n  const handleRowDoubleClick = (params) => {\r\n    setSelectedRow(params.row);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"cardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"gender\", headerName: \"Gender\", flex: 0.8 },\r\n    { field: \"date\", headerName: \"Date Requested\", flex: 1.2 },\r\n  ];\r\n\r\n  const handleCancelBtn = () => {\r\n    setPatientName(\"\");\r\n    setCardNumber(\"\");\r\n    setCardNumberError(\"\");\r\n    setPrescriptionItems([initialItem]);\r\n    setPrescriptionItemsError([initialItem]);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        // minHeight: '100vh',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        p: 2,\r\n        background:\r\n          theme.palette.mode === \"dark\"\r\n            ? `linear-gradient(135deg, rgba(46, 138, 201, 0.1))`\r\n            : `linear-gradient(135deg, ${theme.palette.grey[100]}, ${theme.palette.grey[300]})`,\r\n        marginInline: \"10px\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={6}\r\n        sx={{\r\n          // maxWidth: 850,\r\n          width: \"100%\",\r\n          p: 4,\r\n          borderRadius: 3,\r\n          backgroundColor: theme.palette.background.paper,\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          fontWeight={700}\r\n          sx={{ mb: 4, color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\" }}\r\n        >\r\n          Electronic Prescription\r\n        </Typography>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              label=\"Patient Card Number\"\r\n              value={cardNumber}\r\n              onChange={(e) => {\r\n                setCardNumber(e.target.value);\r\n                setPatientName(\"\");\r\n                mrnCheck(e.target.value);\r\n              }}\r\n              onBlur={fetchPatientNames}\r\n              fullWidth\r\n              error={!!cardNumberError}\r\n              helperText={cardNumberError}\r\n              InputProps={{\r\n                endAdornment: loading && (\r\n                  <InputAdornment position=\"end\">\r\n                    <CircularProgress size={24} color=\"inherit\" />\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n              sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              label=\"Patient Name\"\r\n              value={patientName}\r\n              fullWidth\r\n              disabled\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: 2,\r\n                  backgroundColor: theme.palette.action.disabledBackground,\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider\r\n          sx={{ my: 4, color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\" }}\r\n        />\r\n\r\n        <Typography variant=\"h6\" fontWeight={600} sx={{ mb: 2 }}>\r\n          Prescription Medications\r\n        </Typography>\r\n\r\n        {prescriptionItems.map((item, index) => (\r\n          <Box\r\n            key={index}\r\n            sx={{\r\n              mb: 3,\r\n              p: 2,\r\n              border: `1px solid ${theme.palette.divider}`,\r\n              borderRadius: 2,\r\n              backgroundColor: theme.palette.background.default,\r\n            }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={3}>\r\n                <TextField\r\n                  label=\"Medication\"\r\n                  value={item.medication}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"medication\", e.target.value)\r\n                  }\r\n                  error={!!prescriptionItemsError[index]?.medication}\r\n                  helperText={prescriptionItemsError[index]?.medication}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2}>\r\n                <TextField\r\n                  label=\"Dosage\"\r\n                  value={item.dosage}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"dosage\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  error={!!prescriptionItemsError[index]?.dosage}\r\n                  helperText={prescriptionItemsError[index]?.dosage}\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2}>\r\n                <TextField\r\n                  label=\"Frequency\"\r\n                  value={item.frequency}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"frequency\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  error={!!prescriptionItemsError[index]?.frequency}\r\n                  helperText={prescriptionItemsError[index]?.frequency}\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={2}>\r\n                <TextField\r\n                  label=\"Duration\"\r\n                  value={item.duration}\r\n                  onChange={(e) =>\r\n                    handleChange(index, \"duration\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  error={!!prescriptionItemsError[index]?.duration}\r\n                  helperText={prescriptionItemsError[index]?.duration}\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                  sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={3}>\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <TextField\r\n                    label=\"Instructions\"\r\n                    value={item.instructions}\r\n                    onChange={(e) =>\r\n                      handleChange(index, \"instructions\", e.target.value)\r\n                    }\r\n                    fullWidth\r\n                    error={!!prescriptionItemsError[index]?.instructions}\r\n                    helperText={prescriptionItemsError[index]?.instructions}\r\n                    InputProps={{\r\n                      sx: {\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      sx: {\r\n                        color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                        \"&.Mui-focused\": {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                    }}\r\n                    sx={{ \"& .MuiOutlinedInput-root\": { borderRadius: 2 } }}\r\n                  />\r\n                  {prescriptionItems.length > 1 && (\r\n                    <IconButton\r\n                      onClick={() => removeMedication(index)}\r\n                      color=\"error\"\r\n                      sx={{ ml: 1 }}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        ))}\r\n\r\n        <Button\r\n          onClick={addMedication}\r\n          startIcon={<AddIcon />}\r\n          variant=\"outlined\"\r\n          sx={(theme) => ({\r\n            mb: 4,\r\n            borderRadius: 2,\r\n            textTransform: \"none\",\r\n            borderColor:\r\n              theme.palette.mode === \"dark\"\r\n                ? \"#fff\"\r\n                : theme.palette.primary.main,\r\n            color:\r\n              theme.palette.mode === \"dark\"\r\n                ? \"#fff\"\r\n                : theme.palette.primary.main,\r\n            \"&:hover\": {\r\n              backgroundColor:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"rgba(255, 255, 255, 0.08)\"\r\n                  : theme.palette.action.hover,\r\n              borderColor:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"#fff\"\r\n                  : theme.palette.primary.dark,\r\n            },\r\n          })}\r\n        >\r\n          Add Another Medication\r\n        </Button>\r\n\r\n        <Box\r\n          sx={{\r\n            textAlign: \"right\",\r\n            display: \"flex\",\r\n            gap: 2,\r\n            justifyContent: \"flex-end\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={() => handleCancelBtn()}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            disabled={\r\n              !cardNumber &&\r\n              prescriptionItems.every(\r\n                (i) =>\r\n                  !i.medication &&\r\n                  !i.dosage &&\r\n                  !i.frequency &&\r\n                  !i.duration &&\r\n                  !i.instructions\r\n              )\r\n            }\r\n            sx={{\r\n              borderRadius: 3,\r\n              px: 4,\r\n              py: 1.6,\r\n              fontWeight: 600,\r\n              textTransform: \"none\",\r\n              backgroundColor: \"error.main\",\r\n              color: \"#fff\",\r\n              boxShadow: `0 4px 12px rgba(0, 0, 0, 0.15)`,\r\n              transition: \"all 0.3s ease\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"error.dark\",\r\n                boxShadow: `0 6px 16px rgba(0, 0, 0, 0.2)`,\r\n              },\r\n              \"&:disabled\": {\r\n                backgroundColor: (theme) =>\r\n                  theme.palette.action.disabledBackground,\r\n                color: (theme) => theme.palette.action.disabled,\r\n              },\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => handleSubmit()}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            disabled={\r\n              !cardNumber ||\r\n              prescriptionItems.some((i) => !i.medication) ||\r\n              isSending\r\n            }\r\n            sx={(theme) => ({\r\n              borderRadius: 3,\r\n              px: 4,\r\n              py: 1.6,\r\n              fontWeight: 600,\r\n              gap: 3,\r\n              textTransform: \"none\",\r\n              background:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"#ffffff\" // White in dark mode\r\n                  : \"#000000\",\r\n              color: theme.palette.mode === \"dark\" ? \"#000000\" : \"#ffffff\", // black text in dark mode for contrast\r\n              boxShadow: `0 4px 12px rgba(0, 0, 0, 0.15)`,\r\n              transition: \"all 0.3s ease\",\r\n              \"&:hover\": {\r\n                background:\r\n                  theme.palette.mode === \"dark\"\r\n                    ? \"#f0f0f0\"\r\n                    : `linear-gradient(135deg, ${theme.palette.primary.main}, ${theme.palette.primary.dark})`,\r\n                boxShadow: `0 6px 16px rgba(0, 0, 0, 0.2)`,\r\n              },\r\n              \"&:disabled\": {\r\n                backgroundColor: theme.palette.action.disabledBackground,\r\n                color: theme.palette.action.disabled,\r\n              },\r\n            })}\r\n          >\r\n            {isSending ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Send to Pharmacy\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Paper\r\n        elevation={4}\r\n        sx={{\r\n          width: \"100%\",\r\n          // maxWidth: 680,\r\n          p: { xs: 2, sm: 3 }, // Slightly less padding for the data grid paper\r\n          borderRadius: 3,\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: `0px 5px 15px rgba(0, 0, 0, 0.1)`,\r\n          mt: 4, // Margin top to separate from the form\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          fontWeight={600}\r\n          sx={{ mb: 2, color: theme.palette.text.primary }}\r\n        >\r\n          Recently Sent Tests\r\n        </Typography>\r\n        <Box sx={{ height: 300, width: \"100%\" }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            density=\"comfortable\" // More compact row spacing\r\n            autoHeight\r\n            sx={{\r\n              \"& .MuiDataGrid-columnHeaders\": {\r\n                backgroundColor: theme.palette.primary.light + \"15\", // Light background for headers\r\n                fontWeight: \"bold\",\r\n              },\r\n              \"& .MuiDataGrid-cell\": {\r\n                borderBottom: `1px dotted ${theme.palette.divider}`, // Dotted line between cells\r\n              },\r\n              border: \"none\", // Remove default DataGrid border\r\n              minWidth: 320,\r\n            }}\r\n            onRowDoubleClick={handleRowDoubleClick}\r\n          />\r\n        </Box>\r\n        <Drawer anchor=\"right\" open={open} onClose={handleClose}>\r\n          <Box\r\n            sx={{\r\n              width: { xs: \"100vw\", sm: 480 },\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              bgcolor: theme.palette.background.default,\r\n              color: theme.palette.text.primary,\r\n              px: 3,\r\n              pt: 2,\r\n              pb: 3,\r\n              fontFamily: \"Roboto, 'Segoe UI', sans-serif\",\r\n            }}\r\n          >\r\n            {/* Header */}\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mb: 2,\r\n              }}\r\n            >\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                <InfoOutlinedIcon sx={{ color: \"#6870fa\" }} fontSize=\"medium\" />\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  fontWeight={600}\r\n                  sx={{ color: \"#6870fa\" }}\r\n                >\r\n                  Request Details\r\n                </Typography>\r\n              </Stack>\r\n              <Tooltip title=\"Close\">\r\n                <IconButton onClick={handleClose} size=\"small\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Divider sx={{ mb: 2 }} />\r\n\r\n            <Box sx={{ flexGrow: 1, overflowY: \"auto\", pr: 1 }}>\r\n              {selectedRow && (\r\n                <>\r\n                  {/* Patient Information */}\r\n                  <Paper\r\n                    elevation={3}\r\n                    sx={{\r\n                      p: 2,\r\n                      mb: 3,\r\n                      borderRadius: 3,\r\n                      bgcolor: sectionBgColor,\r\n                    }}\r\n                  >\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={1}\r\n                      alignItems=\"center\"\r\n                      mb={1}\r\n                    >\r\n                      <PersonOutlineIcon\r\n                        sx={{ color: theme.palette.secondary.main }}\r\n                        fontSize=\"small\"\r\n                      />\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        fontWeight={600}\r\n                        sx={{ color: brandColor }}\r\n                      >\r\n                        Patient Information\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        mb: 0.5,\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Name:</strong> {selectedRow.patientName}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        mb: 0.5,\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Card Number:</strong> {selectedRow.cardNumber}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        mb: 0.5,\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Gender:</strong> {selectedRow.gender}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color:\r\n                          theme.palette.mode === \"dark\" ? \"#adadad\" : \"#333\",\r\n                      }}\r\n                    >\r\n                      <strong>Date:</strong> {selectedRow.date}\r\n                    </Typography>\r\n                  </Paper>\r\n\r\n                  {/* Medications Section */}\r\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1} mb={1}>\r\n                    <MedicationOutlinedIcon sx={{ color: \"#6870fa\" }} />\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      fontWeight={600}\r\n                      sx={{ color: \"#6870fa\" }}\r\n                    >\r\n                      Requested Medications\r\n                    </Typography>\r\n                  </Stack>\r\n\r\n                  <List disablePadding>\r\n                    {selectedRow.services.map((service, idx) => (\r\n                      <Paper\r\n                        key={idx}\r\n                        elevation={2}\r\n                        sx={{\r\n                          p: 2,\r\n                          mb: 2,\r\n                          borderLeft: `6px solid ${\r\n                            theme.palette.mode === \"light\"\r\n                              ? \"#333333cf\"\r\n                              : brandColor\r\n                          }`,\r\n                          borderRadius: 2,\r\n                          bgcolor: sectionBgColor,\r\n                        }}\r\n                      >\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          fontWeight={600}\r\n                          sx={{\r\n                            color:\r\n                              theme.palette.mode === \"light\"\r\n                                ? \"#7c7c7cf5\"\r\n                                : \"#4cceac\",\r\n                            mb: 1,\r\n                          }}\r\n                        >\r\n                          {capitalizeWords(service.requestedServices)}\r\n                        </Typography>\r\n                        {service.details.map((detail, i) => (\r\n                          <Box key={i} sx={{ ml: 1.5, mt: 1 }}>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Count:</strong> {detail.procedeureCount}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Dosage:</strong> {detail.measurement}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Duration:</strong> {detail.duration}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={\r\n                                theme.palette.mode === \"dark\"\r\n                                  ? \"#adadad\"\r\n                                  : \"#333\"\r\n                              }\r\n                            >\r\n                              <strong>Instructions:</strong>{\" \"}\r\n                              {detail.instruction}\r\n                            </Typography>\r\n                          </Box>\r\n                        ))}\r\n                      </Paper>\r\n                    ))}\r\n                  </List>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Drawer>\r\n      </Paper>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DoctorPrescription;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { CancelPresentationTwoTone } from \"@mui/icons-material\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport api from \"../utils/api\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\nimport EditStaffModal from \"./EditStaffModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nconst tokenvalue = getTokenValue();\r\nconst EmployeeUploadManager = () => {\r\n  const [fileData, setFileData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedStaff, setSelectedStaff] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isConfOpen, setIsConfOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleSave = async (payload) => {\r\n    try {\r\n      setLoading(true);\r\n      if (fileData?.length > 0) {\r\n        const updatedArray = fileData.map((item) =>\r\n          item.id === payload.id ? { ...item, ...payload } : item\r\n        );\r\n\r\n        setFileData(updatedArray);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Save Change Error: \", error);\r\n      toast.error(error?.response?.data?.message || \"Internal Server Error.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleConfClose = () => {\r\n    setIsConfOpen(false);\r\n    setDeleteId(\"\");\r\n  };\r\n\r\n  const handleDelConf = (payload) => {\r\n    if (payload?.message === \"Delete\") {\r\n      if (fileData?.length > 0) {\r\n        setFileData((prev) =>\r\n          prev.filter((item) => item.employeeID !== payload?.userData)\r\n        );\r\n      }\r\n    }\r\n\r\n    handleConfClose();\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    try {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const sheet = workbook.Sheets[sheetName];\r\n        const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n        const pp = parsedData.map(({ HospitalName, ...rest }) => ({\r\n          assignedLocation: HospitalName,\r\n          ...rest,\r\n        }));\r\n\r\n        const withIds = pp.map((prev, index) => ({\r\n          ...prev,\r\n          id: index + 1,\r\n        }));\r\n\r\n        setFileData(withIds);\r\n        event.target.value = null;\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleUploadToDatabase = async () => {\r\n    try {\r\n      const response = await api.post(\"/Collection/register_collector\", {\r\n        employeeID: fileData.map((Item) => Item?.employeeID),\r\n        employeeName: fileData.map((Item) => Item?.employeeName),\r\n        employeePhone: fileData.map((Item) => Item?.employeePhone),\r\n        employeeEmail: fileData.map((Item) => Item?.employeeEmail),\r\n        assignedAs: fileData.map((Item) => Item?.assignedAs),\r\n        assignedBy: fileData.map((Item) => Item?.assignedBy),\r\n        contactMethod: fileData.map((Item) => Item?.contactMethod),\r\n        user: tokenvalue?.name,\r\n      });\r\n      toast.success(\"Upload Successful.\");\r\n      setRefresh((prev) => !prev);\r\n      setFileData([]);\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      toast.error(\r\n        error?.response?.data.length <= 50\r\n          ? error?.response?.data\r\n          : \"File Upload Failed. please check if empty column exists.\" ||\r\n              \"Internal Server Error.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEmp = async () => {\r\n      try {\r\n        const response = await api.get(`/Collection/collector`);\r\n\r\n        setData(response?.data <= 0 ? new Array() : response?.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(error?.response?.data || \"Failde To Load list.\");\r\n      }\r\n    };\r\n\r\n    fetchEmp();\r\n  }, [refresh]);\r\n\r\n  const handleDeleteAll = () => {\r\n    setFileData([]);\r\n  };\r\n\r\n  const handleEdit = (params) => {\r\n    setSelectedStaff(params?.row);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handlConfirm = (params) => {\r\n    setDeleteId(params?.row?.employeeID);\r\n    setIsConfOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"employeeID\", headerName: \"Employee ID\", flex: 1 },\r\n    { field: \"employeeName\", headerName: \"Employee Name\", flex: 1 },\r\n    { field: \"employeePhone\", headerName: \"Phone\", flex: 1 },\r\n    { field: \"employeeEmail\", headerName: \"Email\", flex: 1 },\r\n    { field: \"assignedAs\", headerName: \"Assigned As\", flex: 1 },\r\n    { field: \"assignedBy\", headerName: \"Assigned By\", flex: 1 },\r\n    { field: \"contactMethod\", headerName: \"Contact Method\", flex: 1 },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            onClick={() => handleEdit(params)}\r\n            color=\"info\"\r\n            aria-label=\"edit\"\r\n            className=\"text-info\"\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={() => handlConfirm(params)}\r\n            aria-label=\"delete\"\r\n            className=\"text-danger\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const CustomErrorOverlay = () => {\r\n    toast.error(\"Id Missing\");\r\n    return (\r\n      <div style={{ padding: \"20px\", color: \"red\" }}>\r\n        An error occurred: Id Missing\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Employee ID - Hospital Mapping\r\n      </Typography>\r\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\r\n        <input\r\n          accept=\".xlsx, .xls\"\r\n          type=\"file\"\r\n          onChange={(e) => {\r\n            handleFileUpload(e);\r\n          }}\r\n          style={{ display: \"none\" }}\r\n          id=\"upload-excel\"\r\n        />\r\n        <label htmlFor=\"upload-excel\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n            component=\"span\"\r\n            startIcon={<CloudUploadIcon />}\r\n          >\r\n            Upload Excel\r\n          </Button>\r\n        </label>\r\n        <IconButton\r\n          onClick={handleDeleteAll}\r\n          color=\"error\"\r\n          sx={{ marginLeft: 2 }}\r\n        >\r\n          <CancelPresentationTwoTone />\r\n        </IconButton>\r\n        <Button\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          onClick={handleUploadToDatabase}\r\n          sx={{ marginLeft: 2 }}\r\n          disabled={fileData.length === 0}\r\n        >\r\n          Upload to Database\r\n        </Button>\r\n        <Typography variant=\"h6\" sx={{ m: \"15px 0 5px 20px\" }}>\r\n          {fileData.length > 0 ? \"Viewing from File\" : \"Viewing Registered\"}\r\n        </Typography>\r\n      </Paper>\r\n      <Paper sx={{ height: 400 }}>\r\n        <DataGrid\r\n          rows={fileData.length <= 0 ? data : fileData}\r\n          columns={columns}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n          components={{\r\n            ErrorOverlay: CustomErrorOverlay,\r\n          }}\r\n        />\r\n      </Paper>\r\n\r\n      <EditStaffModal\r\n        open={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        staffData={selectedStaff}\r\n        onSave={handleSave}\r\n        isloading={loading}\r\n      />\r\n      <ConfirmationModal\r\n        isOpen={isConfOpen}\r\n        onClose={handleConfClose}\r\n        onConfirm={handleDelConf}\r\n        userData={deleteId}\r\n      />\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EmployeeUploadManager;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { formatAccounting2 } from \"../pages/hospitalpayment/HospitalPayment\";\r\n\r\nexport default function PatientTransactionsModal({ open, onClose, rows }) {\r\n  const theme = useTheme();\r\n\r\n  // Get shared patient card number and name from the first row\r\n  const sharedCardNumber = rows?.[0]?.patientCardNumber || \"\";\r\n  const sharedPatientName = rows?.[0]?.patientFName || \"\";\r\n\r\n  const columns = [\r\n    {\r\n      field: \"catagory\",\r\n      headerName: \"Category\",\r\n      flex: 1,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      field: \"service\",\r\n      headerName: \"Services\",\r\n      flex: 1,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      field: \"amount\",\r\n      headerName: \"Amount\",\r\n      flex: 1,\r\n      minWidth: 120,\r\n      renderCell: (params) => {\r\n        return formatAccounting2(params?.row?.amount);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          onClose(); // Reset and close the modal\r\n        }\r\n      }}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      scroll=\"paper\"\r\n      disableEnforceFocus // to remove focus warning\r\n    >\r\n      <DialogTitle sx={{ m: 0, p: 2 }}>\r\n        Payment Detail\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent\r\n        dividers\r\n        sx={{ height: { xs: \"60vh\", sm: \"70vh\", md: \"60vh\" } }}\r\n      >\r\n        {/* Display Shared Info */}\r\n        <Box\r\n          sx={{\r\n            mb: 2,\r\n            p: 2,\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[700],\r\n            borderRadius: 1,\r\n            display: \"flex\",\r\n            flexDirection: { xs: \"column\", sm: \"row\" },\r\n            justifyContent: \"space-between\",\r\n            gap: 2,\r\n          }}\r\n        >\r\n          <Typography variant=\"subtitle1\">\r\n            <strong>Card Number:</strong> {sharedCardNumber}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">\r\n            <strong>Patient Name:</strong> {sharedPatientName}\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Transactions Table */}\r\n        <DataGrid\r\n          rows={rows || []}\r\n          columns={columns}\r\n          autoHeight\r\n          disableSelectionOnClick\r\n          sx={{\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: theme.palette.action.hover,\r\n            },\r\n            \"& .MuiDataGrid-row:nth-of-type(odd)\": {\r\n              backgroundColor: theme.palette.action.selected,\r\n            },\r\n            minWidth: 320,\r\n          }}\r\n        />\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={() => onClose()} variant=\"contained\" color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nPatientTransactionsModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  rows: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      patientCardNumber: PropTypes.string.isRequired,\r\n      patientFName: PropTypes.string.isRequired,\r\n      catagory: PropTypes.string.isRequired,\r\n      service: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import { ResponsivePie } from \"@nivo/pie\";\r\nimport { tokens } from \"../theme\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { mockPieData as data } from \"../data/mockData\";\r\n\r\nconst PieChart = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <ResponsivePie\r\n      data={data}\r\n      theme={{\r\n        axis: {\r\n          domain: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n            },\r\n          },\r\n          legend: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n          ticks: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n              strokeWidth: 1,\r\n            },\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        },\r\n        legends: {\r\n          text: {\r\n            fill: colors.grey[100],\r\n          },\r\n        },\r\n      }}\r\n      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n      innerRadius={0.5}\r\n      padAngle={0.7}\r\n      cornerRadius={3}\r\n      activeOuterRadiusOffset={8}\r\n      borderColor={{\r\n        from: \"color\",\r\n        modifiers: [[\"darker\", 0.2]],\r\n      }}\r\n      arcLinkLabelsSkipAngle={10}\r\n      arcLinkLabelsTextColor={colors.grey[100]}\r\n      arcLinkLabelsThickness={2}\r\n      arcLinkLabelsColor={{ from: \"color\" }}\r\n      enableArcLabels={false}\r\n      arcLabelsRadiusOffset={0.4}\r\n      arcLabelsSkipAngle={7}\r\n      arcLabelsTextColor={{\r\n        from: \"color\",\r\n        modifiers: [[\"darker\", 2]],\r\n      }}\r\n      defs={[\r\n        {\r\n          id: \"dots\",\r\n          type: \"patternDots\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          size: 4,\r\n          padding: 1,\r\n          stagger: true,\r\n        },\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        },\r\n      ]}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom\",\r\n          direction: \"row\",\r\n          justify: false,\r\n          translateX: 0,\r\n          translateY: 56,\r\n          itemsSpacing: 0,\r\n          itemWidth: 100,\r\n          itemHeight: 18,\r\n          itemTextColor: \"#999\",\r\n          itemDirection: \"left-to-right\",\r\n          itemOpacity: 1,\r\n          symbolSize: 18,\r\n          symbolShape: \"circle\",\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemTextColor: \"#000\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Paper,\r\n  Stack,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport { CheckBox, Refresh } from \"@mui/icons-material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport api from \"../utils/api\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport FolderSpecialIcon from \"@mui/icons-material/FolderSpecial\";\r\nimport MedicalServicesIcon from \"@mui/icons-material/MedicalServices\";\r\nimport AssignmentLateIcon from \"@mui/icons-material/AssignmentLate\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport HourglassEmptyIcon from \"@mui/icons-material/HourglassEmpty\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\n\r\n// Utility function to return icon + color based on status\r\nconst getStatusIcon = (status, theme) => {\r\n  try {\r\n    const lowerStatus = (status || \"\").toLowerCase();\r\n    switch (lowerStatus) {\r\n      case \"completed\":\r\n        return <CheckCircleIcon fontSize=\"small\" sx={{ color: \"green\" }} />;\r\n      case \"paid\":\r\n        return (\r\n          <PaidIcon\r\n            fontSize=\"small\"\r\n            sx={{ color: theme?.palette?.mode === \"dark\" ? \"#388ada\" : \"blue\" }}\r\n          />\r\n        );\r\n      case \"ordered\":\r\n        return <HourglassEmptyIcon fontSize=\"small\" sx={{ color: \"orange\" }} />;\r\n      case \"failed\":\r\n        return <CancelIcon fontSize=\"small\" sx={{ color: \"red\" }} />;\r\n      default:\r\n        return <HelpOutlineIcon fontSize=\"small\" sx={{ color: \"grey.600\" }} />;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"This is getStatusIcon Error : \", error);\r\n  }\r\n};\r\n\r\nconst tokenValue = getTokenValue();\r\n\r\nconst TreatmentEntry = () => {\r\n  const theme = useTheme();\r\n  const [treatments, setTreatments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [tabValue, setTabValue] = useState(\"all\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [selectedTests, setSelectedTests] = useState([]);\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [requestedFrom, setRequestedFrom] = useState(\"\");\r\n\r\n  const [completeDialogOpen, setCompleteDialogOpen] = useState(false);\r\n  const [testsToComplete, setTestsToComplete] = useState([]);\r\n  const [completedSelectedTests, setCompletedSelectedTests] = useState([]);\r\n  const [completingPatient, setCompletingPatient] = useState({});\r\n  const [completeIsLoading, setCompleteIsLoading] = useState(false);\r\n\r\n  // Define checkbox color based on theme mode\r\n  const checkboxColor =\r\n    theme.palette.mode === \"light\" ? \"#0078d7\" : theme.palette.secondary.main;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        setTreatments([]);\r\n        const requestedTo = tokenValue?.UserType?.toLowerCase()?.includes(\"mlt\")\r\n          ? \"/Request/doctor/get-request-lab\"\r\n          : \"/Request/doctor/get-request-radiology\";\r\n\r\n        const res = await api.get(requestedTo);\r\n        const raw = res?.data?.data?.value || [];\r\n        raw.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn));\r\n\r\n        const groupedMap = new Map();\r\n\r\n        raw.forEach((item) => {\r\n          const name = [\r\n            item.patientFirstName,\r\n            item.patientMiddleName,\r\n            item.patientLastName,\r\n          ]\r\n            .filter(Boolean)\r\n            .join(\" \");\r\n          const key = `${item.patientCardNumber}-${\r\n            item.requestedDepartment\r\n          }-${item.createdOn.slice(0, 16).replace(\"T\", \" \")}`;\r\n\r\n          if (!groupedMap.has(key)) {\r\n            groupedMap.set(key, {\r\n              id: key,\r\n              patientCardNumber: item.patientCardNumber,\r\n              patientFName: name,\r\n              requestedReason: item.requestedDepartment,\r\n              requestGroup: item.requestingDepartment,\r\n              createdOn: item.createdOn.slice(0, 16).replace(\"T\", \" \"),\r\n              tests: [],\r\n              paid: [],\r\n              totalPrice: 0,\r\n              requestedItems: [],\r\n            });\r\n          }\r\n\r\n          const group = groupedMap.get(key);\r\n          item.requestedItems.forEach((i) => {\r\n            group.tests.push(i.requestedServices || \"Unknown\");\r\n            group.paid.push(i.requeststatus || \"Unpaid\");\r\n            group.totalPrice += i.price || 0;\r\n            group.requestedItems.push(i);\r\n          });\r\n        });\r\n\r\n        const grouped = Array.from(groupedMap.values());\r\n\r\n        setTreatments(grouped);\r\n      } catch (err) {\r\n        console.error(\"This is fetchData Error : \", err);\r\n        toast.error(err?.response?.data?.msg || \"Failed to fetch data\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  const paidTabs = useMemo(() => {\r\n    try {\r\n      const statuses =\r\n        treatments?.length > 0\r\n          ? new Set(\r\n              treatments.flatMap((t) =>\r\n                Array.isArray(t?.paid)\r\n                  ? t.paid.map((p) => p || \"Unpaid\")\r\n                  : [\"Unpaid\"]\r\n              )\r\n            )\r\n          : [];\r\n\r\n      return Array.from(statuses)?.length > 0\r\n        ? [\"all\", ...Array.from(statuses)]\r\n        : [];\r\n    } catch (error) {\r\n      console.error(\"getTabs Error:\", error);\r\n      return [\"all\"];\r\n    }\r\n  }, [treatments]);\r\n\r\n  const filtered = useMemo(() => {\r\n    return treatments?.length > 0\r\n      ? treatments?.filter((row) => {\r\n          const lowerStatuses = row?.paid?.map((status) =>\r\n            (status || \"\").toLowerCase()\r\n          );\r\n\r\n          // Match against tab value\r\n          const matchesTab =\r\n            tabValue === \"all\"\r\n              ? true\r\n              : lowerStatuses?.includes(tabValue?.toLowerCase());\r\n\r\n          const matchesSearch =\r\n            row.patientFName.toLowerCase().includes(search.toLowerCase()) ||\r\n            row.patientCardNumber.toLowerCase().includes(search.toLowerCase());\r\n\r\n          return matchesTab && matchesSearch;\r\n        })\r\n      : [];\r\n  }, [treatments, tabValue, search]);\r\n\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientFName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"requestedReason\", headerName: \"Category\", flex: 1 },\r\n    { field: \"tests\", headerName: \"Tests\", flex: 2 },\r\n    { field: \"requestGroup\", headerName: \"Requested From\", flex: 1 },\r\n    { field: \"totalPrice\", headerName: \"Amount\", flex: 1 },\r\n    {\r\n      field: \"paid\",\r\n      headerName: \"Status\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          const distinctValue = new Set(params?.row?.paid);\r\n          return Array.from(distinctValue || [])?.join(\", \");\r\n        } catch (error) {\r\n          console.error(error);\r\n          return \"\";\r\n        }\r\n      },\r\n    },\r\n    { field: \"createdOn\", headerName: \"Date\", flex: 1 },\r\n    {\r\n      field: \"Action\",\r\n      headerName: \"Action\",\r\n      flex: 1.5,\r\n      renderCell: (params) =>\r\n        params?.row?.paid.some((p) => p?.toLowerCase() === \"paid\") && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<TaskAltIcon />}\r\n            onClick={() => {\r\n              setTestsToComplete(params.row.requestedItems);\r\n              setCompletedSelectedTests([]);\r\n              setCompletingPatient({\r\n                name: params.row.patientFName,\r\n                group: params.row.requestGroup,\r\n              });\r\n              setCompleteDialogOpen(true);\r\n            }}\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            sx={{\r\n              color: theme.palette.mode === \"light\" ? \"#2e8ac9\" : \"secondary\",\r\n              border: `1px solid ${\r\n                theme.palette.mode === \"light\" ? \"rgb(82 158 210)\" : \"secondary\"\r\n              }`,\r\n            }}\r\n          >\r\n            Mark Completed\r\n          </Button>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleCloseMarkAsCompletedModal = () => {\r\n    setCompleteDialogOpen(false);\r\n    setCompletingPatient({});\r\n    setTestsToComplete([]);\r\n  };\r\n\r\n  const handleCloseViewDetailsModal = () => {\r\n    setDialogOpen(false);\r\n    setPatientName(\"\");\r\n    setRequestedFrom(\"\");\r\n    setSelectedTests([]);\r\n  };\r\n\r\n  const handleMarkAsCompleted = async () => {\r\n    try {\r\n      setCompleteIsLoading(true);\r\n      const responses = await Promise.all(\r\n        completedSelectedTests.map((item) => {\r\n          const numericId = Number(item.id);\r\n          return api.put(\"/Request/doctor/complete-request\", numericId, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n        })\r\n      );\r\n\r\n      if (responses?.every((res) => res?.status === 200)) {\r\n        toast.success(\r\n          `${completedSelectedTests.length} test(s) marked as completed`\r\n        );\r\n        setCompleteDialogOpen(false);\r\n        setRefresh((p) => !p);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"This is handleMarkAsCompleted Error : \", err);\r\n      toast.error(`${err}`);\r\n    } finally {\r\n      setCompleteIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDoubleClick = (params, event) => {\r\n    try {\r\n      if (\r\n        event.target.nodeName === \"BUTTON\" ||\r\n        event.currentTarget.querySelector(\"button\")?.contains(event.target)\r\n      )\r\n        return;\r\n      setSelectedTests(params.row.requestedItems);\r\n      setPatientName(params.row.patientFName);\r\n      setRequestedFrom(params.row.requestGroup);\r\n      setDialogOpen(true);\r\n    } catch (error) {\r\n      console.error(\"This is handleDoubleClick Error : \", error);\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (event) => {\r\n    const { checked, name: categoryName } = event.target;\r\n\r\n    // All tests in the category\r\n    const categoryTests = testsToComplete.filter(\r\n      (t) =>\r\n        t.requestCatagory === categoryName &&\r\n        (t.requeststatus || \"\").toLowerCase() === \"paid\"\r\n    );\r\n\r\n    // Update selected tests\r\n    setCompletedSelectedTests((prev) => {\r\n      if (checked) {\r\n        // Add all category tests not already selected\r\n        const toAdd = categoryTests.filter((test) => !prev.includes(test));\r\n        return [...prev, ...toAdd];\r\n      } else {\r\n        // Remove all tests in category\r\n        return prev.filter((test) => test.requestCatagory !== categoryName);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        fontWeight={700}\r\n        sx={{ mb: 4, color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\" }}\r\n      >\r\n        Patient Treatment Entry\r\n      </Typography>\r\n\r\n      <Paper sx={{ mb: 2, borderRadius: 2 }}>\r\n        {paidTabs?.length > 0 ? (\r\n          <Tabs\r\n            value={paidTabs.includes(tabValue) ? tabValue : \"all\"}\r\n            onChange={(e, newVal) => setTabValue(newVal)}\r\n            variant=\"fullWidth\"\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                textTransform: \"capitalize\",\r\n                fontWeight: 600,\r\n                borderRadius: 2,\r\n                mx: 1,\r\n                color: theme.palette.mode === \"dark\" ? \"#aaa\" : \"#333\",\r\n              },\r\n              \"& .Mui-selected\": {\r\n                backgroundColor: \"#2e8ac9\",\r\n                color:\r\n                  theme.palette.mode === \"dark\"\r\n                    ? \"#000000DE\"\r\n                    : \"#fff !important\",\r\n              },\r\n              \"& .MuiTabs-indicator\": { display: \"none\" },\r\n            }}\r\n          >\r\n            {paidTabs.map((status, index) => (\r\n              <Tab\r\n                key={index}\r\n                label={status === \"all\" ? \"All\" : status}\r\n                value={status}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        ) : (\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2}>\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Search...\"\r\n        variant=\"outlined\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n        InputProps={{\r\n          sx: {\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n          },\r\n        }}\r\n        InputLabelProps={{\r\n          sx: {\r\n            color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n            \"&.Mui-focused\": {\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Box mb={2}>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setRefresh((p) => !p)}\r\n            disabled={isLoading}\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n          >\r\n            {isLoading ? <CircularProgress size={24} /> : <Refresh />}\r\n          </Button>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Paper elevation={3}>\r\n        <DataGrid\r\n          rows={filtered}\r\n          columns={columns}\r\n          loading={isLoading}\r\n          getRowId={(row) => row.id}\r\n          onRowDoubleClick={(params, event) => handleDoubleClick(params, event)}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Paper>\r\n\r\n      {/* View Details Dialog */}\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleCloseViewDetailsModal();\r\n          }\r\n        }}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        TransitionComponent={Fade}\r\n        disableEnforceFocus // to remove focus warning\r\n        BackdropProps={{ \"aria-hidden\": false }}\r\n      >\r\n        <DialogTitle\r\n          sx={{\r\n            bgcolor: \"#166295\",\r\n            color: \"primary.contrastText\",\r\n            py: 2,\r\n            px: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h6\">\r\n              Tests for <strong>{patientName}</strong> from{\" \"}\r\n              <strong>{requestedFrom}</strong>\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => handleCloseViewDetailsModal()}\r\n              sx={{ color: \"primary.contrastText\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers sx={{ py: 3, px: 3 }}>\r\n          {selectedTests?.length > 0 ? (\r\n            <Box sx={{ maxHeight: \"60vh\", overflow: \"auto\", pr: 1 }}>\r\n              {Object.entries(\r\n                selectedTests?.length > 0\r\n                  ? selectedTests?.reduce((acc, test) => {\r\n                      const category = test?.requestCatagory;\r\n                      if (!acc[category]) acc[category] = [];\r\n                      acc[category].push(test);\r\n                      return acc;\r\n                    }, {})\r\n                  : {}\r\n              )?.map(([category, tests]) => (\r\n                <Box\r\n                  key={category}\r\n                  mb={3}\r\n                  sx={{\r\n                    borderLeft: \"4px solid\",\r\n                    borderColor: \"#398bdb\",\r\n                    pl: 2,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    fontWeight=\"bold\"\r\n                    color={theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\"}\r\n                  >\r\n                    <FolderSpecialIcon fontSize=\"small\" /> {category}\r\n                  </Typography>\r\n                  <Stack spacing={1.5} pl={2}>\r\n                    {tests.map((test, index) => (\r\n                      <Paper\r\n                        key={index}\r\n                        sx={{\r\n                          p: 1.5,\r\n                          border: \"1px solid\",\r\n                          borderColor: \"divider\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                          <MedicalServicesIcon fontSize=\"small\" />\r\n                          <Typography>{test.requestedServices}</Typography>\r\n                        </Box>\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                          {getStatusIcon(test.requeststatus, theme)}\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {test.requeststatus}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Paper>\r\n                    ))}\r\n                  </Stack>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Box textAlign=\"center\" py={4}>\r\n              <AssignmentLateIcon sx={{ fontSize: 60 }} color=\"disabled\" />\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No tests available\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button\r\n            onClick={() => handleCloseViewDetailsModal()}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Mark Complete Dialog */}\r\n      <Dialog\r\n        open={completeDialogOpen}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleCloseMarkAsCompletedModal();\r\n          }\r\n        }}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        TransitionComponent={Fade}\r\n        disableEnforceFocus // to remove focus warning\r\n        BackdropProps={{ \"aria-hidden\": false }}\r\n      >\r\n        <DialogTitle\r\n          sx={{\r\n            bgcolor: \"#166295\",\r\n            color: \"primary.contrastText\",\r\n            py: 2,\r\n            px: 3,\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"h6\">\r\n              Select tests to complete for{\" \"}\r\n              <strong>{completingPatient?.name || \"Unknown\"}</strong>\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => handleCloseMarkAsCompletedModal()}\r\n              sx={{ color: \"primary.contrastText\" }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent dividers sx={{ py: 3, px: 3 }}>\r\n          {testsToComplete?.filter(\r\n            (t) => (t?.requeststatus || \"\").toLowerCase() === \"paid\"\r\n          )?.length > 0 ? (\r\n            <Box sx={{ maxHeight: \"60vh\", overflow: \"auto\", pr: 1 }}>\r\n              {Object.entries(\r\n                testsToComplete\r\n                  ?.filter(\r\n                    (t) => (t.requeststatus || \"\").toLowerCase() === \"paid\"\r\n                  )\r\n                  ?.reduce((acc, test) => {\r\n                    const category = test.requestCatagory;\r\n                    if (!acc[category]) acc[category] = [];\r\n                    acc[category].push(test);\r\n                    return acc;\r\n                  }, {})\r\n              ).map(([category, tests]) => {\r\n                const selectedCount = tests.filter((test) =>\r\n                  completedSelectedTests.includes(test)\r\n                ).length;\r\n                const totalCount = tests.length;\r\n\r\n                const checked = selectedCount === totalCount && totalCount > 0;\r\n                const indeterminate =\r\n                  selectedCount > 0 && selectedCount < totalCount;\r\n\r\n                return (\r\n                  <Box\r\n                    key={category}\r\n                    mb={3}\r\n                    sx={{ borderLeft: \"4px solid #398bdb\", pl: 2 }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\" mb={1}>\r\n                      <FormControlLabel\r\n                        label={\r\n                          <>\r\n                            <FolderSpecialIcon fontSize=\"small\" /> {category}\r\n                          </>\r\n                        }\r\n                        name={category}\r\n                        control={\r\n                          <Checkbox\r\n                            checked={checked}\r\n                            indeterminate={indeterminate}\r\n                            onChange={handleCategorySelect}\r\n                            sx={{\r\n                              color: checkboxColor,\r\n                              \"&.Mui-checked\": {\r\n                                color: checkboxColor,\r\n                              },\r\n                              \"&.MuiCheckbox-indeterminate\": {\r\n                                color: checkboxColor,\r\n                              },\r\n                            }}\r\n                          />\r\n                        }\r\n                      />\r\n                    </Typography>\r\n                    <Stack spacing={1.5} pl={2}>\r\n                      {tests.map((test, index) => {\r\n                        const isSelected =\r\n                          completedSelectedTests.includes(test);\r\n                        return (\r\n                          <Paper\r\n                            key={index}\r\n                            onClick={() => {\r\n                              setCompletedSelectedTests((prev) =>\r\n                                isSelected\r\n                                  ? prev.filter((t) => t !== test)\r\n                                  : [...prev, test]\r\n                              );\r\n                            }}\r\n                            sx={{\r\n                              p: 1.5,\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              gap: 2,\r\n                              border: \"1px solid\",\r\n                              borderColor: \"divider\",\r\n                              bgcolor: isSelected\r\n                                ? \"action.selected\"\r\n                                : \"background.paper\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              readOnly\r\n                              checked={isSelected}\r\n                            />\r\n                            <Typography>\r\n                              <MedicalServicesIcon fontSize=\"small\" />{\" \"}\r\n                              {test.requestedServices}\r\n                            </Typography>\r\n                          </Paper>\r\n                        );\r\n                      })}\r\n                    </Stack>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n          ) : (\r\n            <Box textAlign=\"center\" py={4}>\r\n              <AssignmentLateIcon sx={{ fontSize: 60 }} color=\"disabled\" />\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No paid tests available for completion\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button\r\n            onClick={() => handleMarkAsCompleted()}\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            disabled={completedSelectedTests?.length === 0 || completeIsLoading}\r\n          >\r\n            {completeIsLoading ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Complete Selected Tests\"\r\n            )}\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleCloseMarkAsCompletedModal()}\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TreatmentEntry;\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Backdrop,\r\n  CircularProgress,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\n\r\nconst ConfirmationModal = ({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  userData,\r\n  userRole,\r\n  loading,\r\n}) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          onClose();\r\n        }\r\n      }}\r\n      disableEscapeKeyDown\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{ timeout: 500 }}\r\n      aria-labelledby=\"confirmation-modal-title\"\r\n      aria-describedby=\"confirmation-modal-description\"\r\n    >\r\n      <Box\r\n        sx={modalStyle}\r\n        bgcolor={\r\n          theme.palette.mode === \"light\"\r\n            ? theme.palette.background.paper\r\n            : theme.palette.background.default\r\n        }\r\n      >\r\n        {/* Header */}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            fontWeight=\"bold\"\r\n            id=\"confirmation-modal-title\"\r\n            sx={{\r\n              color: (theme) =>\r\n                theme.palette.mode === \"light\"\r\n                  ? theme.palette.primary.main\r\n                  : theme.palette.info.light,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <InfoIcon sx={{ fontSize: 28, mr: 1 }} />\r\n            Please Confirm\r\n          </Typography>\r\n\r\n          <IconButton onClick={onClose} color=\"error\" aria-label=\"close modal\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n\r\n        {/* Warning Message */}\r\n        <Typography\r\n          variant=\"body1\"\r\n          textAlign=\"center\"\r\n          mt={2}\r\n          id=\"confirmation-modal-description\"\r\n        >\r\n          Are you sure you want to delete the{\" \"}\r\n          {userRole ? `role \"${userRole}\"` : \"user \"}\r\n          <strong>{userData}</strong>?\r\n        </Typography>\r\n\r\n        {/* Buttons */}\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n            onClick={() => {\r\n              onConfirm({ userData: userData, message: \"Delete\" });\r\n            }}\r\n            sx={{ mx: 1 }}\r\n            aria-label=\"confirm deletion\"\r\n          >\r\n            {loading ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              \"Confirm\"\r\n            )}\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            onClick={onClose}\r\n            sx={{ mx: 1 }}\r\n            aria-label=\"cancel deletion\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Modal Styles\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  boxShadow: 24,\r\n  p: 3,\r\n  borderRadius: 2,\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\nimport api from \"../utils/api\";\r\n\r\nconst LineChart = ({ isCustomLineColors = false, isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const tokenvalue = useMemo(() => getTokenValue(), []);\r\n\r\n  // Set default dates: today and 7 days before, normalized\r\n  const today = useMemo(() => {\r\n    const date = new Date();\r\n    date.setHours(23, 59, 59, 999);\r\n    return date;\r\n  }, []);\r\n\r\n  const startDate = useMemo(() => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() - 7);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n  }, []);\r\n\r\n  const [result, setResult] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.put(\"/Payment/Get-all-Payment\", {\r\n          startDate,\r\n          endDate: today,\r\n          user: tokenvalue?.name,\r\n        });\r\n\r\n        const filteredData = response?.data || [];\r\n\r\n        const summary = filteredData\r\n          .filter((item) => item.paymentType.toLowerCase() !== \"free of charge\")\r\n          .reduce((acc, payment) => {\r\n            const dateKey = new Date(payment.registeredOn)\r\n              .toISOString()\r\n              .split(\"T\")[0];\r\n            acc[dateKey] =\r\n              (acc[dateKey] || 0) + parseFloat(payment.paymentAmount);\r\n            return acc;\r\n          }, {});\r\n\r\n        const mapped = Object.entries(summary)\r\n          .sort((a, b) => new Date(a[0]) - new Date(b[0]))\r\n          .map(([date, amount]) => ({\r\n            x: date,\r\n            y: amount,\r\n            Date: date,\r\n            Amount: amount,\r\n          }));\r\n\r\n        setResult(mapped);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [startDate, today, tokenvalue]);\r\n\r\n  const data = useMemo(\r\n    () => [\r\n      {\r\n        id: \"Transaction\",\r\n        color: tokens(\"dark\").greenAccent[500],\r\n        data: result,\r\n      },\r\n    ],\r\n    [result]\r\n  );\r\n\r\n  if (loading) return <div>Loading chart...</div>;\r\n  if (!result.length) return <></>;\r\n\r\n  return (\r\n    <ResponsiveLine\r\n      data={data}\r\n      theme={{\r\n        axis: {\r\n          domain: { line: { stroke: colors.grey[100] } },\r\n          legend: { text: { fill: colors.grey[100] } },\r\n          ticks: {\r\n            line: { stroke: colors.grey[100], strokeWidth: 1 },\r\n            text: { fill: colors.grey[100] },\r\n          },\r\n        },\r\n        legends: {\r\n          text: { fill: colors.grey[100] },\r\n        },\r\n      }}\r\n      tooltip={({ point }) => (\r\n        <div\r\n          style={{\r\n            background: colors.primary[400],\r\n            padding: \"12px\",\r\n            border: \"1px solid #ccc\",\r\n            borderRadius: \"4px\",\r\n            color: colors.grey[100],\r\n          }}\r\n        >\r\n          <div>\r\n            <strong>Date:</strong> {point.data.Date}\r\n          </div>\r\n          <div>\r\n            <strong>Amount:</strong> {point.data.Amount}\r\n          </div>\r\n        </div>\r\n      )}\r\n      colors={isDashboard ? { datum: \"color\" } : { scheme: \"nivo\" }}\r\n      margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n      xScale={{ type: \"point\" }}\r\n      yScale={{\r\n        type: \"linear\",\r\n        min: \"auto\",\r\n        max: \"auto\",\r\n        stacked: true,\r\n        reverse: false,\r\n      }}\r\n      yFormat=\" >-.2f\"\r\n      curve=\"catmullRom\"\r\n      axisTop={null}\r\n      axisRight={null}\r\n      axisBottom={{\r\n        orient: \"bottom\",\r\n        tickSize: 0,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Date\",\r\n        legendOffset: 36,\r\n        legendPosition: \"middle\",\r\n      }}\r\n      axisLeft={{\r\n        orient: \"left\",\r\n        tickValues: 5,\r\n        tickSize: 3,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Amount\",\r\n        legendOffset: -40,\r\n        legendPosition: \"middle\",\r\n      }}\r\n      enableGridX={false}\r\n      enableGridY={false}\r\n      pointSize={8}\r\n      pointColor={{ theme: \"background\" }}\r\n      pointBorderWidth={2}\r\n      pointBorderColor={{ from: \"serieColor\" }}\r\n      pointLabelYOffset={-12}\r\n      useMesh={true}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"column\",\r\n          justify: false,\r\n          translateX: 100,\r\n          translateY: 0,\r\n          itemsSpacing: 0,\r\n          itemDirection: \"left-to-right\",\r\n          itemWidth: 80,\r\n          itemHeight: 20,\r\n          itemOpacity: 0.75,\r\n          symbolSize: 12,\r\n          symbolShape: \"circle\",\r\n          symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                itemOpacity: 1,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  Typography,\r\n  Divider,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  Snackbar,\r\n  Alert,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport LabIcon from \"@mui/icons-material/Science\";\r\nimport RadiologyIcon from \"@mui/icons-material/Radio\";\r\nimport ProcedureIcon from \"@mui/icons-material/MedicalServices\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport api from \"../utils/api\";\r\nimport { fetchPatientName, getTokenValue } from \"../services/user_service\";\r\nimport FactCheckIcon from \"@mui/icons-material/FactCheck\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nconst transformPaymentDataToServices = (rows) => {\r\n  try {\r\n    const structured = {};\r\n\r\n    rows.forEach(({ purpose, group, subgroup, amount }) => {\r\n      const groupKey = (group || \"Other\").trim().toLowerCase(); // Normalize group\r\n      const subgroupKey = (subgroup || \"General\").trim(); // Display-friendly casing\r\n      const testName = (purpose || \"\").trim();\r\n\r\n      if (!structured[groupKey]) {\r\n        structured[groupKey] = {};\r\n      }\r\n\r\n      if (!structured[groupKey][subgroupKey]) {\r\n        structured[groupKey][subgroupKey] = [];\r\n      }\r\n\r\n      structured[groupKey][subgroupKey].push({\r\n        purpose: testName,\r\n        price: parseFloat(amount) || 0, // Ensure amount is a number\r\n      });\r\n    });\r\n\r\n    // Optional: sort tests alphabetically by purpose\r\n    Object.keys(structured).forEach((groupKey) => {\r\n      const subgroups = structured[groupKey];\r\n      Object.keys(subgroups).forEach((subKey) => {\r\n        subgroups[subKey].sort((a, b) => a.purpose.localeCompare(b.purpose));\r\n      });\r\n    });\r\n\r\n    return structured;\r\n  } catch (error) {\r\n    console.error(\"This is transformPaymentDataToServices Error:\", error);\r\n    return {};\r\n  }\r\n};\r\n\r\nconst extractLabPanels = (rows) => {\r\n  try {\r\n    const labPanels = {};\r\n    const labPanelsMother = {};\r\n    const categoriesWithPanels = new Set();\r\n\r\n    for (const row of rows) {\r\n      let { group, subgroup, shortCodes, purpose, amount } = row;\r\n\r\n      if (shortCodes && subgroup) {\r\n        // Normalize both group and shortCodes to lowercase\r\n        const groupKey = group?.trim().toLowerCase();\r\n        const shortCodeKey = shortCodes?.trim().toLowerCase();\r\n\r\n        // Register the normalized group name\r\n        categoriesWithPanels.add(groupKey);\r\n\r\n        // Initialize panel entry\r\n        if (!labPanels[shortCodeKey]) labPanels[shortCodeKey] = [];\r\n        labPanels[shortCodeKey].push({ purpose: purpose, price: amount });\r\n\r\n        // Map the shortCode to subgroup (for display)\r\n        labPanelsMother[shortCodeKey] = subgroup;\r\n      }\r\n    }\r\n\r\n    return {\r\n      labPanels,\r\n      labPanelsMother,\r\n      categoriesWithPanels: Array.from(categoriesWithPanels),\r\n    };\r\n  } catch (error) {\r\n    console.error(\"This is extractLabPanels Error:\", error);\r\n    return {\r\n      labPanels: {},\r\n      labPanelsMother: {},\r\n      categoriesWithPanels: [],\r\n    };\r\n  }\r\n};\r\n\r\nconst categoryIcons = {\r\n  lab: <LabIcon fontSize=\"small\" sx={{ mr: 1 }} />,\r\n  Radiology: <RadiologyIcon fontSize=\"small\" sx={{ mr: 1 }} />,\r\n  Procedure: <ProcedureIcon fontSize=\"small\" sx={{ mr: 1 }} />,\r\n};\r\n\r\nconst getCategoryIcon = (key = \"\") => {\r\n  try {\r\n    if (!key || typeof key !== \"string\")\r\n      return (\r\n        <FactCheckIcon fontSize=\"small\" sx={{ mr: 1, color: \"grey.500\" }} />\r\n      );\r\n\r\n    const foundKey = Object.keys(categoryIcons).find((iconKey) =>\r\n      key.toLowerCase().includes(iconKey.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      categoryIcons[foundKey] || (\r\n        <FactCheckIcon fontSize=\"small\" sx={{ mr: 1, color: \"grey.500\" }} />\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(\"This is getCategoryIcon Error: \".error);\r\n  }\r\n};\r\n\r\nconst isAllEmpty = (map) =>\r\n  Object.values(map || {})?.every((cat) =>\r\n    Object.values(cat || {})?.every((arr) => arr?.length === 0)\r\n  );\r\n\r\nconst initialState = {\r\n  lab: {},\r\n  radiology: {},\r\n  procedure: {},\r\n};\r\n\r\nconst BahmniOrderPage = () => {\r\n  const theme = useTheme();\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [selectedSubCategory, setSelectedSubCategory] = useState(\"\");\r\n  const [selectedTestsMap, setSelectedTestsMap] = useState(initialState);\r\n  const [selectedPanels, setSelectedPanels] = useState([]);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardNumberError, setCardNumberError] = useState(\"\");\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [services, setServicsData] = useState({});\r\n  const [labPanels, setLabPanels] = useState({});\r\n  const [refresh, setRefresh] = useState(true);\r\n  const [labPanelsMother, setLabPanelsMother] = useState({});\r\n  const [isPanelSelected, setIsPanelSelected] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [panelsFor, setPanelsFor] = useState([]);\r\n\r\n  // Define checkbox color based on theme mode\r\n  const checkboxColor =\r\n    theme?.palette?.mode === \"light\"\r\n      ? theme?.palette?.primary.main\r\n      : theme?.palette?.secondary.main;\r\n\r\n  const filteredPanels = Object.entries(labPanels || {})?.reduce(\r\n    (acc, [shortCode, tests]) => {\r\n      if (labPanelsMother?.[shortCode] === selectedSubCategory) {\r\n        acc[shortCode] = tests;\r\n      }\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n\r\n  // Set default selectedCategory when services changes\r\n  useEffect(() => {\r\n    const serviceKeys = Object.keys(services || {});\r\n    if (serviceKeys?.length > 0) {\r\n      setSelectedCategory((prev) =>\r\n        serviceKeys?.includes(prev) ? prev : serviceKeys?.[0]\r\n      );\r\n    }\r\n  }, [services]);\r\n\r\n  //extract Services UseEffect\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.get(\"/Lookup/payment-purpose\");\r\n\r\n        if (res?.status === 200) {\r\n          const rows = await res?.data;\r\n          const structuredMockData = transformPaymentDataToServices(rows);\r\n          const { labPanels, labPanelsMother, categoriesWithPanels } =\r\n            extractLabPanels(rows);\r\n\r\n          setPanelsFor(categoriesWithPanels);\r\n          setServicsData(structuredMockData);\r\n          setLabPanels(labPanels);\r\n          setLabPanelsMother(labPanelsMother);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"This is fetch Services Data: \", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const subs = Object.keys(services?.[selectedCategory] || {});\r\n    setSubCategories(subs);\r\n    setSelectedSubCategory(subs[0]);\r\n  }, [selectedCategory, services]);\r\n\r\n  const fetchPatientNames = async () => {\r\n    try {\r\n      if (!cardNumber) return;\r\n      if (!!patientName || !!cardNumberError) return;\r\n\r\n      setIsFetching(true);\r\n\r\n      const fullName = await fetchPatientName(cardNumber);\r\n\r\n      if (fullName) {\r\n        setPatientName(fullName);\r\n      } else {\r\n        toast.error(\"Card Number Not Registered.\");\r\n        setPatientName(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"This is fetchPatientNames Error: \", err);\r\n      toast.error(\"Error\", err?.response?.data?.msg);\r\n      setPatientName(\"\");\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  const handlMRNChange = (e) => {\r\n    setCardNumber(e?.target?.value || \"\");\r\n    setPatientName(\"\");\r\n    mrnCheck(e?.target?.value || \"\");\r\n  };\r\n\r\n  const mrnCheck = (value) => {\r\n    try {\r\n      const valid = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/.test(value);\r\n      if (!valid && value?.length > 0) {\r\n        setCardNumberError(\"Please enter valid MRN (5+ digits).\");\r\n      } else {\r\n        setCardNumberError(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is mrnCheck Error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleTestToggle = (test, checked) => {\r\n    try {\r\n      // Get all selected panels where value === true\r\n      const selectedPanels = Object.entries(isPanelSelected || {})\r\n        ?.filter(([_, isSelected]) => isSelected)\r\n        ?.map(([panelKey]) => panelKey);\r\n\r\n      // Collect all tests under selected panels\r\n      const testsUnderSelectedPanels = selectedPanels?.flatMap(\r\n        (panelKey) => labPanels?.[panelKey] || []\r\n      );\r\n\r\n      const isTestInSelectedPanel = testsUnderSelectedPanels?.some((item) =>\r\n        item?.purpose?.includes(test?.purpose)\r\n      );\r\n\r\n      // Prevent unselecting if the test is in an active panel\r\n      if (!checked && isTestInSelectedPanel) {\r\n        console.warn(\r\n          `Cannot unselect \"${test}\" because it's part of a selected panel.`\r\n        );\r\n        return;\r\n      }\r\n\r\n      // Proceed with toggle\r\n      setSelectedTestsMap((prev) => {\r\n        const current = prev?.[selectedCategory]?.[selectedSubCategory] || [];\r\n\r\n        const updated = checked\r\n          ? current?.some((item) => item?.purpose?.includes(test?.purpose))\r\n            ? current\r\n            : [...current, test]\r\n          : current.filter((t) => t?.purpose !== test?.purpose);\r\n\r\n        return {\r\n          ...prev,\r\n          [selectedCategory]: {\r\n            ...prev?.[selectedCategory],\r\n            [selectedSubCategory]: updated,\r\n          },\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error(\"This is handleTestToggle Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePanelToggle = (panel, e) => {\r\n    try {\r\n      const isChecked = e.target?.checked;\r\n\r\n      // 1. Update panel selection state\r\n      setIsPanelSelected((prev) => ({\r\n        ...(prev || {}),\r\n        [panel]: isChecked,\r\n      }));\r\n\r\n      // 2. Update selectedPanels list\r\n      setSelectedPanels((prev) => {\r\n        const isAlreadySelected = prev?.includes(panel);\r\n        return isAlreadySelected\r\n          ? prev.filter((p) => p !== panel)\r\n          : [...prev, panel];\r\n      });\r\n\r\n      // 3. Update current subcategory\r\n      const theKeyName = labPanelsMother?.[panel];\r\n      setSelectedSubCategory(theKeyName);\r\n\r\n      const tests = labPanels?.[panel] || [];\r\n\r\n      if (isChecked) {\r\n        // If panel is checked, add its tests\r\n        tests.forEach((test) => handleTestToggle(test, true));\r\n      } else {\r\n        // If panel is unchecked, remove its tests\r\n        setSelectedTestsMap((prev) => {\r\n          const current = prev?.[selectedCategory]?.[theKeyName] || [];\r\n\r\n          // Remove tests belonging to this panel\r\n          const updated = current?.filter((t) => !tests?.includes(t));\r\n\r\n          return {\r\n            ...prev,\r\n            [selectedCategory]: {\r\n              ...prev[selectedCategory],\r\n              [theKeyName]: updated,\r\n            },\r\n          };\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is handlePanelToggle Error:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get(\"/Request/doctor/get-request\");\r\n      const value =\r\n        response?.data?.data?.value?.filter(\r\n          (item) => item?.requestedDepartment?.toLowerCase() !== \"pharmacy\"\r\n        ) || [];\r\n\r\n      value?.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn));\r\n      let counter = 1;\r\n      const datagrid = value?.flatMap((item) => [\r\n        {\r\n          id: counter++,\r\n          cardNumber: item.patientCardNumber,\r\n          patientName: [\r\n            item.patientFirstName,\r\n            item.patientMiddleName,\r\n            item.patientLastName,\r\n          ]\r\n            .filter(Boolean)\r\n            .join(\" \"),\r\n          category: item.requestedDepartment,\r\n          createdOn: new Date(item.createdOn).toISOString().split(\"T\")[0],\r\n          tests: (item.requestedItems || []).flatMap(\r\n            (entry) => entry.requestedServices || []\r\n          ),\r\n        },\r\n      ]);\r\n      setRows(datagrid || []);\r\n    } catch (error) {\r\n      console.error(\"The error of Fetching Data grid data is:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setLoadingSubmit(true);\r\n      const tests = [];\r\n      if (cardNumber?.length <= 0) {\r\n        toast.error(\"Please Insert Card Number.\");\r\n        setCardNumberError(\"Please Fill This Field.\");\r\n        return;\r\n      }\r\n\r\n      if (!!cardNumberError) {\r\n        toast?.error(\"Please fix the error first.\");\r\n        return;\r\n      }\r\n\r\n      Object.entries(selectedTestsMap || {})?.forEach(([category, subMap]) => {\r\n        Object.entries(subMap || {})?.forEach(([subCategory, testList]) => {\r\n          testList?.forEach((test) => {\r\n            tests.push({ category, subCategory, test });\r\n          });\r\n        });\r\n      });\r\n\r\n      if (tests?.length === 0) {\r\n        toast.error(\"Please select at least one test.\");\r\n        setLoadingSubmit(false);\r\n        return;\r\n      }\r\n\r\n      const groupedOrders = {};\r\n      tests?.forEach(({ category, subCategory, test }) => {\r\n        if (!groupedOrders[category]) groupedOrders[category] = {};\r\n        if (!groupedOrders[category][subCategory])\r\n          groupedOrders[category][subCategory] = [];\r\n        groupedOrders[category][subCategory].push({\r\n          prodedures: test?.purpose,\r\n          price: test?.price,\r\n        });\r\n      });\r\n\r\n      const orders = Object.entries(groupedOrders || {})?.flatMap(\r\n        ([reqestedTo, subCats]) =>\r\n          Object.entries(subCats || {})?.map(([catagory, requestItems]) => ({\r\n            reqestedTo,\r\n            catagory,\r\n            requestItems,\r\n          }))\r\n      );\r\n\r\n      const payload = {\r\n        patientCardnumber: cardNumber,\r\n        orders,\r\n      };\r\n\r\n      const resp = await api.post(\"/Request/doctor/order-request/lab\", payload);\r\n      if (resp?.status === 200 || resp?.status === 201) {\r\n        toast.success(resp?.data?.msg || \"Orders submitted successfully!\");\r\n        setCardNumber(\"\");\r\n        setPatientName(\"\");\r\n        setRefresh((prev) => !prev);\r\n        handleReset();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n      const msg = error?.response?.data?.errorDescription\r\n        ?.toLowerCase()\r\n        .includes(\"patie\")\r\n        ? error?.response?.data?.errorDescription\r\n        : error?.response?.data?.msg;\r\n      toast.error(msg || \"An error occurred while submitting orders.\");\r\n    } finally {\r\n      setLoadingSubmit(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setSelectedTestsMap(initialState);\r\n    setSelectedPanels([]);\r\n    setSubmitted(false);\r\n    setCardNumberError(\"\");\r\n    setCardNumber(\"\");\r\n    setPatientName(\"\");\r\n  };\r\n\r\n  const currentTests =\r\n    selectedTestsMap?.[selectedCategory]?.[selectedSubCategory] || [];\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 90 },\r\n    { field: \"cardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"category\", headerName: \"Category\", flex: 1 },\r\n    {\r\n      field: \"tests\",\r\n      headerName: \"Tests\",\r\n      flex: 2,\r\n      valueGetter: (params) => {\r\n        return Array.isArray(params) ? params.join(\", \") : params;\r\n      },\r\n    },\r\n    { field: \"createdOn\", headerName: \"Date\", flex: 1 },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      mx=\"auto\"\r\n      marginInline=\"15px\"\r\n      p={4}\r\n      sx={{\r\n        borderRadius: 2,\r\n        backgroundColor:\r\n          theme.palette.mode === \"dark\"\r\n            ? \"#3b89db1f\" //\"#7e7b7b54\"\r\n            : \"#eeeeeeb0\",\r\n        color: theme.palette.text.primary,\r\n        boxShadow: theme.shadows[3],\r\n        transition: \"all 0.3s ease\", // smooth transition when theme changes\r\n      }}\r\n    >\r\n      <Typography variant=\"h3\" fontWeight={700} textAlign=\"center\">\r\n        Send Request\r\n      </Typography>\r\n      <Typography>Welcome Dr. {tokenvalue?.name}</Typography>\r\n\r\n      <Grid container spacing={3} mt={2}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            label=\"Patient Card Number\"\r\n            value={cardNumber}\r\n            onChange={handlMRNChange}\r\n            onBlur={() => fetchPatientNames()}\r\n            fullWidth\r\n            error={!!cardNumberError}\r\n            helperText={cardNumberError}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {isFetching && <CircularProgress size={24} color=\"inherit\" />}\r\n                </InputAdornment>\r\n              ),\r\n              sx: {\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              sx: {\r\n                color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            label=\"Patient Name\"\r\n            value={patientName}\r\n            disabled\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box mt={4}>\r\n        {selectedCategory && (\r\n          <Tabs\r\n            value={selectedCategory}\r\n            onChange={(e, val) => setSelectedCategory(val)}\r\n            variant=\"fullWidth\"\r\n            indicatorColor={\r\n              theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"\r\n            }\r\n          >\r\n            {Object.keys(services || {}).map((cat) => (\r\n              <Tab\r\n                key={cat}\r\n                value={cat}\r\n                label={\r\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                    {getCategoryIcon(cat)} &nbsp;&nbsp;\r\n                    {cat}\r\n                  </Stack>\r\n                }\r\n                sx={(theme) => ({\r\n                  color: theme.palette.text.secondary,\r\n                  \"&.Mui-selected\": {\r\n                    color: \"#6870fa\",\r\n                    fontWeight: 600,\r\n                  },\r\n                })}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        )}\r\n      </Box>\r\n\r\n      <Grid container spacing={4} mt={2}>\r\n        <Grid item xs={12} md={3}>\r\n          <List\r\n            sx={{\r\n              backgroundColor:\r\n                theme.palette.mode === \"dark\" ? \"#141b2d\" : \"#adadad3b\",\r\n            }}\r\n          >\r\n            {subCategories.map((sub) => {\r\n              const isSelected = sub === selectedSubCategory;\r\n\r\n              // #141b2d   #adadad3b #6870fa\r\n              return (\r\n                <ListItem\r\n                  key={sub}\r\n                  button\r\n                  selected={isSelected}\r\n                  onClick={() => setSelectedSubCategory(sub)}\r\n                  sx={{\r\n                    ...(isSelected && {\r\n                      backgroundColor:\r\n                        theme.palette.mode === \"dark\" ? \"#e3e3e31c\" : \"#e3e3e3\",\r\n                      color: \"#6870fa\",\r\n                    }),\r\n                    \"&.Mui-selected\": {\r\n                      backgroundColor:\r\n                        theme.palette.mode === \"dark\" ? \"#e3e3e31c\" : \"#e3e3e3\",\r\n                    },\r\n                    \"&:hover\": {\r\n                      backgroundColor:\r\n                        theme.palette.mode === \"dark\" ? \"#e3e3e31c\" : \"#e3e3e3\",\r\n                      color: \"#6870fa\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <ListItemText primary={sub} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={9}>\r\n          <Paper\r\n            sx={{\r\n              p: 3,\r\n              backgroundColor: theme.palette.mode === \"dark\" && \"#141b2d\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\" fontWeight={700} gutterBottom>\r\n              {selectedSubCategory} Test Selection\r\n            </Typography>\r\n            {panelsFor?.some(\r\n              (each) => each?.toLowerCase() === selectedCategory?.toLowerCase()\r\n            ) &&\r\n              Object.values(labPanelsMother || {})\r\n                ?.map((item) => item?.toLowerCase())\r\n                ?.includes(selectedSubCategory?.toLocaleLowerCase()) && (\r\n                <Box mt={3} sx={{ marginBottom: \"50px\" }}>\r\n                  <Typography variant=\"h6\" fontWeight={700} gutterBottom>\r\n                    {selectedCategory?.charAt(0)?.toUpperCase() +\r\n                      selectedCategory?.slice(1)}{\" \"}\r\n                    Panels\r\n                  </Typography>\r\n                  <Divider sx={{ mb: 3 }} />\r\n\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    {Object.keys(filteredPanels).map((panel, index) => (\r\n                      <FormControlLabel\r\n                        key={panel}\r\n                        control={\r\n                          <Checkbox\r\n                            key={index}\r\n                            label={panel}\r\n                            checked={selectedPanels.includes(panel)}\r\n                            sx={{\r\n                              color: checkboxColor,\r\n                              \"&.Mui-checked\": {\r\n                                color: checkboxColor,\r\n                              },\r\n                            }}\r\n                            onChange={(e) => handlePanelToggle(panel, e)}\r\n                          />\r\n                        }\r\n                        label={panel}\r\n                      />\r\n                    ))}\r\n                  </Stack>\r\n                </Box>\r\n              )}\r\n            <Divider sx={{ mb: 3 }} />\r\n            <Grid container spacing={3}>\r\n              {services?.[selectedCategory]?.[selectedSubCategory]?.map(\r\n                (test) => {\r\n                  const checked = currentTests.some(\r\n                    (t) =>\r\n                      t?.purpose?.toLowerCase?.() ===\r\n                      test?.purpose?.toLowerCase?.()\r\n                  );\r\n\r\n                  return (\r\n                    <Grid item xs={12} sm={6} md={4} key={test?.purpose}>\r\n                      <Tooltip\r\n                        title={checked ? \"Deselect test\" : \"Select test\"}\r\n                        arrow\r\n                      >\r\n                        <Paper\r\n                          onClick={() => handleTestToggle(test, !checked)}\r\n                          sx={(theme) => ({\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            p: 2,\r\n                            borderRadius: 3,\r\n                            cursor: \"pointer\",\r\n                            border: checked\r\n                              ? `2px solid ${theme.palette.primary.main}`\r\n                              : `1px solid ${theme.palette.divider}`,\r\n                            \"&:hover\": {\r\n                              borderColor: theme.palette.primary.light,\r\n                            },\r\n                          })}\r\n                        >\r\n                          <Checkbox\r\n                            checked={checked}\r\n                            onClick={(e) => e.stopPropagation()}\r\n                            onChange={(e) =>\r\n                              handleTestToggle(test, e.target.checked)\r\n                            }\r\n                            sx={{\r\n                              color: checkboxColor,\r\n                              \"&.Mui-checked\": {\r\n                                color: checkboxColor,\r\n                              },\r\n                            }}\r\n                          />\r\n                          <Typography ml={1}>{test?.purpose}</Typography>\r\n                        </Paper>\r\n                      </Tooltip>\r\n                    </Grid>\r\n                  );\r\n                }\r\n              )}\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box textAlign=\"center\" mt={5}>\r\n        <Stack direction=\"row\" spacing={3} justifyContent=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"dark\" ? \"success\" : \"primary\"}\r\n            onClick={() => handleSubmit()}\r\n            disabled={loadingSubmit || isAllEmpty(selectedTestsMap)}\r\n            startIcon={\r\n              loadingSubmit && <CircularProgress size={20} color=\"inherit\" />\r\n            }\r\n          >\r\n            Submit Orders\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={handleReset} color=\"error\">\r\n            Cancel / Reset\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Snackbar\r\n        open={submitted}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSubmitted(false)}\r\n      >\r\n        <Alert onClose={() => setSubmitted(false)} severity=\"success\">\r\n          Orders submitted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Box mt={5}>\r\n        <Typography variant=\"h6\" fontWeight={700} gutterBottom>\r\n          Recently Sent Tests\r\n        </Typography>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          loading={loading}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Box>\r\n\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BahmniOrderPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Button,\r\n  Switch,\r\n  FormControlLabel,\r\n  useTheme,\r\n  OutlinedInput,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { saveAs } from \"file-saver\";\r\nimport dayjs from \"dayjs\";\r\nimport api from \"../utils/api\";\r\nimport { normalizeText } from \"../utils/normalizer\";\r\nimport { formatAccounting2 } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// Well-known reasons for pivoting\r\nconst REASON_KEYS = [\r\n  { key: \"card\", labels: [\"CARD\"] },\r\n  { key: \"examination\", labels: [\"FOR EXAMINATION\", \"FOR EXAMONATION\"] },\r\n  { key: \"laboratory\", labels: [\"LABORATORY\"] },\r\n  { key: \"xray_ultrasound\", labels: [\"X-RAY/ULTRASOUND\"] },\r\n  { key: \"bed\", labels: [\"BED\"] },\r\n  { key: \"medicines\", labels: [\"MEDICINES\"] },\r\n  { key: \"surgery\", labels: [\"SURGERY\"] },\r\n  { key: \"food\", labels: [\"FOOD\"] },\r\n];\r\n\r\nconst getReasonKey = (reason) => {\r\n  if (!reason) return \"other\";\r\n  const normalized = reason.trim().toUpperCase();\r\n  for (const { key, labels } of REASON_KEYS) {\r\n    if (labels.some((label) => normalized === label)) return key;\r\n  }\r\n  return \"other\";\r\n};\r\n\r\nconst getDynamicColumns = (paymentTypeRaw, showDescription, reversedOnly) => {\r\n  const paymentType = normalizeText(paymentTypeRaw);\r\n  const columnMap = {\r\n    digital: [\r\n      { key: \"paymentChannel\", label: \"Channel\" },\r\n      { key: \"paymentVerifingID\", label: \"Verifying ID\" },\r\n    ],\r\n    cash: [{ key: \"recipt\", label: \"Paper Receipt\" }],\r\n    credit: [\r\n      { key: \"patientWorkingPlace\", label: \"Working Place\" },\r\n      { key: \"patientWorkID\", label: \"Work Place ID\" },\r\n    ],\r\n    traffic: [\r\n      { key: \"accedentDate\", label: \"Accident Date\" },\r\n      { key: \"policeName\", label: \"Police Name\" },\r\n      { key: \"policePhone\", label: \"Police Phone\" },\r\n      { key: \"carPlateNumber\", label: \"Car Plate\" },\r\n      { key: \"carCertificate\", label: \"Car Certificate\" },\r\n    ],\r\n    cbhi: [\r\n      { key: \"patientWoreda\", label: \"Woreda\" },\r\n      { key: \"patientKebele\", label: \"Kebele\" },\r\n      { key: \"patientsGoth\", label: \"Goth\" },\r\n      { key: \"patientCBHI_ID\", label: \"CBHI ID\" },\r\n      { key: \"patientReferalNo\", label: \"Referral No\" },\r\n      { key: \"patientLetterNo\", label: \"Letter No\" },\r\n    ],\r\n    \"free of charge\": [],\r\n  };\r\n\r\n  const baseCols = columnMap[paymentType] || [];\r\n\r\n  //show Description Check\r\n  const interm = showDescription\r\n    ? [...baseCols, { key: \"ServiceIS\", label: \"Payment Sub Type\" }]\r\n    : baseCols;\r\n\r\n  //Is Reversal Report Check\r\n  const final = reversedOnly\r\n    ? [\r\n        ...interm,\r\n        { key: \"reversedBy\", label: \"Reversed By\" },\r\n        { key: \"reversedOn\", label: \"Reversed Date\" },\r\n        { key: \"reversalReason\", label: \"Reversal Reason\" },\r\n      ]\r\n    : interm;\r\n  return final;\r\n};\r\n\r\nconst aggregatePaymentsByReason = (\r\n  data,\r\n  paymentType,\r\n  renderDescription,\r\n  reversedOnly\r\n) => {\r\n  const dynamicCols = getDynamicColumns(\r\n    paymentType,\r\n    renderDescription,\r\n    reversedOnly\r\n  );\r\n\r\n  const reasonKeys = REASON_KEYS.map((r) => r.key).concat(\"other\");\r\n  const groups = {};\r\n  data.forEach((row) => {\r\n    const date = row.registeredOn?.split(\"T\")[0];\r\n    const groupKey = `${row.patientCardNumber}-${date}`;\r\n    if (!groups[groupKey]) {\r\n      groups[groupKey] = {\r\n        id: groupKey,\r\n        patientCardNumber: row.patientCardNumber,\r\n        patientName: row.patientName,\r\n        registeredOn: date,\r\n      };\r\n      reasonKeys.forEach((key) => {\r\n        groups[groupKey][key] = 0;\r\n      });\r\n      dynamicCols.forEach((col) => {\r\n        groups[groupKey][col.key] = row[col.key] ?? \"\";\r\n      });\r\n    }\r\n    const reasonKey = getReasonKey(row.paymentReason);\r\n    groups[groupKey][reasonKey] += Number(row.paymentAmount) || 0;\r\n    dynamicCols.forEach((col) => {\r\n      const prev = groups[groupKey][col.key];\r\n      const curr = row[col.key] ?? \"\";\r\n      if (prev === \"\") {\r\n        groups[groupKey][col.key] = curr;\r\n      } else if (prev !== curr) {\r\n        groups[groupKey][col.key] = \"Multiple\";\r\n      }\r\n    });\r\n  });\r\n  // Add total column\r\n  Object.values(groups).forEach((group) => {\r\n    group.total = reasonKeys.reduce((sum, key) => sum + (group[key] || 0), 0);\r\n  });\r\n  return Object.values(groups);\r\n};\r\n\r\nconst getColumns = (\r\n  paymentType,\r\n  isAggregated,\r\n  renderDescription,\r\n  reversedOnly\r\n) => {\r\n  const dynamicCols = getDynamicColumns(\r\n    paymentType,\r\n    renderDescription,\r\n    reversedOnly\r\n  );\r\n\r\n  if (isAggregated) {\r\n    const reasonCols = REASON_KEYS.map((r) => ({\r\n      field: r.key,\r\n      headerName: r.labels[0] + \" Amount\",\r\n      flex: 1,\r\n      type: \"number\",\r\n    }));\r\n    return [\r\n      { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n      { field: \"patientName\", headerName: \"Patient Name\", flex: 1.5 },\r\n      { field: \"registeredOn\", headerName: \"Date\", flex: 1 },\r\n      ...dynamicCols.map((col) => ({\r\n        field: col.key,\r\n        headerName: col.label,\r\n        flex: 1,\r\n      })),\r\n      ...reasonCols,\r\n      { field: \"other\", headerName: \"Other Amount\", flex: 1, type: \"number\" },\r\n      { field: \"total\", headerName: \"Total\", flex: 1, type: \"number\" },\r\n    ];\r\n  }\r\n  // List mode\r\n  const columns = [\r\n    { field: \"referenceNo\", headerName: \"Reference No\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 1.5 },\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientGender\", headerName: \"Gender\", flex: 1 },\r\n    { field: \"patientAge\", headerName: \"Patient Age\", flex: 1 },\r\n    { field: \"registeredOn\", headerName: \"Admission Date\", flex: 1 },\r\n\r\n    ...dynamicCols.map((col) => ({\r\n      field: col.key,\r\n      headerName: col.label,\r\n      flex: 1,\r\n    })),\r\n    { field: \"paymentType\", headerName: \"Payment Type\", flex: 1 },\r\n    { field: \"paymentReason\", headerName: \"Payment Reason\", flex: 1 },\r\n    {\r\n      field: \"paymentAmount\",\r\n      headerName: \"Amount\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return formatAccounting2(params?.row?.paymentAmount);\r\n      },\r\n    },\r\n  ];\r\n  return columns;\r\n};\r\n\r\nconst PaymentTable = () => {\r\n  const theme = useTheme();\r\n  const [payments, setPayments] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [paymentType, setPaymentType] = useState(\"\");\r\n  const [viewAggregated, setViewAggregated] = useState(false);\r\n  const [startDate, setStartDate] = useState(dayjs().startOf(\"day\"));\r\n  const [endDate, setEndDate] = useState(dayjs().endOf(\"day\"));\r\n  const [reversedOnly, setReversedOnly] = useState(false);\r\n  const [creditOrg, setCreditOrg] = useState(\"\");\r\n  const [woreda, setWoreda] = useState(\"\");\r\n  const [creditOrganizations, setCreditOrganizations] = useState([]);\r\n  const [woredas, setWoredas] = useState([]);\r\n  const [selctedServices, setSelectedServices] = useState(\"\");\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n  const [renderDescription, setRenderDescription] = useState(false);\r\n  const [services, setServices] = useState([]);\r\n\r\n  //Reset Sub Type on Payment Method Change\r\n  useEffect(() => {\r\n    setSelectedServices(\"\");\r\n  }, [paymentType]);\r\n\r\n  //setRenderDescription check\r\n  useEffect(() => {\r\n    const check = paymentTypes\r\n      ?.filter(\r\n        (item) => normalizeText(item.type) === normalizeText(paymentType)\r\n      )\r\n      .some(\r\n        (item) =>\r\n          Array.isArray(item.description) &&\r\n          item.description.some(\r\n            (desc) =>\r\n              desc?.description && desc.description.toString().trim().length > 0\r\n          )\r\n      );\r\n    if (check) {\r\n      const value = paymentTypes?.filter(\r\n        (item) => normalizeText(item.type) === normalizeText(paymentType)\r\n      )[0]?.description;\r\n      setServices(value);\r\n    } else {\r\n      setServices([]);\r\n    }\r\n    setRenderDescription(check);\r\n  }, [paymentTypes, paymentType]);\r\n\r\n  //fetch payment Types\r\n  useEffect(() => {\r\n    const fetchType = async () => {\r\n      try {\r\n        const response = await api.get(\"/Lookup/payment-type-description\");\r\n        if (response?.status === 200) {\r\n          setPaymentTypes(\r\n            response?.data?.data?.filter(\r\n              (item) => normalizeText(item?.type) !== \"all\"\r\n            )\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"This is fetch Type handler error: \", error);\r\n      }\r\n    };\r\n    fetchType();\r\n  }, []);\r\n\r\n  const handleResetData = () => {\r\n    setPayments([]);\r\n    setCreditOrganizations([]);\r\n    setWoredas([]);\r\n    setRenderDescription(false);\r\n    setSelectedServices([]);\r\n    setServices([]);\r\n  };\r\n\r\n  // Request report from backend\r\n  const requestReport = async () => {\r\n    try {\r\n      setLoading(true);\r\n      if (startDate?.length <= 0 || endDate?.length <= 0) {\r\n        toast.error(\"Please Select Date first.\");\r\n        return;\r\n      }\r\n\r\n      handleResetData();\r\n      const payload = {\r\n        startDate: startDate.toISOString(),\r\n        endDate: endDate.toISOString(),\r\n        ...(reversedOnly === true\r\n          ? { reversedOnly: true }\r\n          : reversedOnly === false\r\n          ? { reversedOnly: false }\r\n          : {}),\r\n      };\r\n\r\n      const res = await api.put(\"/Payment/Get-all-Payment\", payload);\r\n      const data = res?.data?.map(({ paymentDescription, ...rest }) => ({\r\n        ServiceIS: paymentDescription?.split(\":\")[0],\r\n        paymentDescription,\r\n        ...rest,\r\n      }));\r\n\r\n      setPayments(data || []);\r\n      setCreditOrganizations(\r\n        Array.from(\r\n          new Set(\r\n            (data || []).map((p) => p.patientWorkingPlace).filter(Boolean)\r\n          )\r\n        )\r\n      );\r\n      setWoredas(\r\n        Array.from(\r\n          new Set((data || []).map((p) => p.patientWoreda).filter(Boolean))\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(\"This is Request Report Error: \", err);\r\n      setPayments([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filter payments by type and selects (client-side)\r\n  const filteredPayments = payments.filter((p) => {\r\n    if (\r\n      !!paymentType &&\r\n      normalizeText(p?.paymentType) !== normalizeText(paymentType)\r\n    )\r\n      return false;\r\n    if (\r\n      !!creditOrg &&\r\n      normalizeText(p?.patientWorkingPlace) !== normalizeText(creditOrg)\r\n    )\r\n      return false;\r\n    if (!!woreda && normalizeText(p?.patientWoreda) !== normalizeText(woreda))\r\n      return false;\r\n    if (\r\n      renderDescription &&\r\n      !!selctedServices &&\r\n      normalizeText(p?.ServiceIS) !== normalizeText(selctedServices)\r\n    )\r\n      return false;\r\n    if (reversedOnly !== \"All\" && p?.isReversed !== reversedOnly) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  const displayedData = viewAggregated\r\n    ? aggregatePaymentsByReason(\r\n        filteredPayments,\r\n        paymentType,\r\n        renderDescription,\r\n        reversedOnly\r\n      )\r\n    : filteredPayments.map((row, idx) => ({\r\n        ...row,\r\n        id: idx + 1,\r\n      }));\r\n\r\n  const columns = getColumns(\r\n    paymentType,\r\n    viewAggregated,\r\n    renderDescription,\r\n    reversedOnly\r\n  );\r\n\r\n  const handleExportExcel = async () => {\r\n    try {\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet(\"Payment Report\");\r\n\r\n      // Prepare Excel headers from DataGrid columns\r\n      worksheet.columns = columns.map((col) => ({\r\n        header: col.headerName,\r\n        key: col.field,\r\n        width: 20,\r\n      }));\r\n\r\n      // Populate rows using field keys\r\n      displayedData.forEach((row) => {\r\n        const rowData = {};\r\n        columns.forEach((col) => {\r\n          rowData[col.field] = row[col.field] ?? \"\"; // Use field key, not headerName\r\n        });\r\n        worksheet.addRow(rowData);\r\n      });\r\n\r\n      // Format header row\r\n      worksheet.getRow(1).eachCell((cell) => {\r\n        cell.font = { bold: true };\r\n        cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\r\n        cell.border = {\r\n          top: { style: \"thin\" },\r\n          left: { style: \"thin\" },\r\n          bottom: { style: \"thin\" },\r\n          right: { style: \"thin\" },\r\n        };\r\n      });\r\n\r\n      // Trigger file download\r\n      const buffer = await workbook.xlsx.writeBuffer();\r\n      const blob = new Blob([buffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      saveAs(blob, \"Payment_Report.xlsx\");\r\n    } catch (error) {\r\n      console.error(\"This is handle Export Excel Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Payment Records\r\n      </Typography>\r\n      <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2} flexWrap=\"wrap\">\r\n        <EtDatePicker\r\n          key={startDate || \"startDate-date\"}\r\n          label=\"Start Date\"\r\n          value={startDate ? new Date(startDate) : null}\r\n          onChange={setStartDate}\r\n          required\r\n          sx={{\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: \"10px\",\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.info.main, // Use actual color\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                borderColor: theme.palette.info.main, // Add border color for focus\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <EtDatePicker\r\n          key={endDate || \"endDate-date\"}\r\n          label=\"End Date\"\r\n          value={endDate ? new Date(endDate) : null}\r\n          onChange={setEndDate}\r\n          required\r\n          sx={{\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: \"10px\",\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.info.main, // Use actual color\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                borderColor: theme.palette.info.main, // Add border color for focus\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <FormControl\r\n          sx={{\r\n            minWidth: 150,\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: \"10px\",\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.info.main, // Use actual color\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                borderColor: theme.palette.info.main, // Add border color for focus\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel\r\n            sx={{\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.MuiInputLabel-shrink\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n          >\r\n            Reversed Only\r\n          </InputLabel>\r\n\r\n          <Select\r\n            value={reversedOnly}\r\n            label=\"Reversed Only\"\r\n            onChange={(e) => setReversedOnly(e.target.value)}\r\n            input={\r\n              <OutlinedInput\r\n                label=\"Reversed Only\"\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <MenuItem value=\"All\">All</MenuItem>\r\n            <MenuItem value={true}>Yes</MenuItem>\r\n            <MenuItem value={false}>No</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          onClick={() => requestReport()}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            \"Request Report\"\r\n          )}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          onClick={() => handleExportExcel()}\r\n          disabled={loading}\r\n        >\r\n          Export To excell\r\n        </Button>\r\n\r\n        <FormControl\r\n          sx={{\r\n            minWidth: 150,\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: \"10px\",\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.info.main, // Use actual color\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                borderColor: theme.palette.info.main, // Add border color for focus\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel\r\n            sx={{\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.MuiInputLabel-shrink\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n          >\r\n            Payment Type\r\n          </InputLabel>\r\n          <Select\r\n            value={paymentType}\r\n            label=\"Payment Type\"\r\n            onChange={(e) => setPaymentType(e.target.value)}\r\n            input={\r\n              <OutlinedInput\r\n                label=\"Payment Type\"\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {paymentTypes.map((item) => (\r\n              <MenuItem value={item?.type} key={item?.type}>\r\n                {item?.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderDescription && (\r\n          <FormControl\r\n            sx={{\r\n              minWidth: 150,\r\n              \"& .MuiOutlinedInput-root\": {\r\n                borderRadius: \"10px\",\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.info.main, // Use actual color\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                  borderColor: theme.palette.info.main, // Add border color for focus\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <InputLabel\r\n              sx={{\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.MuiInputLabel-shrink\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n            >\r\n              Sub type\r\n            </InputLabel>\r\n            <Select\r\n              value={selctedServices}\r\n              label=\"Sub type\"\r\n              onChange={(e) => setSelectedServices(e.target.value)}\r\n              input={\r\n                <OutlinedInput\r\n                  label=\"Sub type\"\r\n                  sx={{\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  }}\r\n                />\r\n              }\r\n            >\r\n              <MenuItem value=\"\">All</MenuItem>\r\n              {services?.map((serv) => (\r\n                <MenuItem key={serv?.id} value={serv?.description}>\r\n                  {serv?.description}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        <FormControl\r\n          sx={{\r\n            minWidth: 170,\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: \"10px\",\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.info.main, // Use actual color\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                borderColor: theme.palette.info.main, // Add border color for focus\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel\r\n            sx={{\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.MuiInputLabel-shrink\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n          >\r\n            Credit Organization\r\n          </InputLabel>\r\n          <Select\r\n            value={creditOrg}\r\n            label=\"Credit Organization\"\r\n            onChange={(e) => setCreditOrg(e.target.value)}\r\n            input={\r\n              <OutlinedInput\r\n                label=\"Credit Organization\"\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {creditOrganizations.map((org) => (\r\n              <MenuItem value={org} key={org}>\r\n                {org}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          sx={{\r\n            minWidth: 150,\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: \"10px\",\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.info.main, // Use actual color\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                borderColor: theme.palette.info.main, // Add border color for focus\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <InputLabel\r\n            sx={{\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.MuiInputLabel-shrink\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n          >\r\n            Woreda\r\n          </InputLabel>\r\n          <Select\r\n            value={woreda}\r\n            label=\"Woreda\"\r\n            onChange={(e) => setWoreda(e.target.value)}\r\n            input={\r\n              <OutlinedInput\r\n                label=\"Woreda\"\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {woredas.map((w) => (\r\n              <MenuItem value={w} key={w}>\r\n                {w}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n              checked={viewAggregated}\r\n              onChange={() => setViewAggregated((v) => !v)}\r\n            />\r\n          }\r\n          label=\"Aggregated View\"\r\n        />\r\n      </Box>\r\n      <Box height={600}>\r\n        <DataGrid\r\n          rows={displayedData}\r\n          columns={columns}\r\n          loading={loading}\r\n          disableRowSelectionOnClick\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Box>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentTable;\r\n","import { Box, useTheme, Typography, Stack } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\n\r\nconst ProgressCircle = ({ \r\n  progress = \"0.75\", \r\n  size = \"40\", \r\n  showLegend = false,\r\n  legendText = \"\",\r\n  uncollectedLabel = \"Uncollected\",\r\n  collectedLabel = \"Collected\"\r\n}) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const angle = progress * 360;\r\n  const percentage = Math.round(progress * 100);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        gap: 2,\r\n      }}\r\n    >\r\n      {/* Progress Circle */}\r\n      <Box\r\n        sx={{\r\n          background: `radial-gradient(${colors.primary[400]} 55%, transparent 56%),\r\n            conic-gradient(transparent 0deg ${angle}deg, ${colors.blueAccent[500]} ${angle}deg 360deg),\r\n            ${colors.greenAccent[500]}`,\r\n          borderRadius: \"50%\",\r\n          width: `${size}px`,\r\n          height: `${size}px`,\r\n        }}\r\n      />\r\n\r\n      {/* Conditional Legend */}\r\n      {showLegend && (\r\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n          {/* UNCollected portion legend */}\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Box \r\n              sx={{\r\n                width: \"12px\",\r\n                height: \"12px\",\r\n                borderRadius: \"2px\",\r\n                backgroundColor: colors.blueAccent[500]\r\n              }} \r\n            />\r\n            <Typography variant=\"caption\">\r\n            {`${100 - percentage}% ${uncollectedLabel}`}\r\n            </Typography>\r\n          </Stack>\r\n          \r\n          {/* collected portion legend */}\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Box \r\n              sx={{\r\n                width: \"12px\",\r\n                height: \"12px\",\r\n                borderRadius: \"2px\",\r\n                backgroundColor: colors.greenAccent[500]\r\n              }} \r\n            />\r\n            <Typography variant=\"caption\">\r\n            {`${percentage}% ${collectedLabel}`}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProgressCircle;","import { Routes, Route } from \"react-router-dom\";\r\nimport Dashboard from \"../pages/dashboard\";\r\nimport Bar from \"../pages/bar\";\r\nimport Form from \"../pages/form\";\r\nimport Line from \"../pages/line\";\r\nimport Pie from \"../pages/pie\";\r\nimport FAQ from \"../pages/faq\";\r\nimport Login from \"../pages/login\";\r\nimport Geography from \"../pages/geography\";\r\nimport Calendar from \"../pages/calendar/calendar\";\r\n// import Logout from \"./logout\";\r\n const Routing  =() =>{\r\n\r\n    <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/dashboard\" element={<Dashboard />} />\r\n        <Route path=\"/form\" element={<Form />} />\r\n        <Route path=\"/bar\" element={<Bar />} />\r\n        <Route path=\"/pie\" element={<Pie />} />\r\n        <Route path=\"/line\" element={<Line />} />\r\n        <Route path=\"/faq\" element={<FAQ />} />\r\n        <Route path=\"/calendar\" element={<Calendar />} />\r\n        <Route path=\"/geography\" element={<Geography />} />\r\n        {/* <Route path=\"/logout\" element={<Logout />} /> */}\r\n    </Routes>\r\n}\r\nexport default Routing;","import { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\nimport ProgressCircle from \"./ProgressCircle\";\r\n\r\nconst StatBox = ({ title, subtitle, icon, progress, increase }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  return (\r\n    <Box width=\"100%\" m=\"0 30px\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Box>\r\n          {icon}\r\n          <Typography\r\n            variant=\"h4\"\r\n            fontWeight=\"bold\"\r\n            sx={{ color: colors.grey[100] }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <ProgressCircle progress={progress} />\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" mt=\"2px\">\r\n        <Typography variant=\"h5\" sx={{ color: colors.greenAccent[500] }}>\r\n          {subtitle}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          fontStyle=\"italic\"\r\n          sx={{ color: colors.greenAccent[600] }}\r\n        >\r\n          {increase}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StatBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Select,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Paper,\r\n  Stack,\r\n  useTheme,\r\n  InputAdornment,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport api from \"../utils/api\";\r\nimport { useLang } from \"../contexts/LangContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  fetchPatientName,\r\n  getTokenValue,\r\n  registerUser,\r\n} from \"../services/user_service\";\r\nimport { Refresh } from \"@mui/icons-material\";\r\nimport { tokens } from \"../theme\";\r\nimport { normalizeText } from \"../utils/normalizer\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nconst treatmentCategories = [\"X-ray/Ultrasound\"];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\n/*NO AUTO‑FOCUS  – we also disable the menu’s “auto‑focus first item”  */\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n  /* This stops MUI from focusing the first <MenuItem> automatically */\r\n  MenuListProps: {\r\n    autoFocusItem: false,\r\n  },\r\n};\r\nconst initialState = {\r\n  cardNumber: \"\",\r\n  category: \"X-ray/Ultrasound\",\r\n  amount: [],\r\n  reason: [],\r\n};\r\nconst errorStates = {\r\n  cardNumber: \"\",\r\n  cardNumberSearch: \"\",\r\n  fullNameSearch: \"\",\r\n};\r\n\r\nconst getCategoryName = (name) => {\r\n  try {\r\n    if (name?.toLowerCase()?.includes(\"laboratory\")) {\r\n      return \"Lab Order\";\r\n    } else if (name?.toLowerCase()?.includes(\"x-ray/ultrasound\")) {\r\n      return \"Radiology Order\";\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst TreatmentEntryR = () => {\r\n  const { language } = useLang();\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  // Define checkbox color based on theme mode\r\n  const checkboxColor =\r\n    theme.palette.mode === \"light\"\r\n      ? theme.palette.primary.main\r\n      : theme.palette.secondary.main;\r\n\r\n  const [treatmentList, setTreatmentList] = useState([]);\r\n  const [reasons, setReasons] = useState([]);\r\n  const [fullReasons, setFullReasons] = useState([]);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [formDataError, setFormDataError] = useState(errorStates);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [saveLoading, setSaveloading] = useState(false);\r\n  const [loadingRowId, setLoadingRowId] = useState(null);\r\n\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [patientName, setPatientName] = useState(\"\");\r\n  const [isGetLoading, setIsGetLoading] = useState(false);\r\n\r\n  const isLargeScreen = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  //fetchData for the data grid\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await api.put(\"/Patient/get-patient-request\", {\r\n          loggedInUser: tokenvalue?.name,\r\n        });\r\n        const datas =\r\n          response?.data?.length > 0\r\n            ? response?.data.map((item, index) => ({ ...item, id: index + 1 }))\r\n            : [];\r\n\r\n        const ModData = datas\r\n          ?.map(\r\n            ({\r\n              patientFirstName,\r\n              patientMiddleName,\r\n              patientLastName,\r\n              ...rest\r\n            }) => ({\r\n              patientFName:\r\n                patientFirstName +\r\n                \" \" +\r\n                patientMiddleName +\r\n                \" \" +\r\n                patientLastName,\r\n              ...rest,\r\n            })\r\n          )\r\n          ?.filter((item) =>\r\n            item?.requestedReason?.toLowerCase()?.includes(\"x-ray/ultrasound\")\r\n          );\r\n        setTreatmentList(ModData || []);\r\n      } catch (error) {\r\n        console.error(\"This is Fetch Table Data Error: \", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  //List Searching Logic\r\n  const handleSearchChange = (event) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setFormData(initialState);\r\n    setFormDataError(errorStates);\r\n    setPatientName(\"\");\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    try {\r\n      const values = event.target.value;\r\n\r\n      setFormData((prev) => {\r\n        return {\r\n          ...prev,\r\n          reason: values,\r\n          amount: values.map((item) => ({\r\n            purpose: item,\r\n            Amount: fullReasons\r\n              .filter(\r\n                (itm) => normalizeText(itm.purpose) === normalizeText(item)\r\n              )\r\n              .map((item) => item.amount)[0],\r\n          })),\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setSaveloading(true);\r\n      if (formDataError.cardNumber.length > 0) {\r\n        toast.error(\"Please fix the Card Number Error.\");\r\n        return;\r\n      }\r\n\r\n      if (formData?.reason.length > 0) {\r\n        const response = await api.post(\"/Patient/add-patient-request\", {\r\n          patientCardNumber: formData?.cardNumber,\r\n          requestedServices: fullReasons\r\n            .filter((item) => formData?.reason?.includes(item.purpose))\r\n            .map((item) => item.id),\r\n          purpose: formData?.category,\r\n          createdBy: tokenvalue?.name,\r\n        });\r\n        if (Object.values(response?.data)?.some((item) => item?.length > 0)) {\r\n          toast.success(\"Request Registered Successfully.\");\r\n          setRefresh((prev) => !prev);\r\n          setFormData(initialState);\r\n          setPatientName(\"\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is Save Error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server Error.\");\r\n    } finally {\r\n      setSaveloading(false);\r\n    }\r\n  };\r\n\r\n  //fetch Reasons\r\n  useEffect(() => {\r\n    const fetchReasons = async () => {\r\n      try {\r\n        const response = await api.get(\"/Lookup/payment-purpose\");\r\n        if (response?.status === 200) {\r\n          const allowedGroups = [\"Radiology\"].map((str) => str.toLowerCase());\r\n\r\n          const finalG = response?.data?.filter((item) =>\r\n            allowedGroups.includes(item?.group?.toLowerCase())\r\n          );\r\n\r\n          setReasons(finalG?.map((item) => item.purpose));\r\n          setFullReasons(finalG);\r\n        }\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchReasons();\r\n  }, []);\r\n\r\n  const filteredReason = searchText.trim()\r\n    ? reasons.filter((item) =>\r\n        normalizeText(item)?.includes(normalizeText(searchText))\r\n      )\r\n    : reasons;\r\n\r\n  const handleMarkDone = async (data) => {\r\n    try {\r\n      setLoadingRowId(data.id);\r\n\r\n      const payload = {\r\n        patientCardNumber: data?.patientCardNumber,\r\n        groupID: data?.requestGroup,\r\n        isComplete: true,\r\n        loggedInUser: tokenvalue?.name,\r\n      };\r\n      const response = await api.put(\r\n        \"/Patient/complete-patient-request\",\r\n        payload\r\n      );\r\n      if (response.status === 200) {\r\n        toast.success(response?.data?.msg);\r\n        setRefresh((prev) => !prev);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This IS mark as done Error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server Error.\");\r\n    } finally {\r\n      setLoadingRowId(null);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientFName\", headerName: \"Patient Name\", flex: 1 },\r\n    {\r\n      field: \"requestedReason\",\r\n      headerName: \"Category\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"totalPrice\",\r\n      headerName: \"Amount\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          return `ETB ${params?.row?.totalPrice}`;\r\n        } catch (error) {\r\n          console.error(\"Error Occured on rendering: \", error);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      field: \"paid\",\r\n      headerName: \"Status\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          const status = params?.row?.paid;\r\n          if (status) {\r\n            return (\r\n              <span\r\n                style={{\r\n                  margin: \"0px\",\r\n                  color: \"green\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                ✅ Paid\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span\r\n                style={{\r\n                  margin: \"0px\",\r\n                  color: \"red\",\r\n                  fontWeight: \"bold\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                ⌛ Pending\r\n              </span>\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error Occurred on rendering: \", error);\r\n          return null;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      field: \"createdOn\",\r\n      headerName: \"Date\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return renderETDateAtCell(params?.row?.createdOn);\r\n      },\r\n    },\r\n    {\r\n      field: \"Action\",\r\n      headerName: \"Action\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        try {\r\n          return params?.row?.paid ? (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"success\"\r\n              startIcon={<TaskAltIcon />}\r\n              sx={{\r\n                textTransform: \"none\",\r\n                borderRadius: 2,\r\n                fontWeight: 600,\r\n                \"&:hover\": { transform: \"scale(1.01)\" },\r\n              }}\r\n              onClick={() => handleMarkDone(params.row)}\r\n              disabled={loadingRowId === params.row.id}\r\n            >\r\n              {loadingRowId === params.row.id ? (\r\n                <CircularProgress size={24} color=\"inherit\" />\r\n              ) : (\r\n                \"Mark as Completed\"\r\n              )}\r\n            </Button>\r\n          ) : null;\r\n        } catch (error) {\r\n          console.error(\"Error occurred on rendering: \", error);\r\n          return null;\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"cardNumber\") {\r\n      setPatientName(\"\");\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        amount: [],\r\n        reason: [],\r\n      }));\r\n      mrnCheck(e.target.name, e.target.value);\r\n    } else if (e.target.name === \"category\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        amount: [],\r\n        reason: [],\r\n      }));\r\n    }\r\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const mrnCheck = (name, value) => {\r\n    const comp = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/;\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError((prev) => ({\r\n        ...prev,\r\n        [name]: \"Please Insert Valid MRN, more than 5 digit only.\",\r\n      }));\r\n    } else {\r\n      setFormDataError((prev) => ({\r\n        ...prev,\r\n        [name]: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGetPatientName = async () => {\r\n    try {\r\n      setIsFetching(true);\r\n\r\n      if (patientName?.length <= 0) {\r\n        if (\r\n          formDataError?.cardNumber?.length <= 0 &&\r\n          formData?.cardNumber?.length > 0\r\n        ) {\r\n          const response = await fetchPatientName(formData?.cardNumber);\r\n\r\n          if (response?.length > 0) {\r\n            setPatientName(response);\r\n          } else {\r\n            toast.error(\"Card Number Not Registered.\");\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <Typography variant=\"h5\" gutterBottom fontWeight=\"bold\">\r\n        Patient Treatment Entry Radiology\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Card Number\"\r\n              name=\"cardNumber\"\r\n              value={formData?.cardNumber}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter card number\"\r\n              error={!!formDataError?.cardNumber}\r\n              helperText={\r\n                formDataError?.cardNumber?.length > 0\r\n                  ? formDataError?.cardNumber\r\n                  : patientName\r\n              }\r\n              onBlur={() => handleGetPatientName()}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: \"primary.neutral\",\r\n                  \"&.Mui-focused\": {\r\n                    color: \"secondary.main\",\r\n                  },\r\n                },\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    {(isFetching || isGetLoading) && (\r\n                      <CircularProgress size={24} color=\"inherit\" />\r\n                    )}\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              FormHelperTextProps={{\r\n                style: {\r\n                  color: !!formDataError?.cardNumber ? \"red\" : \"green\",\r\n                  fontSize: \"14px\",\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              select\r\n              fullWidth\r\n              label=\"Treatment Category\"\r\n              name=\"category\"\r\n              value={formData?.category}\r\n              onChange={handleChange}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: \"primary.neutral\",\r\n                  \"&.Mui-focused\": {\r\n                    color: \"secondary.main\",\r\n                  },\r\n                },\r\n              }}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n            >\r\n              {treatmentCategories.map((cat) => (\r\n                <MenuItem key={cat} value={cat}>\r\n                  {cat}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={4}>\r\n            <FormControl\r\n              sx={{\r\n                width: \"100%\",\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  borderRadius: \"10px\",\r\n\r\n                  \"&:hover fieldset\": {\r\n                    borderColor: \"info.main\",\r\n                  },\r\n                  \"&.Mui-focused fieldset\": {\r\n                    borderColor: \"primary.main\",\r\n                    boxShadow: \"0px 0px 8px rgba(0, 0, 255, 0.2)\",\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <InputLabel\r\n                id=\"demo-multiple-checkbox-label\"\r\n                sx={{\r\n                  color: \"primary.neutral\",\r\n                  \"&.Mui-focused\": {\r\n                    color: \"secondary.main\",\r\n                  },\r\n                }}\r\n              >\r\n                {language === \"AMH\" ? \"ምክንያት\" : \"Select Treatment\"}\r\n              </InputLabel>\r\n\r\n              <Select\r\n                labelId=\"demo-multiple-checkbox-label\"\r\n                id=\"demo-multiple-checkbox\"\r\n                multiple\r\n                fullWidth\r\n                value={formData.reason}\r\n                onChange={handleCheckboxChange}\r\n                input={\r\n                  <OutlinedInput\r\n                    label={language === \"AMH\" ? \"ምክንያት\" : \"Select Reason*\"}\r\n                  />\r\n                }\r\n                renderValue={(selected) => (\r\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n                    {selected.map((value, index) => (\r\n                      <Chip\r\n                        key={index}\r\n                        label={value}\r\n                        onMouseDown={(e) => e.stopPropagation()} //Prevent Select toggle\r\n                        onDelete={(e) => {\r\n                          e.stopPropagation(); //Prevent Select toggle\r\n\r\n                          setFormData((prev) => {\r\n                            const current = prev.reason;\r\n                            const updatedReason = current.filter(\r\n                              (val) =>\r\n                                !normalizeText(val).includes(\r\n                                  normalizeText(value)\r\n                                )\r\n                            );\r\n                            return {\r\n                              ...prev,\r\n                              reason: updatedReason,\r\n                              amount: prev.amount.filter(\r\n                                (item) =>\r\n                                  normalizeText(item.purpose) !==\r\n                                  normalizeText(value)\r\n                              ),\r\n                            };\r\n                          });\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {/* 🔍 Search bar inside the dropdown */}\r\n                <ListSubheader>\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    placeholder=\"Search…\"\r\n                    value={searchText}\r\n                    onChange={handleSearchChange}\r\n                    /* Prevent *all* key events from bubbling up to <Select> */\r\n                    inputProps={{\r\n                      onKeyDown: (e) => e.stopPropagation(),\r\n                      onKeyUp: (e) => e.stopPropagation(),\r\n                      onKeyPress: (e) => e.stopPropagation(),\r\n                    }}\r\n                    InputLabelProps={{\r\n                      sx: {\r\n                        color: \"primary.neutral\",\r\n                        \"&.Mui-focused\": {\r\n                          color: \"secondary.main\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </ListSubheader>\r\n\r\n                {filteredReason.map((reason, index) => (\r\n                  <MenuItem key={index} value={reason}>\r\n                    <Checkbox\r\n                      checked={formData?.reason?.includes(reason)}\r\n                      sx={{\r\n                        color: checkboxColor,\r\n                        \"&.Mui-checked\": {\r\n                          color: checkboxColor,\r\n                        },\r\n                      }}\r\n                    />\r\n                    <ListItemText primary={reason} />\r\n                  </MenuItem>\r\n                ))}\r\n\r\n                {filteredReason.length === 0 && (\r\n                  <MenuItem disabled>No results found</MenuItem>\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid container spacing={3} marginLeft={2} marginTop={1}>\r\n            {formData?.amount?.map((treatment, index) => (\r\n              <Grid item xs={6} sm={6} md={3} key={index}>\r\n                <Card\r\n                  key={index}\r\n                  sx={{\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\"\r\n                        ? \"#f5f5f5\"\r\n                        : colors.primary[400],\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color={\r\n                        theme.palette.mode === \"light\"\r\n                          ? \"primary\"\r\n                          : colors.grey[100]\r\n                      }\r\n                    >\r\n                      {treatment.purpose}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color={\r\n                        theme.palette.mode === \"light\"\r\n                          ? \"primary\"\r\n                          : colors.grey[100]\r\n                      }\r\n                      sx={{ mt: 1 }}\r\n                    >\r\n                      Amount: {treatment.Amount} Birr\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {formData?.reason?.length > 0 && (\r\n            <Grid container justifyContent=\"center\" marginTop={2}>\r\n              <Grid item xs={12} sm={12} md={3}>\r\n                <Card\r\n                  sx={{\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\"\r\n                        ? \"#CECECE\"\r\n                        : colors.primary[400],\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      color=\"#3E7C28\"\r\n                      sx={{ mt: 1, fontWeight: \"bold\" }}\r\n                    >\r\n                      Total Amount\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color={\r\n                        theme.palette.mode === \"light\"\r\n                          ? \"primary\"\r\n                          : colors.grey[100]\r\n                      }\r\n                      sx={{ mt: 1, fontWeight: \"bold\" }}\r\n                    >\r\n                      {formData?.amount?.reduce(\r\n                        (total, item) => total + parseFloat(item.Amount || 0),\r\n                        0\r\n                      )}{\" \"}\r\n                      Birr\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{\r\n                backgroundColor: \"#478594\",\r\n                color: \"white\", // Added text color for better visibility\r\n                px: 4,\r\n                py: 1.5,\r\n                fontWeight: \"bold\",\r\n                \"&:hover\": {\r\n                  backgroundColor: \"#1f5459\",\r\n                },\r\n              }}\r\n              onClick={handleSave}\r\n              disabled={\r\n                !formData?.cardNumber ||\r\n                !formData?.category ||\r\n                !formData?.reason?.length > 0 //||\r\n                // Object.values(formDataError).some((item) => item.length > 0)\r\n              }\r\n            >\r\n              {saveLoading ? (\r\n                <CircularProgress size={24} color=\"inherit\" />\r\n              ) : (\r\n                \"Save Treatment\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              sx={{ marginInline: \"15px\" }}\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n        Treatment List\r\n      </Typography>\r\n\r\n      <Box\r\n        mb={3}\r\n        p={2}\r\n        component={Paper}\r\n        elevation={3}\r\n        borderRadius={2}\r\n        overflow=\"auto\"\r\n      >\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={5}>\r\n            <Box\r\n              sx={{\r\n                height: \"56px\",\r\n                border: `1px dashed ${colors.grey[100]}`,\r\n                borderRadius: \"4px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                color: \"rgba(0,0,0,0.6)\",\r\n                fontStyle: \"italic\",\r\n                paddingBottom: \"71px\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={5}>\r\n            <Box\r\n              sx={{\r\n                height: \"56px\",\r\n                border: `1px dashed ${colors.grey[100]}`,\r\n                borderRadius: \"4px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                color: \"rgba(0,0,0,0.6)\",\r\n                fontStyle: \"italic\",\r\n                paddingBottom: \"71px\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <Stack\r\n              direction={isLargeScreen ? \"row\" : \"column\"}\r\n              spacing={1}\r\n              alignItems=\"stretch\"\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                color=\"primary\"\r\n                size={isLargeScreen ? \"small\" : \"large\"}\r\n                disabled\r\n                startIcon={<SearchIcon />}\r\n                sx={{\r\n                  height: \"56px\",\r\n                  borderRadius: 2,\r\n                  textTransform: \"none\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Search\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                size={isLargeScreen ? \"small\" : \"large\"}\r\n                sx={{\r\n                  height: \"56px\",\r\n                  color: colors.grey[100],\r\n                  borderColor: colors.grey[100],\r\n                  \"&:hover\": {\r\n                    borderColor: colors.grey[300],\r\n                    color: colors.grey[300],\r\n                  },\r\n                }}\r\n                onClick={() => setRefresh((prev) => !prev)}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress size={24} />\r\n                ) : (\r\n                  <Refresh\r\n                    sx={{\r\n                      transition: \"transform 0.5s\",\r\n                      \"&:hover\": { transform: \"rotate(90deg)\" },\r\n                    }}\r\n                  />\r\n                )}\r\n              </Button>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Paper elevation={2}>\r\n        <DataGrid\r\n          rows={treatmentList}\r\n          loading={isLoading}\r\n          columns={columns}\r\n          disableSelectionOnClick\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Paper>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TreatmentEntryR;\r\n","import { Box, useTheme } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { tokens } from \"../../theme\";\r\n\r\nconst FAQ = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"FAQ\" subtitle=\"Frequently Asked Questions Page\" />\r\n\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\r\n            An Important Question\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\r\n            Another Important Question\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\r\n            Your Favorite Question\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\r\n            Some Random Question\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography color={colors.greenAccent[500]} variant=\"h5\">\r\n            The Final Question\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n            malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Typography,\r\n  Chip,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Avatar,\r\n  Badge,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  TableHead,\r\n} from \"@mui/material\";\r\nimport { DataGrid, GridFooterContainer, GridFooter } from \"@mui/x-data-grid\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Refresh } from \"@mui/icons-material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  LocalPharmacy,\r\n  CheckCircleOutline,\r\n  ExpandMore,\r\n  Person,\r\n  CalendarToday,\r\n  MedicalInformation,\r\n  Payment,\r\n  Paid,\r\n} from \"@mui/icons-material\";\r\n\r\nimport api from \"../utils/api\";\r\nimport { formatAccounting2 } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport { ClipboardList } from \"lucide-react\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport HourglassEmptyIcon from \"@mui/icons-material/HourglassEmpty\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport { alpha } from \"@mui/material/styles\";\r\n\r\nconst STATUS_COLORS = {\r\n  ORDERED: \"warning\",\r\n  PAID: \"success\",\r\n  \"Waiting For Payment\": \"info\",\r\n};\r\n\r\nconst STATUS_ICONS = {\r\n  PAID: <DoneIcon fontSize=\"small\" />,\r\n  ORDERED: <HourglassEmptyIcon fontSize=\"small\" />,\r\n  \"Waiting For Payment\": <ErrorOutlineIcon fontSize=\"small\" />,\r\n};\r\n\r\nconst Pharmacy = () => {\r\n  const theme = useTheme();\r\n  const [groupedRequests, setGroupedRequests] = useState({});\r\n  const [filteredRequests, setFilteredRequests] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [paymentDialogOpen, setPaymentDialogOpen] = useState(false);\r\n  const [selectedGroupKey, setSelectedGroupKey] = useState(null);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  // Define checkbox color based on theme mode\r\n  const checkboxColor =\r\n    theme.palette.mode === \"light\"\r\n      ? theme.palette.primary.main\r\n      : theme.palette.secondary.main;\r\n\r\n  const handleCheckboxChange = (event, index) => {\r\n    try {\r\n      setGroupedRequests((prev) => {\r\n        const updated = { ...prev };\r\n        const items = [...updated[selectedGroupKey].items];\r\n\r\n        const isSelected = event.target.checked;\r\n\r\n        items[index] = {\r\n          ...items[index],\r\n          isSelected,\r\n          price: isSelected ? items[index].price : 0, // keep price if selected, else zero\r\n        };\r\n\r\n        updated[selectedGroupKey] = { ...updated[selectedGroupKey], items };\r\n        return updated;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"This is handleCheckboxChange Error : \", error);\r\n    }\r\n  };\r\n\r\n  const resetGroupData = () => {\r\n    try {\r\n      const checkWaiting =\r\n        Object.values(groupedRequests || {})?.length > 0 &&\r\n        groupedRequests[selectedGroupKey] !== undefined\r\n          ? groupedRequests[selectedGroupKey]?.items?.some(\r\n              (element) =>\r\n                element.requestedStatusId === 5 ||\r\n                element.requestedStatusId === 1\r\n            )\r\n          : false;\r\n\r\n      if (!checkWaiting) {\r\n        setGroupedRequests((prev) => {\r\n          if (!selectedGroupKey || !prev[selectedGroupKey]) return prev;\r\n\r\n          const updated = { ...prev };\r\n\r\n          const resetItems = updated[selectedGroupKey].items.map((item) => ({\r\n            ...item,\r\n            isSelected: true,\r\n            price: 0,\r\n          }));\r\n\r\n          updated[selectedGroupKey] = {\r\n            ...updated[selectedGroupKey],\r\n            items: resetItems,\r\n          };\r\n\r\n          return updated;\r\n        });\r\n      }\r\n\r\n      closeDialog();\r\n    } catch (error) {\r\n      console.error(\"This is resetGroupData Error : \", error);\r\n    }\r\n  };\r\n\r\n  const handleAmountChange = (event, index) => {\r\n    try {\r\n      const rawValue = event.target.value;\r\n\r\n      // Allow empty string for typing, fallback to 0 if non-number\r\n      const value = rawValue === \"\" ? \"\" : Math.max(0, Number(rawValue));\r\n\r\n      setGroupedRequests((prev) => {\r\n        const updated = { ...prev };\r\n\r\n        const selectedGroup = updated[selectedGroupKey];\r\n        if (!selectedGroup) return prev;\r\n\r\n        const itemsCopy = [...selectedGroup.items];\r\n\r\n        // Only update price if the item is selected\r\n        if (itemsCopy[index]?.isSelected) {\r\n          itemsCopy[index] = {\r\n            ...itemsCopy[index],\r\n            price: value,\r\n          };\r\n        }\r\n\r\n        updated[selectedGroupKey] = {\r\n          ...selectedGroup,\r\n          items: itemsCopy,\r\n        };\r\n\r\n        return updated;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"This is handleAmountChange Error : \", error);\r\n    }\r\n  };\r\n\r\n  const group = groupedRequests[selectedGroupKey];\r\n\r\n  const totalSelectedPrice =\r\n    group?.items?.length > 0\r\n      ? group.items\r\n          .filter((item) => item?.isSelected)\r\n          .reduce((acc, curr) => {\r\n            const price = Number(curr.price);\r\n            return acc + (isNaN(price) ? 0 : price);\r\n          }, 0)\r\n      : 0;\r\n\r\n  const columns = [\r\n    {\r\n      field: \"medication\",\r\n      headerName: \"Medication\",\r\n      flex: 1.2,\r\n      headerClassName: \"header\",\r\n    },\r\n    {\r\n      field: \"dosage\",\r\n      headerName: \"Dosage\",\r\n      flex: 1,\r\n      headerClassName: \"header\",\r\n    },\r\n    {\r\n      field: \"frequency\",\r\n      headerName: \"Frequency\",\r\n      flex: 1,\r\n      headerClassName: \"header\",\r\n    },\r\n    {\r\n      field: \"duration\",\r\n      headerName: \"Duration\",\r\n      flex: 1,\r\n      headerClassName: \"header\",\r\n    },\r\n    {\r\n      field: \"instructions\",\r\n      headerName: \"Instructions\",\r\n      flex: 2,\r\n      headerClassName: \"header\",\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Price (ETB)\",\r\n      type: \"number\",\r\n      flex: 1,\r\n      headerAlign: \"right\",\r\n      align: \"right\",\r\n      valueFormatter: ({ value }) => value?.toFixed(2),\r\n      headerClassName: \"header\",\r\n    },\r\n  ];\r\n\r\n  // Fetch and process prescription data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.get(\"/Request/doctor/get-request-pharma\");\r\n        const value = response?.data?.data?.value || [];\r\n        const grouped = {};\r\n\r\n        value.forEach((entry) => {\r\n          const dateTime = new Date(entry.createdOn);\r\n          const patientKey = `${entry.patientCardNumber}-${dateTime.getTime()}`;\r\n          const fullName = [\r\n            entry.patientFirstName,\r\n            entry.patientMiddleName,\r\n            entry.patientLastName,\r\n          ]\r\n            .filter(Boolean)\r\n            .join(\" \");\r\n\r\n          const requestedItems = entry.requestedItems?.filter((item) =>\r\n            [1, 0, 5].includes(item?.requestedStatusId)\r\n          );\r\n          const isPaied = requestedItems?.every(\r\n            (item) => item?.requestedStatusId === 1\r\n          );\r\n\r\n          const isWaiting = requestedItems?.every(\r\n            (item) => item?.requestedStatusId === 5\r\n          );\r\n\r\n          if (!grouped[patientKey]) {\r\n            grouped[patientKey] = {\r\n              id: patientKey,\r\n              dateTime,\r\n              patientName: fullName,\r\n              cardNumber: entry.patientCardNumber,\r\n              doctor: entry.requestedBy,\r\n              department: entry.requestingDepartment,\r\n              items: [],\r\n              groupId: entry.requestGroup,\r\n              status: isPaied\r\n                ? \"PAID\"\r\n                : isWaiting\r\n                ? \"Waiting For Payment\"\r\n                : \"ORDERED\",\r\n            };\r\n          }\r\n\r\n          requestedItems.forEach((item, i) => {\r\n            grouped[patientKey].items.push({\r\n              id: `${entry.patientCardNumber}-${i}-${dateTime.getTime()}`,\r\n              idNum: item?.id,\r\n              medication: item.requestedServices,\r\n              dosage: item.measurement,\r\n              requeststatus: item.requeststatus,\r\n              frequency: item.procedeureCount,\r\n              duration: item.duration,\r\n              instructions: item.instruction,\r\n              price: item.price || 0,\r\n              isSelected: true,\r\n            });\r\n          });\r\n        });\r\n\r\n        const modData = Object.fromEntries(\r\n          Object.entries(grouped || {})\r\n            .filter(([_, value]) => value?.items?.length > 0)\r\n            .sort(([_, a], [__, b]) => {\r\n              if (b.dateTime !== a.dateTime) {\r\n                return b.dateTime - a.dateTime;\r\n              }\r\n              if (b.requestedStatusId < a.requestedStatusId) return -1;\r\n              if (b.requestedStatusId > a.requestedStatusId) return 1;\r\n              return 0;\r\n            })\r\n        );\r\n\r\n        setGroupedRequests(modData);\r\n      } catch (err) {\r\n        console.error(\"Error fetching requests\", err);\r\n        toast.error(\"Failed to load prescriptions.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  // Filter prescriptions\r\n  useEffect(() => {\r\n    const term = searchTerm?.toLowerCase();\r\n    const filtered = Object.entries(groupedRequests || {})?.filter(\r\n      ([, group]) =>\r\n        group?.patientName?.toLowerCase().includes(term) ||\r\n        group?.cardNumber?.toLowerCase().includes(term)\r\n    );\r\n\r\n    setFilteredRequests(Object.fromEntries(filtered || {}));\r\n  }, [searchTerm, groupedRequests]);\r\n\r\n  // Handle payment dialog open\r\n  const handlePayAllClick = (groupKey) => {\r\n    setSelectedGroupKey(groupKey);\r\n    setPaymentDialogOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setSelectedGroupKey(null);\r\n    setPaymentDialogOpen(false);\r\n  };\r\n\r\n  // Submit payment\r\n  const handlePaymentSubmit = async () => {\r\n    try {\r\n      setIsSending(true);\r\n      const group = groupedRequests[selectedGroupKey];\r\n\r\n      // Validation checks\r\n      if (\r\n        !group?.items?.some(\r\n          (item) => item.isSelected === true && item.price > 0\r\n        )\r\n      ) {\r\n        toast.error(\"You need to have at least one payment.\");\r\n        return;\r\n      }\r\n\r\n      if (group?.items?.some((item) => item.isSelected && item.price <= 0)) {\r\n        toast.error(\"You need to have an amount for every selected medicine.\");\r\n        return;\r\n      }\r\n\r\n      const selectedItems = group.items.filter((item) => item.isSelected);\r\n      const unselectedItems = group.items.filter((item) => !item.isSelected);\r\n\r\n      if (unselectedItems?.length > 0) {\r\n        // 1. Cancel all unselected items sequentially or concurrently but fail fast if any fail\r\n        await Promise.all(\r\n          unselectedItems.map((item) =>\r\n            api.delete(`/Request/doctor/cancel-request/${item?.idNum}`)\r\n          )\r\n        );\r\n      }\r\n\r\n      // If cancellations succeed, proceed to send all selected items\r\n      const sendResponses = [];\r\n      for (const item of selectedItems) {\r\n        try {\r\n          const response = await api.put(\"/Request/doctor/pend-request\", {\r\n            id: item?.idNum || \"-\",\r\n            patientCardnumber: group.cardNumber || \"-\",\r\n            groupId: group.groupId || \"-\",\r\n            price: item.price || 0,\r\n          });\r\n\r\n          sendResponses.push({\r\n            id: item.id,\r\n            success: true,\r\n            data: response.data,\r\n          });\r\n        } catch (sendError) {\r\n          console.error(`Error sending request ID ${item.id}:`, sendError);\r\n          sendResponses.push({ id: item.id, success: false, error: sendError });\r\n        }\r\n      }\r\n\r\n      toast.success(\"Payment requests processed successfully.\");\r\n      setRefresh((prev) => !prev);\r\n      resetGroupData();\r\n    } catch (cancelError) {\r\n      // If any cancellation fails, no sends are done\r\n      console.error(\"Cancellation failed:\", cancelError);\r\n      toast.error(\r\n        \"Failed to cancel some requests. No payments were processed.\"\r\n      );\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  // Status display component\r\n  const StatusBadge = ({ status }) => {\r\n    const colorKey = status in STATUS_ICONS ? status : \"ORDERED\";\r\n    const icon = STATUS_ICONS[colorKey];\r\n    const chipColor = STATUS_COLORS[colorKey] || \"default\";\r\n\r\n    return (\r\n      <Chip\r\n        icon={icon}\r\n        label={status}\r\n        color={chipColor}\r\n        size=\"small\"\r\n        sx={{\r\n          fontWeight: 700,\r\n          textTransform: \"uppercase\",\r\n          letterSpacing: 0.7,\r\n          borderRadius: 1.5,\r\n          px: 1.5,\r\n          py: 0.5,\r\n          boxShadow: (theme) =>\r\n            `0 2px 6px ${alpha(\r\n              theme.palette[chipColor]?.main || theme.palette.grey[500],\r\n              0.3\r\n            )}`,\r\n          \"& .MuiChip-icon\": {\r\n            color: (theme) =>\r\n              theme.palette[chipColor]?.contrastText || \"inherit\",\r\n            marginLeft: 0,\r\n            marginRight: 0.5,\r\n          },\r\n          \"& .MuiChip-label\": {\r\n            fontSize: \"0.75rem\",\r\n          },\r\n        }}\r\n        aria-label={`Status: ${status}`}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 4,\r\n        minHeight: \"100vh\",\r\n        background: theme.palette.background.default,\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          maxWidth: 1400,\r\n          mx: \"auto\",\r\n          p: 4,\r\n          borderRadius: 3,\r\n          backgroundColor: theme.palette.mode === \"dark\" && \"#1f2a406b\",\r\n          boxShadow: theme.shadows[4],\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\", alignItems: \"center\", mb: 3 }}>\r\n          <LocalPharmacy\r\n            sx={{\r\n              mr: 2,\r\n              fontSize: 40,\r\n              color: \"#3a8adc\",\r\n            }}\r\n          />\r\n          <Typography variant=\"h4\" fontWeight={700}>\r\n            Pharmacy Prescription Manager\r\n          </Typography>\r\n        </Box>\r\n\r\n        <TextField\r\n          fullWidth\r\n          label=\"Search by Patient Name or Card Number\"\r\n          variant=\"outlined\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          sx={{\r\n            mb: 3,\r\n            \"& .MuiOutlinedInput-root\": {\r\n              borderRadius: 2,\r\n              boxShadow: theme.shadows[1],\r\n            },\r\n          }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <Badge\r\n                badgeContent={Object.keys(filteredRequests).length}\r\n                color=\"secondary\"\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                max={99}\r\n              >\r\n                <ClipboardList color=\"#2e8ac9\" />\r\n              </Badge>\r\n            ),\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <Divider sx={{ my: 3, borderWidth: 1 }} />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          sx={{\r\n            display: \"flex\",\r\n            justifySelf: \"flex-end\",\r\n          }}\r\n          onClick={() => setRefresh((prev) => !prev)}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            <Refresh\r\n              sx={{\r\n                transition: \"transform 0.5s\",\r\n                \"&:hover\": { transform: \"rotate(90deg)\" },\r\n              }}\r\n            />\r\n          )}\r\n        </Button>\r\n        <Divider sx={{ my: 3, borderWidth: 1 }} />\r\n\r\n        {loading ? (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              minHeight: \"80vh\",\r\n            }}\r\n          >\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n            <Typography sx={{ ml: 2 }}>Loading prescriptions...</Typography>\r\n          </Box>\r\n        ) : Object.keys(filteredRequests).length === 0 ? (\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            sx={{ py: 4, color: theme.palette.text.secondary }}\r\n          >\r\n            No active prescriptions found\r\n          </Typography>\r\n        ) : (\r\n          Object.entries(filteredRequests).map(([key, group]) => (\r\n            <Accordion\r\n              key={key}\r\n              sx={{\r\n                mb: 2,\r\n                borderRadius: 2,\r\n                boxShadow: theme.shadows[2],\r\n                \"&:before\": { display: \"none\" },\r\n              }}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMore />}\r\n                sx={{\r\n                  backgroundColor:\r\n                    theme.palette.mode === \"dark\"\r\n                      ? \"#1f2a40\"\r\n                      : theme.palette.background.paper,\r\n                  borderLeft: `4px solid #2e8ac9`,\r\n                  borderRadius: 2,\r\n                }}\r\n              >\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <Avatar\r\n                        sx={{\r\n                          bgcolor: \"#2e8ac9\",\r\n                          mr: 2,\r\n                          width: 40,\r\n                          height: 40,\r\n                        }}\r\n                      >\r\n                        <Person />\r\n                      </Avatar>\r\n                      <Box>\r\n                        <Typography fontWeight={600}>\r\n                          {group.patientName}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          Card: {group.cardNumber}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <CalendarToday sx={{ mr: 1, color: \"#2e8ac9\" }} />\r\n                      <Typography>{group.dateTime.toLocaleString()}</Typography>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={3}>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <MedicalInformation sx={{ mr: 1, color: \"#6870fab0\" }} />\r\n                      <Typography>\r\n                        {group.doctor} ({group.department})\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={3} sx={{ textAlign: \"right\" }}>\r\n                    <StatusBadge status={group.status} />\r\n                  </Grid>\r\n                </Grid>\r\n              </AccordionSummary>\r\n\r\n              <AccordionDetails\r\n                sx={{\r\n                  backgroundColor: theme.palette.background.default,\r\n                  pt: 0,\r\n                }}\r\n              >\r\n                <DataGrid\r\n                  rows={group.items}\r\n                  columns={columns}\r\n                  disableSelectionOnClick\r\n                  hideFooterSelectedRowCount\r\n                  getRowId={(row) => row.id}\r\n                  autoHeight\r\n                  sx={{\r\n                    minWidth: 320,\r\n                    border: `1px solid ${theme.palette.divider}`,\r\n                    borderRadius: 2,\r\n                    marginTop: \"10px\",\r\n                    bgcolor: theme.palette.background.paper,\r\n                  }}\r\n                  slots={{\r\n                    footer: () => (\r\n                      <GridFooterContainer>\r\n                        <Box\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n                            bgcolor:\r\n                              theme.palette.mode === \"light\"\r\n                                ? theme.palette.grey[100]\r\n                                : theme.palette.background.default,\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"subtitle1\" fontWeight={600}>\r\n                            Total:{\" \"}\r\n                            {group?.items\r\n                              ?.reduce(\r\n                                (sum, item) => sum + (item.price || 0),\r\n                                0\r\n                              )\r\n                              .toFixed(2)}{\" \"}\r\n                            ETB\r\n                          </Typography>\r\n                        </Box>\r\n                        {/* <GridFooter /> */}\r\n                      </GridFooterContainer>\r\n                    ),\r\n                  }}\r\n                />\r\n\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    gap: 2,\r\n                    mt: 3,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<Payment />}\r\n                    onClick={() => handlePayAllClick(key)}\r\n                    disabled={\r\n                      group?.status?.toLowerCase()?.includes(\"paid\") ||\r\n                      group?.status?.toLowerCase()?.includes(\"waiting\")\r\n                    }\r\n                    sx={{\r\n                      borderRadius: 2,\r\n                      px: 3,\r\n                      py: 1,\r\n                      boxShadow: theme.shadows[2],\r\n                      backgroundColor:\r\n                        theme.palette.mode === \"dark\"\r\n                          ? theme.palette.success.main\r\n                          : \"#ed6c02\",\r\n                    }}\r\n                  >\r\n                    Process Payment\r\n                  </Button>\r\n                </Box>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))\r\n        )}\r\n\r\n        {/* Payment Modal */}\r\n        <Dialog\r\n          open={paymentDialogOpen}\r\n          onClose={(event, reason) => {\r\n            if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n              resetGroupData(); // Reset and close the modal\r\n            }\r\n          }}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n          disableEnforceFocus // to remove focus warning\r\n          BackdropProps={{ style: { backgroundColor: \"rgba(0,0,0,0.5)\" } }}\r\n        >\r\n          <DialogTitle\r\n            sx={{\r\n              backgroundColor: \"#174564\",\r\n              color: theme.palette.common.white,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Paid sx={{ mr: 2 }} />\r\n            Process Payment\r\n          </DialogTitle>\r\n          <DialogContent sx={{ py: 3 }}>\r\n            {selectedGroupKey && (\r\n              <>\r\n                <TableContainer\r\n                  component={Paper}\r\n                  sx={{ marginTop: \"20px\" }}\r\n                  variant=\"outlined\"\r\n                >\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ fontWeight: 600 }}>\r\n                          Medication\r\n                        </TableCell>\r\n                        <TableCell sx={{ fontWeight: 600 }} align=\"right\">\r\n                          Price (ETB)\r\n                        </TableCell>\r\n                        <TableCell sx={{ fontWeight: 600 }} align=\"right\">\r\n                          Select\r\n                        </TableCell>\r\n                        <TableCell sx={{ fontWeight: 600 }} align=\"right\">\r\n                          Amount\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                      {group?.items.map((item, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{item.medication}</TableCell>\r\n\r\n                          <TableCell align=\"right\">\r\n                            {item.price?.length > 0\r\n                              ? item.price?.toFixed(2)\r\n                              : item.price}{\" \"}\r\n                            ETB\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"right\">\r\n                            <FormControlLabel\r\n                              control={\r\n                                <Checkbox\r\n                                  checked={item?.isSelected || false}\r\n                                  onChange={(e) =>\r\n                                    handleCheckboxChange(e, index)\r\n                                  }\r\n                                  sx={{\r\n                                    color: checkboxColor,\r\n                                    \"&.Mui-checked\": {\r\n                                      color: checkboxColor,\r\n                                    },\r\n                                  }}\r\n                                />\r\n                              }\r\n                              label={item?.isSelected ? \"Deselect\" : \"Select\"}\r\n                              sx={{\r\n                                ml: 1,\r\n                                \"& .MuiFormControlLabel-label\": {\r\n                                  fontWeight: 500,\r\n                                  color: item?.isSelected\r\n                                    ? theme.palette.success.main\r\n                                    : theme.palette.text.primary,\r\n                                },\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"right\">\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              type=\"number\"\r\n                              size=\"small\"\r\n                              onWheel={(e) => e.target.blur()} // <-- Prevent scroll change\r\n                              inputProps={{ min: 0 }}\r\n                              value={item.price || \"\"}\r\n                              onChange={(e) => handleAmountChange(e, index)}\r\n                              sx={{ width: 80 }}\r\n                              InputProps={{\r\n                                sx: {\r\n                                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                                    borderColor:\r\n                                      theme.palette.mode === \"dark\"\r\n                                        ? \"#fff\"\r\n                                        : \"#000\",\r\n                                  },\r\n                                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                                    borderColor:\r\n                                      theme.palette.mode === \"dark\"\r\n                                        ? \"#fff\"\r\n                                        : \"#000\",\r\n                                  },\r\n                                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n                                    {\r\n                                      borderColor:\r\n                                        theme.palette.mode === \"dark\"\r\n                                          ? \"#fff\"\r\n                                          : \"#000\",\r\n                                    },\r\n                                  color:\r\n                                    theme.palette.mode === \"dark\"\r\n                                      ? \"#fff\"\r\n                                      : \"#000\",\r\n                                },\r\n                              }}\r\n                              InputLabelProps={{\r\n                                sx: {\r\n                                  color:\r\n                                    theme.palette.mode === \"dark\"\r\n                                      ? \"#ccc\"\r\n                                      : \"#555\",\r\n                                  \"&.Mui-focused\": {\r\n                                    color:\r\n                                      theme.palette.mode === \"dark\"\r\n                                        ? \"#fff\"\r\n                                        : \"#000\",\r\n                                  },\r\n                                },\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n\r\n                      <TableRow\r\n                        sx={{\r\n                          borderTop: `2px solid ${theme.palette.divider}`,\r\n                          backgroundColor:\r\n                            theme.palette.mode === \"light\"\r\n                              ? theme.palette.grey[100]\r\n                              : theme.palette.background.paper,\r\n                        }}\r\n                      >\r\n                        <TableCell sx={{ fontWeight: 600 }}>Total</TableCell>\r\n                        <TableCell sx={{ fontWeight: 600, textAlign: \"right\" }}>\r\n                          {formatAccounting2(\r\n                            isNaN(totalSelectedPrice) ? 0 : totalSelectedPrice\r\n                          )}\r\n                          ETB\r\n                        </TableCell>\r\n                        <TableCell colSpan={2} />\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    <strong>Payment Method</strong>\r\n                  </Typography>\r\n                </Box>\r\n              </>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ px: 3, py: 2 }}>\r\n            <Button\r\n              onClick={() => resetGroupData()}\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => handlePaymentSubmit()}\r\n              sx={{ backgroundColor: \"#174564\" }}\r\n              variant=\"contained\"\r\n              disabled={isSending}\r\n              startIcon={<CheckCircleOutline />}\r\n            >\r\n              {isSending ? (\r\n                <CircularProgress size={24} color=\"inherit\" />\r\n              ) : (\r\n                \"Confirm Payment\"\r\n              )}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Pharmacy;\r\n","import { useState } from \"react\";\r\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport { tokens } from \"../../theme\";\r\n\r\nconst Calendar = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [currentEvents, setCurrentEvents] = useState([]);\r\n\r\n  const handleDateClick = (selected) => {\r\n    const title = prompt(\"Please enter a new title for your event\");\r\n    const calendarApi = selected.view.calendar;\r\n    calendarApi.unselect();\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: `${selected.dateStr}-${title}`,\r\n        title,\r\n        start: selected.startStr,\r\n        end: selected.endStr,\r\n        allDay: selected.allDay,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEventClick = (selected) => {\r\n    if (\r\n      window.confirm(\r\n        `Are you sure you want to delete the event '${selected.event.title}'`\r\n      )\r\n    ) {\r\n      selected.event.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Calendar\" subtitle=\"Full Calendar Interactive Page\" />\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        {/* CALENDAR SIDEBAR */}\r\n        <Box\r\n          flex=\"1 1 20%\"\r\n          backgroundColor={colors.primary[400]}\r\n          p=\"15px\"\r\n          borderRadius=\"4px\"\r\n        >\r\n          <Typography variant=\"h5\">Events</Typography>\r\n          <List>\r\n            {currentEvents.map((event) => (\r\n              <ListItem\r\n                key={event.id}\r\n                sx={{\r\n                  backgroundColor: colors.greenAccent[500],\r\n                  margin: \"10px 0\",\r\n                  borderRadius: \"2px\",\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={event.title}\r\n                  secondary={\r\n                    <Typography>\r\n                      {formatDate(event.start, {\r\n                        year: \"numeric\",\r\n                        month: \"short\",\r\n                        day: \"numeric\",\r\n                      })}\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n\r\n        {/* CALENDAR */}\r\n        <Box flex=\"1 1 100%\" ml=\"15px\">\r\n          <FullCalendar\r\n            height=\"75vh\"\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\r\n            }}\r\n            initialView=\"dayGridMonth\"\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            select={handleDateClick}\r\n            eventClick={handleEventClick}\r\n            eventsSet={(events) => setCurrentEvents(events)}\r\n            initialEvents={[\r\n              {\r\n                id: \"12315\",\r\n                title: \"All-day event\",\r\n                date: \"2022-09-14\",\r\n              },\r\n              {\r\n                id: \"5123\",\r\n                title: \"Timed event\",\r\n                date: \"2022-09-28\",\r\n              },\r\n            ]}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import { Box } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport LineChart from \"../../components/LineChart\";\r\n\r\nconst Line = () => {\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Line Chart\" subtitle=\"Simple Line Chart\" />\r\n      <Box height=\"75vh\">\r\n        <LineChart />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  IconButton,\r\n  Backdrop,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst AddRoleModal = ({\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  updateData,\r\n  onEdit,\r\n  resetData,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    role: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const [roleErro, setRoleError] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setFormData({\r\n      role: \"\",\r\n      description: \"\",\r\n    });\r\n    resetData();\r\n    onClose(); // Close the modal\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"role\") {\r\n      validateRole(e.target.value);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (updateData !== undefined) {\r\n      setFormData({\r\n        role: updateData?.name,\r\n        description: updateData?.description,\r\n      });\r\n    }\r\n  }, [updateData]);\r\n\r\n  const validateRole = (role) => {\r\n    const usernameRegex = /^[A-Za-z][A-Za-z0-9]{1,}$/;\r\n    if (!usernameRegex.test(role)) {\r\n      setRoleError(\r\n        \"Username must start with a letter, be at least 3 characters long, and contain no spaces.\"\r\n      );\r\n    } else {\r\n      setRoleError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!roleErro) {\r\n      if (updateData) {\r\n        onEdit(formData);\r\n      } else {\r\n        onSubmit(formData);\r\n      }\r\n      onClose();\r\n    } else {\r\n      alert(\"Please fix the errors before submitting.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          handleClose();\r\n        }\r\n      }}\r\n      disableEscapeKeyDown\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{ timeout: 500 }}\r\n    >\r\n      <Box sx={modalStyle}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">{updateData ? \"Edit Role\" : \"Add New Role\"}</Typography>\r\n          <IconButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"role\"\r\n            name=\"role\"\r\n            value={formData.role}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            required\r\n            error={!!roleErro}\r\n            helperText={roleErro}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"description\"\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" mt={2}>\r\n            <Button onClick={handleClose} color=\"secondary\" sx={{ mr: 2 }}>\r\n              Close\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {updateData ? \"Save Changes\" : \"Add Role\"}\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Modal Styles\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 3,\r\n  borderRadius: 2,\r\n};\r\n\r\nexport default AddRoleModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./UserManagment.css\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { IconButton, Button, useTheme } from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport PasswordIcon from \"@mui/icons-material/VpnKey\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport AddRoleModal from \"./AddRoleModal\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport api from \"../utils/api\";\r\nconst RoleManagment = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [dataToedit, setDataToedit] = useState(null);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleEditUser = async (params) => {\r\n    try {\r\n      setDataToedit(params.row); // Set selected user data for editing\r\n      setModalOpen(true); // Open the modal for editing\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const resetDataToEdit = async () => {\r\n    setDataToedit(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchRoles = async () => {\r\n      try {\r\n        const response = await api.get(\"/Admin/roles\");\r\n\r\n        const sortedRoles = response?.data?.sort((a, b) =>\r\n          a.name.localeCompare(b.name)\r\n        );\r\n        const rolesWithOrder = sortedRoles.map((role, index) => ({\r\n          ...role,\r\n          orderNumber: index + 1,\r\n        }));\r\n        setRows(rolesWithOrder);\r\n      } catch (error) {\r\n        console.error(\"fetchrole>>\", error.message);\r\n        toast.error(\"Internal Server Error on Role Fetch;\");\r\n      }\r\n    };\r\n\r\n    fetchRoles();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"orderNumber\", headerName: \"ID\", flex: 1 },\r\n    { field: \"name\", headerName: \"Role\", flex: 1 },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            // onClick={() => handleEditUser(params)}\r\n            aria-label=\"edit\"\r\n            className=\"text-info\"\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            // onClick={() => handleOpenDeleteConfirm(params.row)}\r\n            color=\"danger\"\r\n            aria-label=\"delete\"\r\n            className=\"text-danger\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Handle the form submission\r\n  const handleAddRole = async (userData) => {\r\n    // Send userData to your backend API or perform other actions\r\n  };\r\n\r\n  // Handle the form submission\r\n  const handleEditRole = (userData) => {\r\n    // Send userData to your backend API or perform other actions\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h1 className=\"hed\">Role Management</h1>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color={theme.palette.mode === \"light\" ? \"primary\" : \"success\"}\r\n        startIcon={<PersonAddIcon />}\r\n        onClick={() => setModalOpen(true)}\r\n      >\r\n        Add Role\r\n      </Button>\r\n\r\n      <AddRoleModal\r\n        isOpen={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        onSubmit={handleAddRole}\r\n        onEdit={handleEditRole}\r\n        updateData={dataToedit}\r\n        resetData={resetDataToEdit}\r\n      />\r\n\r\n      <div className=\"data-grid-container\">\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleManagment;\r\n","// src/components/UnauthorizedPage.jsx\r\nimport React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport SentimentVeryDissatisfiedIcon from \"@mui/icons-material/SentimentVeryDissatisfied\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UnauthorizedPage() {\r\n  const theme = useTheme();\r\n  const isSm = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"md\"\r\n      sx={{\r\n        minHeight: \"80vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        px: 2,\r\n      }}\r\n    >\r\n      <SentimentVeryDissatisfiedIcon\r\n        sx={{\r\n          fontSize: isSm ? 80 : 120,\r\n          color: theme.palette.error.main,\r\n          mb: 2,\r\n        }}\r\n      />\r\n      <Typography variant={isSm ? \"h4\" : \"h2\"} gutterBottom>\r\n        403 — Forbidden\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        color=\"text.secondary\"\r\n        sx={{ mb: 4, maxWidth: 600 }}\r\n      >\r\n        You don’t have permission to access this page. If you think this is a\r\n        mistake, please contact your administrator.\r\n      </Typography>\r\n      <Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => navigate(\"/\")}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  IconButton,\r\n  useTheme,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport AddHospitalServices from \"./AddHospitalServices\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { DataGrid, GridToolbarContainer } from \"@mui/x-data-grid\";\r\nimport { Add, Edit, Delete, ReplayOutlined } from \"@mui/icons-material\";\r\nimport api from \"../utils/api\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\nimport { formatAccounting2 } from \"../pages/hospitalpayment/HospitalPayment\";\r\n\r\nconst tokenvalue = getTokenValue();\r\nconst categories = [\r\n  \"Digital Payment Channels\",\r\n  \"CBHI Providers\",\r\n  \"Organizations with Agreements\",\r\n  \"Hospital Services\",\r\n  \"Payment Methods\",\r\n];\r\n\r\nconst PaymentManagementLists = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    category: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [editId, setEditId] = useState(null);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  function CustomToolbar({ rows, columns, category }) {\r\n    const exportToExcel = async () => {\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet(\"Payment Data\");\r\n\r\n      // Define headers\r\n      worksheet.columns = columns\r\n        .filter((col) => col.field !== \"actions\") // Skip actions column\r\n        .map((col) => ({\r\n          header: col.headerName || col.field,\r\n          key: col.field,\r\n          width: 25,\r\n        }));\r\n\r\n      // Add rows\r\n      rows.forEach((row) => {\r\n        const rowData = {};\r\n        worksheet.columns.forEach((col) => {\r\n          rowData[col.key] = row[col.key];\r\n        });\r\n        worksheet.addRow(rowData);\r\n      });\r\n\r\n      // Style headers\r\n      worksheet.getRow(1).font = { bold: true };\r\n\r\n      // Generate and trigger download\r\n      const buffer = await workbook.xlsx.writeBuffer();\r\n      const blob = new Blob([buffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      saveAs(blob, `${category}_data_.xlsx`);\r\n    };\r\n\r\n    return (\r\n      <GridToolbarContainer>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n          onClick={() => exportToExcel()}\r\n        >\r\n          Export to Excel\r\n        </Button>\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n\r\n  // Generalized fetch function\r\n  const fetchData = async (endpoint, key, mapFunction) => {\r\n    try {\r\n      const response = await api.get(endpoint);\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        const obj = response?.data?.map(({ createdBy, ...rest }) => ({\r\n          createdby: createdBy,\r\n          ...rest,\r\n        }));\r\n        const result = {\r\n          [key]: obj,\r\n        };\r\n\r\n        setData((prevData) => ({ ...prevData, ...result }));\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  // Fetch Payment Methods\r\n  useEffect(() => {\r\n    fetchData(\"/Lookup/payment-type\", \"Payment Methods\", (item) => item.type);\r\n  }, [refresh]);\r\n\r\n  // Fetch Digital Channels\r\n  useEffect(() => {\r\n    fetchData(\r\n      \"/Lookup/payment-channel\",\r\n      \"Digital Payment Channels\",\r\n      (item) => item.channel\r\n    );\r\n  }, [refresh]);\r\n\r\n  // Fetch Paymet purpose\r\n  useEffect(() => {\r\n    fetchData(\r\n      \"/Lookup/payment-purpose\",\r\n      \"Hospital Services\",\r\n      (item) => item.purpose\r\n    );\r\n  }, [refresh]);\r\n\r\n  // Fetch CBHI Provider\r\n  useEffect(() => {\r\n    fetchData(\r\n      `/Providers/list-providers`,\r\n      \"CBHI Providers\",\r\n      (item) => item.provider\r\n    );\r\n  }, [refresh]);\r\n\r\n  // Fetch Organization with Agreement\r\n  useEffect(() => {\r\n    fetchData(\r\n      `/Organiztion/Organization`,\r\n      \"Organizations with Agreements\",\r\n      (item) => item.organization\r\n    );\r\n  }, [refresh]);\r\n\r\n  const handleOpen = (category, item = \"\", id = null) => {\r\n    setFormData({ category, name: item });\r\n    setEditId(id);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOpen2 = (category, item = \"\", loc = \"\", id = null) => {\r\n    setFormData({ category, name: item, address: loc });\r\n    setEditId(id);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setEditId(null);\r\n    setFormData({ category: \"\", name: \"\", address: \"\" });\r\n  };\r\n\r\n  const getRowsAndColumns = (category) => {\r\n    const baseData = data[category] || [];\r\n\r\n    const rows = baseData.map((item) => ({\r\n      id: item.id,\r\n      name:\r\n        category === \"Digital Payment Channels\"\r\n          ? item.channel\r\n          : category === \"Payment Methods\"\r\n          ? item.type\r\n          : category === \"Hospital Services\"\r\n          ? item.purpose\r\n          : category === \"CBHI Providers\"\r\n          ? item.provider\r\n          : item.organization,\r\n      createdBy: item.createdby,\r\n      location:\r\n        category === \"Organizations with Agreements\" ? item.location : \"\",\r\n      amount:\r\n        category === \"Hospital Services\" ? formatAccounting2(item.amount) : 0,\r\n      shortCodes: item.shortCodes,\r\n      group: item.group,\r\n      subgroup: item.subgroup,\r\n    }));\r\n\r\n    let columns = [];\r\n\r\n    if (category === \"Hospital Services\") {\r\n      columns = [\r\n        { field: \"name\", headerName: \"Name\", flex: 1.1 },\r\n        { field: \"shortCodes\", headerName: \"ShortCode\", flex: 1 },\r\n        { field: \"group\", headerName: \"Group\", flex: 1 },\r\n        { field: \"subgroup\", headerName: \"SubGroup\", flex: 1 },\r\n        { field: \"amount\", headerName: \"Amount\", flex: 0.5 },\r\n      ];\r\n    } else if (category === \"Organizations with Agreements\") {\r\n      columns = [\r\n        { field: \"name\", headerName: \"Name\", flex: 1 },\r\n        { field: \"location\", headerName: \"Address\", flex: 1 },\r\n      ];\r\n    } else {\r\n      columns = [{ field: \"name\", headerName: \"Name\", flex: 1 }];\r\n    }\r\n\r\n    columns.push({\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      flex: 0.5,\r\n      renderCell: (params) =>\r\n        params?.row?.createdBy?.toUpperCase() !== \"SYS\" && (\r\n          <>\r\n            <IconButton\r\n              onClick={() => {\r\n                if (category === \"Organizations with Agreements\") {\r\n                  handleOpen2(\r\n                    category,\r\n                    params.row.name,\r\n                    params.row.location,\r\n                    params.row.id\r\n                  );\r\n                } else if (category === \"Hospital Services\") {\r\n                  handleOpen2(\r\n                    category,\r\n                    params.row.name,\r\n                    params.row.location,\r\n                    params.row.id\r\n                  );\r\n                } else {\r\n                  handleOpen(category, params.row.name, params.row.id);\r\n                }\r\n              }}\r\n            >\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => handleDelete(category, params.row.id)}\r\n              color=\"error\"\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </>\r\n        ),\r\n    });\r\n\r\n    return { rows, columns };\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"address\") {\r\n      setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else {\r\n      setFormData({ ...formData, name: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (params) => {\r\n    try {\r\n      const { category, name, address } = formData;\r\n      if (!name.trim()) return;\r\n      const apiEndpoints = {\r\n        \"Digital Payment Channels\": \"/Lookup/payment-channel\",\r\n        \"Payment Methods\": \"/Lookup/payment-type\",\r\n        \"Hospital Services\": \"/Lookup/payment-purpose\",\r\n        \"CBHI Providers\": \"/Providers/add-provider\",\r\n        \"Organizations with Agreements\": \"/Organiztion/Organization\",\r\n      };\r\n\r\n      const apiEndpointsEdit = {\r\n        \"Digital Payment Channels\": \"/Lookup/payment-channel\",\r\n        \"Payment Methods\": \"/Lookup/payment-type\",\r\n        \"Hospital Services\": \"/Lookup/payment-purpose\",\r\n        \"CBHI Providers\": \"/Providers/update-provider\",\r\n        \"Organizations with Agreements\": \"/Organiztion/Organization\",\r\n      };\r\n\r\n      const requestBody = {\r\n        \"Digital Payment Channels\": {\r\n          channel: name,\r\n          createdBy: tokenvalue.name,\r\n        },\r\n        \"Payment Methods\": { type: name, createdBy: tokenvalue.name },\r\n        \"Hospital Services\": params,\r\n        \"CBHI Providers\": {\r\n          provider: name,\r\n          service: \"CBHI\",\r\n          createdBy: tokenvalue.name,\r\n        },\r\n        \"Organizations with Agreements\": {\r\n          organization: name,\r\n          address: address,\r\n          createdBy: tokenvalue.name,\r\n        },\r\n      };\r\n\r\n      const requestBodyEdit = {\r\n        \"Digital Payment Channels\": {\r\n          id: Number(editId),\r\n          channel: name,\r\n          updatedBy: tokenvalue.name,\r\n          updatedOn: new Date().toISOString(),\r\n        },\r\n        \"Payment Methods\": {\r\n          id: Number(editId),\r\n          type: name,\r\n          updatedBy: tokenvalue.name,\r\n          updatedOn: new Date().toISOString(),\r\n        },\r\n        \"Hospital Services\": {\r\n          id: Number(editId),\r\n          purpose: name,\r\n          updatedBy: tokenvalue.name,\r\n          updatedOn: new Date().toISOString(),\r\n        },\r\n        \"CBHI Providers\": {\r\n          id: Number(editId),\r\n          provider: name,\r\n          service: \"CBHI\",\r\n          updatedBy: tokenvalue.name,\r\n          updatedOn: new Date().toISOString(),\r\n        },\r\n\r\n        \"Organizations with Agreements\": {\r\n          id: Number(editId),\r\n          organization: name,\r\n          address: address,\r\n          updatedBy: tokenvalue.name,\r\n          updatedOn: new Date().toISOString(),\r\n        },\r\n      };\r\n\r\n      if (editId !== null && apiEndpointsEdit[category]) {\r\n        try {\r\n          await api.put(apiEndpointsEdit[category], requestBodyEdit[category]);\r\n\r\n          toast.success(`${category} updated successfully!`);\r\n          setRefresh((prev) => !prev);\r\n          handleClose();\r\n        } catch (error) {\r\n          console.error(\"Update error:\", error);\r\n          toast.error(error?.response?.data || \"Error updating data!\");\r\n        }\r\n      }\r\n\r\n      if (apiEndpoints[category] && editId === null) {\r\n        try {\r\n          setLoading(true);\r\n\r\n          const response = await api.post(\r\n            apiEndpoints[category],\r\n            requestBody[category],\r\n            {\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n            }\r\n          );\r\n          if (response.status === 201 || response.status === 200) {\r\n            toast.success(`${category} added successfully!`);\r\n            setRefresh((prev) => !prev);\r\n            setIsOpen(false);\r\n            handleClose();\r\n            return;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Upload error:\", error);\r\n          toast.error(\"Error Uploading data!\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n\r\n      // handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      toast.error(error?.response?.data || \"Internal Server Error!\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (category, id) => {\r\n    try {\r\n      const apiEndpoints = {\r\n        \"Digital Payment Channels\": \"/Lookup/payment-channel\",\r\n        \"Hospital Services\": \"/Lookup/payment-purpose\",\r\n        \"Payment Methods\": \"/Lookup/payment-type\",\r\n        \"CBHI Providers\": \"/Providers/delete-provider\",\r\n        \"Organizations with Agreements\": \"/Organiztion/Organization\",\r\n      };\r\n\r\n      if (apiEndpoints[category]) {\r\n        const response = await api.delete(apiEndpoints[category], {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          data: { id: id, deletedBy: tokenvalue.name },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          toast.success(`${category} deleted successfully!`);\r\n          setRefresh((prev) => !prev);\r\n        }\r\n      } else {\r\n        console.warn(`No API endpoint found for category: ${category}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting category:\", error);\r\n      toast.error(\"Failed to delete item. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleSomething = (categoryA) => {\r\n    setFormData({ category: categoryA, name: categoryA, address: \"\" });\r\n    setEditId(null);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Payment Management\r\n      </Typography>\r\n      {categories.map((category) => (\r\n        <div key={category} style={{ marginBottom: \"20px\" }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {category}\r\n          </Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            mb={1} // margin bottom\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n              startIcon={<Add />}\r\n              onClick={() => {\r\n                category === \"Organizations with Agreements\"\r\n                  ? handleOpen2(category)\r\n                  : category === \"Hospital Services\"\r\n                  ? handleSomething(category)\r\n                  : handleOpen(category);\r\n              }}\r\n            >\r\n              Add {category}\r\n            </Button>\r\n          </Box>\r\n\r\n          {(() => {\r\n            const { rows, columns } = getRowsAndColumns(category);\r\n            return (\r\n              <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                autoHeight\r\n                sx={{ minWidth: 320 }}\r\n                slots={{\r\n                  toolbar: () => (\r\n                    <CustomToolbar\r\n                      rows={rows}\r\n                      columns={columns}\r\n                      category={category}\r\n                    />\r\n                  ),\r\n                }}\r\n              />\r\n            );\r\n          })()}\r\n        </div>\r\n      ))}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleClose(); // Reset and close the modal\r\n          }\r\n        }}\r\n        disableEnforceFocus\r\n        BackdropProps={{ \"aria-hidden\": false }}\r\n      >\r\n        <DialogTitle>\r\n          {editId !== null ? \"Edit\" : \"Add\"} {formData.category}\r\n        </DialogTitle>\r\n        <DialogContent\r\n          style={{\r\n            display: \"flex\",\r\n            msFlexDirection: \"column\",\r\n            height:\r\n              formData?.category === \"Organizations with Agreements\"\r\n                ? \"150px\"\r\n                : \"100px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            autoFocus\r\n            InputProps={{\r\n              sx: {\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              sx: {\r\n                color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          {formData?.category === \"Organizations with Agreements\" && (\r\n            <TextField\r\n              fullWidth\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              value={formData?.address || \"\"}\r\n              onChange={handleChange}\r\n              autoFocus\r\n              sx={{ marginTop: \"10px\" }}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"error\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={theme.palette.mode === \"light\" ? \"primary\" : \"success\"}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AddHospitalServices\r\n        isOpen={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PaymentManagementLists;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport { ResponsiveBar } from \"@nivo/bar\";\r\nimport { tokens } from \"../theme\";\r\nimport api from \"../utils/api\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\n\r\nconst tokenvalue = getTokenValue();\r\nconst BarChart = ({ isDashboard = false }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const today = new Date();\r\n  const startDate = new Date(today);\r\n  startDate.setDate(today.getDate() - 7);\r\n  const [result, setResult] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.put(\"/Payment/Get-all-Payment\", {\r\n          startDate: startDate,\r\n          endDate: today,\r\n          user: tokenvalue?.name,\r\n        });\r\n      \r\n        const summary = response?.data\r\n          ? response?.data?.reduce((acc, payment) => {\r\n              const { paymentType, paymentAmount } = payment;\r\n              // const dateKey = new Date(createdOn).toISOString().split('T')[0];\r\n              if (!acc[paymentType]) {\r\n                acc[paymentType] = 0;\r\n              }\r\n              acc[paymentType] += parseFloat(paymentAmount);\r\n              return acc;\r\n            }, {})\r\n          : [];\r\n      \r\n\r\n        const mapped =  Object.entries(summary).map(([key, value]) => ({\r\n          method: key,\r\n          amount: value,\r\n        }));\r\n        mapped.sort((a, b) => b.y - a.y);\r\n\r\n        setResult(mapped);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // If data hasn't loaded yet\r\n\r\n  return (\r\n    <ResponsiveBar\r\n      data={result} // <-- Use the result directly\r\n      indexBy=\"method\" // <-- Use the x as category\r\n      keys={[\"amount\"]} // <-- y is the value we're plotting\r\n      margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n      padding={0.3}\r\n      theme={{\r\n        axis: {\r\n          domain: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n            },\r\n          },\r\n          legend: {\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n          ticks: {\r\n            line: {\r\n              stroke: colors.grey[100],\r\n              strokeWidth: 1,\r\n            },\r\n            text: {\r\n              fill: colors.grey[100],\r\n            },\r\n          },\r\n        },\r\n        legends: {\r\n          text: {\r\n            fill: colors.grey[100],\r\n          },\r\n        },\r\n      }}\r\n      // colors={{ scheme: \"nivo\" }}\r\n      colors={colors.greenAccent[500]}\r\n      axisBottom={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Payment Type\",\r\n        legendPosition: \"middle\",\r\n        legendOffset: 32,\r\n      }}\r\n      axisLeft={{\r\n        tickSize: 5,\r\n        tickPadding: 5,\r\n        tickRotation: 0,\r\n        legend: isDashboard ? undefined : \"Amount\",\r\n        legendPosition: \"middle\",\r\n        legendOffset: -40,\r\n      }}\r\n      legends={[\r\n        {\r\n          dataFrom: \"keys\",\r\n          anchor: \"bottom-right\",\r\n          direction: \"column\",\r\n          justify: false,\r\n          translateX: 120,\r\n          translateY: 0,\r\n          itemsSpacing: 2,\r\n          itemWidth: 100,\r\n          itemHeight: 20,\r\n          itemDirection: \"left-to-right\",\r\n          itemOpacity: 0.85,\r\n          symbolSize: 20,\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemOpacity: 1,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n      role=\"application\"\r\n      barAriaLabel={function (e) {\r\n        return e.id + \": \" + e.formattedValue + \" in category: \" + e.indexValue;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarChart;","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  CircularProgress,\r\n  Stack,\r\n  Divider,\r\n  InputAdornment,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Edit } from \"@mui/icons-material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\nimport api from \"../utils/api\";\r\nimport { fetchPatientName } from \"../services/user_service\";\r\n\r\nconst initialForm = {\r\n  patientCardNumber: \"\",\r\n  patientAge: \"\",\r\n  accedentDate: \"\",\r\n  acceedentAddress: \"\",\r\n  carCertificate: \"\",\r\n  plateNumber: \"\",\r\n  policeName: \"\",\r\n  policePhone: \"\",\r\n};\r\n\r\nconst controllerError = (state, action) => {\r\n  try {\r\n    if (action.name === \"Reset\") {\r\n      return initialForm;\r\n    } else {\r\n      return { ...state, [action.name]: action.values };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"State Update Error: \", error);\r\n  }\r\n};\r\n\r\nfunction TrafficAccidentCrud() {\r\n  const [formData, setFormData] = useState(initialForm);\r\n  const [formDataError, setFormDataError] = useReducer(\r\n    controllerError,\r\n    initialForm\r\n  );\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [patientName, setPatientName] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  //Fetch DataGrid data\r\n  useEffect(() => {\r\n    const fetchTableData = async () => {\r\n      try {\r\n        const response = await api.put(\"/Patient/get-patient-accedent\", {});\r\n        const modData = response?.data?.data?.map(\r\n          ({\r\n            accedentRecId,\r\n            patientMiddleName,\r\n            patientLastName,\r\n            patientFirstName,\r\n            ...rest\r\n          }) => ({\r\n            id: accedentRecId,\r\n            patientName:\r\n              patientFirstName +\r\n              \" \" +\r\n              patientMiddleName +\r\n              \" \" +\r\n              patientLastName,\r\n            ...rest,\r\n          })\r\n        );\r\n\r\n        if (response?.status === 200) {\r\n          setRecords(modData.sort((a, b) => b.id - a.id));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"This is fetch table data error: \", error);\r\n        toast.error(error?.response?.data?.msg || \"Unable to Fetch Data\");\r\n      }\r\n    };\r\n\r\n    fetchTableData();\r\n  }, [refresh]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"patientCardNumber\") {\r\n      setPatientName(\"\");\r\n      mrnCheck(name, value);\r\n    } else if (name === \"accedentDate\" || name === \"plateNumber\") {\r\n      letterNumberCheck(name, value);\r\n    } else if (name === \"policeName\") {\r\n      validateName(name, value);\r\n    } else if (name === \"policePhone\") {\r\n      validatePhoneNumber(name, value);\r\n    }\r\n\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      setLoading(true);\r\n      e.preventDefault();\r\n\r\n      if (Object.values(formDataError).some((em) => em.length > 0)) {\r\n        toast.error(\"Please fix the erros first.\");\r\n        return;\r\n      }\r\n      const payload = {\r\n        id: editIndex !== null ? formData?.id : 0,\r\n        patientCardNumber: `${Number(formData?.patientCardNumber)}`,\r\n        accAddress: formData?.acceedentAddress,\r\n        accDate: formData?.accedentDate?.split(\"+\")[0],\r\n        policeName: formData?.policeName,\r\n        policePhone: formData?.policePhone,\r\n        plateNumber: formData?.plateNumber,\r\n        certificate: formData?.carCertificate,\r\n      };\r\n\r\n      if (editIndex !== null) {\r\n        const response = await api.put(\r\n          \"/Patient/change-patient-accedent\",\r\n          payload\r\n        );\r\n        if (response?.status === 200) {\r\n          toast.success(response?.data?.msg || \"Updated Successfully.\");\r\n          setRefresh((prev) => !prev);\r\n          setEditIndex(null);\r\n          setFormData(initialForm);\r\n        }\r\n      } else {\r\n        const response = await api.post(\r\n          \"/Patient/add-patient-accedent\",\r\n          payload\r\n        );\r\n        if (response?.status === 200) {\r\n          setRefresh((prev) => !prev);\r\n          toast.success(\"Recorded Successfully.\");\r\n          setFormData(initialForm);\r\n          setPatientName(\"\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is Submit Error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server Error.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    setFormData(records[index]);\r\n    setEditIndex(index);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setFormData(initialForm);\r\n    setFormDataError({ name: \"Reset\" });\r\n    setPatientName(\"\");\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const handleChangeTime = (fieldName, selectedDate) => {\r\n    let jsDate;\r\n    if (selectedDate instanceof Date) {\r\n      jsDate = selectedDate;\r\n    } else {\r\n      jsDate = new Date(selectedDate);\r\n    }\r\n\r\n    if (isNaN(jsDate.getTime())) {\r\n      console.error(\"Invalid date provided to handleChangeTime:\", selectedDate);\r\n      return;\r\n    }\r\n\r\n    const tzOffsetMinutes = jsDate.getTimezoneOffset();\r\n    const absOffset = Math.abs(tzOffsetMinutes);\r\n    const offsetHours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\r\n    const offsetMinutes = String(absOffset % 60).padStart(2, \"0\");\r\n    const sign = tzOffsetMinutes <= 0 ? \"+\" : \"-\";\r\n\r\n    const localDate = new Date(jsDate.getTime() - tzOffsetMinutes * 60000);\r\n    const dateStr = localDate.toISOString().slice(0, 19).replace(\"T\", \" \");\r\n\r\n    const sqlDateOffset = `${dateStr} ${sign}${offsetHours}:${offsetMinutes}`;\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [fieldName]: sqlDateOffset,\r\n    }));\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"MRN\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Name\", flex: 1 },\r\n    { field: \"patientAge\", headerName: \"Age\", flex: 1 },\r\n\r\n    {\r\n      field: \"accedentDate\",\r\n      headerName: \"Date\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return renderETDateAtCell(params?.row?.accedentDate);\r\n      },\r\n    },\r\n    { field: \"plateNumber\", headerName: \"Plate Number\", flex: 1 },\r\n    {\r\n      field: \"carCertificate\",\r\n      headerName: \"Car Certificate\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return params?.row?.carCertificate?.length <= 0\r\n          ? \"Unspecified\"\r\n          : params?.row?.carCertificate;\r\n      },\r\n    },\r\n    { field: \"acceedentAddress\", headerName: \"Address\", flex: 2 },\r\n    { field: \"policeName\", headerName: \"Police Name\", flex: 1 },\r\n    { field: \"policePhone\", headerName: \"Police Phone\", flex: 1 },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      flex: 1,\r\n      sortable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            onClick={() => {\r\n              handleEdit(records.findIndex((r) => r.id === params.row.id));\r\n            }}\r\n          >\r\n            <Edit />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const validatePhoneNumber = (name, phone) => {\r\n    const phoneRegex = /^(?:\\+251|09|07)\\d+$/;\r\n    if (!phoneRegex.test(phone) && phone.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values:\r\n          \"Phone number must start with +251, 09, or 07 and contain only numbers.\",\r\n      });\r\n    } else {\r\n      if (phone.startsWith(\"+251\") && phone.length !== 13) {\r\n        setFormDataError({\r\n          name: name,\r\n          values: \"Phone number starting with +251 must have 13 digits.\",\r\n        });\r\n      } else if (\r\n        (phone.startsWith(\"09\") || phone.startsWith(\"07\")) &&\r\n        phone.length !== 10\r\n      ) {\r\n        setFormDataError({\r\n          name: name,\r\n          values: \"Phone number starting with 09 or 07 must have 10 digits.\",\r\n        });\r\n      } else {\r\n        setFormDataError({\r\n          name: name,\r\n          values: \"\",\r\n        });\r\n      }\r\n      return;\r\n    }\r\n  };\r\n\r\n  const validateName = (name, value) => {\r\n    const comp = /^[a-zA-Z\\u1200-\\u137F\\s]{3,}$/;\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"Full Name must be only letters, at least 3 characters long.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n    return;\r\n  };\r\n\r\n  const mrnCheck = (name, value) => {\r\n    const comp = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/;\r\n\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"Please Insert Valid MRN, more than 5 digit only.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const letterNumberCheck = (name, value) => {\r\n    const comp = /^[a-zA-Z0-9\\u1200-\\u137F\\s]+$/;\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"Letters Number and space Only.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleGetPatientName = async () => {\r\n    try {\r\n      setIsFetching(true);\r\n\r\n      if (patientName?.length <= 0) {\r\n        if (\r\n          formDataError?.patientCardNumber?.length <= 0 &&\r\n          formData?.patientCardNumber?.length > 0\r\n        ) {\r\n          const response = await fetchPatientName(formData?.patientCardNumber);\r\n\r\n          if (response?.length > 0) {\r\n            setPatientName(response);\r\n          } else {\r\n            toast.error(\"Card Number Not Registered.\");\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      p={3}\r\n      component={Paper}\r\n      sx={{ marginInline: \"15px\" }}\r\n      elevation={4}\r\n      borderRadius={3}\r\n    >\r\n      <Typography variant=\"h5\" gutterBottom fontWeight=\"bold\">\r\n        🚨 Traffic Accident Registration\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2} mt={1}>\r\n          <Grid item xs={12}>\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              divider={<Divider orientation=\"vertical\" flexItem />}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {/* Left Section */}\r\n              <Box sx={{ flex: 1 }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                      Patient Information\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      label=\"MRN\"\r\n                      name=\"patientCardNumber\"\r\n                      value={formData?.patientCardNumber}\r\n                      onChange={handleChange}\r\n                      disabled={editIndex !== null}\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.patientCardNumber}\r\n                      helperText={\r\n                        formDataError?.patientCardNumber?.length > 0\r\n                          ? formDataError?.patientCardNumber\r\n                          : patientName\r\n                      }\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            {isFetching && (\r\n                              <CircularProgress size={24} color=\"inherit\" />\r\n                            )}\r\n                          </InputAdornment>\r\n                        ),\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                      FormHelperTextProps={{\r\n                        style: {\r\n                          color: !!formDataError?.patientCardNumber\r\n                            ? \"red\"\r\n                            : \"green\",\r\n                          fontSize: \"14px\",\r\n                        },\r\n                      }}\r\n                      onBlurCapture={() => handleGetPatientName()}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Box\r\n                      sx={{\r\n                        height: \"56px\",\r\n                        border: `1px dashed ${\r\n                          theme.palette.mode === \"dark\"\r\n                            ? \"rgba(255,255,255,0.23)\"\r\n                            : \"rgba(0,0,0,0.23)\"\r\n                        }`,\r\n                        borderRadius: \"4px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        color: \"rgba(0,0,0,0.6)\",\r\n                        fontStyle: \"italic\",\r\n                        paddingBottom: \"71px\",\r\n                      }}\r\n                    >\r\n                      {/* Placeholder */}\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                      Car Information (if Known)\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      label=\"Car Plate Number\"\r\n                      name=\"plateNumber\"\r\n                      value={formData?.plateNumber}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.plateNumber}\r\n                      helperText={formDataError?.plateNumber}\r\n                      InputProps={{\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      label=\"Certificate\"\r\n                      name=\"carCertificate\"\r\n                      value={formData?.carCertificate}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.carCertificate}\r\n                      helperText={formDataError?.carCertificate}\r\n                      InputProps={{\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              {/* Right Section */}\r\n              <Box sx={{ flex: 1 }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                      Accident Information\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <EtDatePicker\r\n                      key={formData?.accedentDate || \"accidentDate-date\"}\r\n                      label=\"Accident Date\"\r\n                      name=\"accedentDate\"\r\n                      value={\r\n                        formData?.accedentDate\r\n                          ? new Date(formData?.accedentDate)\r\n                          : null\r\n                      }\r\n                      onChange={(e) => handleChangeTime(\"accedentDate\", e)}\r\n                      sx={{ width: \"100%\" }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      label=\"Accident Address\"\r\n                      name=\"acceedentAddress\"\r\n                      value={formData?.acceedentAddress}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      multiline\r\n                      rows={2}\r\n                      required\r\n                      error={!!formDataError?.acceedentAddress}\r\n                      helperText={formDataError?.acceedentAddress}\r\n                      InputProps={{\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                      From the form filled out by the police\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      label=\"Police Name\"\r\n                      name=\"policeName\"\r\n                      value={formData?.policeName}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.policeName}\r\n                      helperText={formDataError?.policeName}\r\n                      InputProps={{\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      label=\"Police Phone\"\r\n                      name=\"policePhone\"\r\n                      value={formData?.policePhone}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      type=\"tel\"\r\n                      error={!!formDataError?.policePhone}\r\n                      helperText={formDataError?.policePhone}\r\n                      InputProps={{\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Buttons */}\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\" gap={2}>\r\n          <Button variant=\"outlined\" color=\"error\" onClick={handleCancelEdit}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            disabled={loading}\r\n            variant=\"contained\"\r\n          >\r\n            {loading ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : editIndex !== null ? (\r\n              \"Update\"\r\n            ) : (\r\n              \"Register\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n\r\n      <Box mt={5}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Registered Records\r\n        </Typography>\r\n        <Box>\r\n          <DataGrid\r\n            rows={records}\r\n            columns={columns}\r\n            disableRowSelectionOnClick\r\n            getRowId={(row) => row.id}\r\n            localeText={{\r\n              noRowsLabel: \"No traffic accident records to display\",\r\n            }}\r\n            autoHeight\r\n            sx={{ minWidth: 320 }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TrafficAccidentCrud;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Button, Typography, useTheme, Stack, Paper } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport dayjs from \"dayjs\";\r\nimport api from \"../utils/api\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { saveAs } from \"file-saver\";\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\n\r\nconst tokenValue = getTokenValue();\r\n\r\nconst PharmacyRequestsPage = () => {\r\n  const theme = useTheme();\r\n  const [startDate, setStartDate] = useState(dayjs().startOf(\"day\")?.$d);\r\n  const [endDate, setEndDate] = useState(dayjs().endOf(\"day\")?.$d);\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const requestedto = tokenValue?.UserType?.toLowerCase()?.includes(\"mlt\")\r\n        ? \"Lab\"\r\n        : tokenValue?.UserType;\r\n      const response = await api.put(\"/Request/doctor/rpt-get-request\", {\r\n        start: startDate,\r\n        end: endDate,\r\n        requestedto: requestedto || \"-\",\r\n      });\r\n\r\n      const data = response.data?.data?.value || [];\r\n\r\n      const filtered = data.filter(\r\n        (item) =>\r\n          item.requestedDepartment?.toLowerCase() === requestedto?.toLowerCase()\r\n      );\r\n\r\n      const formattedRows = filtered.map((item, index) => ({\r\n        id: index + 1,\r\n        cardNumber: item.patientCardNumber,\r\n        fullName: `${item.patientFirstName} ${item.patientMiddleName} ${item.patientLastName}`,\r\n        gender: item.patientGender,\r\n        department: item.requestingDepartment,\r\n        createdOn: dayjs(item.createdOn).format(\"YYYY-MM-DD HH:mm\"),\r\n        requestedBy: item.requestedBy,\r\n        services: item.requestedItems\r\n          .map((i) => i.requestedServices)\r\n          .join(\", \"),\r\n      }));\r\n\r\n      const sortedData = formattedRows?.sort(\r\n        (a, b) => a.createdOn - b.createdOn\r\n      );\r\n      setRows(sortedData);\r\n    } catch (err) {\r\n      toast.error(\r\n        err.response?.data?.msg || \"Something went wrong while fetching data.\"\r\n      );\r\n      console.error(\"This is fetchData Error : \", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportToExcel = async () => {\r\n    try {\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet(\"Doctor Requests\");\r\n\r\n      const formattedStart = dayjs(startDate).format(\"YYYY-MM-DD\");\r\n      const formattedEnd = dayjs(endDate).format(\"YYYY-MM-DD\");\r\n\r\n      // Define columns explicitly with headers\r\n      const columns = [\r\n        { header: \"Card Number\", key: \"cardNumber\", width: 15 },\r\n        { header: \"Full Name\", key: \"fullName\", width: 30 },\r\n        { header: \"Gender\", key: \"gender\", width: 10 },\r\n        { header: \"Requesting Department\", key: \"department\", width: 20 },\r\n        { header: \"Requested Services\", key: \"services\", width: 40 },\r\n        { header: \"Requested By\", key: \"requestedBy\", width: 20 },\r\n        {\r\n          header: \"Created On\",\r\n          key: \"createdOn\",\r\n          width: 20,\r\n          renderCell: (params) => renderETDateAtCell(params?.row?.createdOn),\r\n        },\r\n      ];\r\n\r\n      worksheet.columns = columns;\r\n\r\n      // Row 1: Hospital Title (Dynamic, Styled)\r\n      worksheet.mergeCells(\"A1:G1\");\r\n      const hospitalTitle = worksheet.getCell(\"A1\");\r\n      hospitalTitle.value = `${tokenValue?.Hospital} - Doctor Requests Report`;\r\n      hospitalTitle.font = {\r\n        bold: true,\r\n        size: 16,\r\n        color: { argb: \"FF003366\" },\r\n      };\r\n      hospitalTitle.alignment = { vertical: \"middle\", horizontal: \"center\" };\r\n      hospitalTitle.fill = {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"FFDEEAF6\" },\r\n      };\r\n      hospitalTitle.border = {\r\n        top: { style: \"thin\" },\r\n        left: { style: \"thin\" },\r\n        bottom: { style: \"thin\" },\r\n        right: { style: \"thin\" },\r\n      };\r\n\r\n      // Row 2: Date Range\r\n      worksheet.mergeCells(\"A2:G2\");\r\n      const dateRange = worksheet.getCell(\"A2\");\r\n      dateRange.value = `Report Period: ${renderETDateAtCell(\r\n        formattedStart\r\n      )} to ${renderETDateAtCell(formattedEnd)}`;\r\n      dateRange.font = { italic: true, size: 12 };\r\n      dateRange.alignment = { vertical: \"middle\", horizontal: \"center\" };\r\n\r\n      // Manually insert headers to row 3 with styling\r\n      const headerRow = worksheet.getRow(3);\r\n      columns.forEach((col, i) => {\r\n        const cell = headerRow.getCell(i + 1);\r\n        cell.value = col.header;\r\n        cell.font = { bold: true };\r\n        cell.alignment = {\r\n          horizontal: \"center\",\r\n          vertical: \"middle\",\r\n          wrapText: true,\r\n        };\r\n        cell.fill = {\r\n          type: \"pattern\",\r\n          pattern: \"solid\",\r\n          fgColor: { argb: \"FFDDEEFF\" },\r\n        };\r\n        cell.border = {\r\n          top: { style: \"thin\" },\r\n          bottom: { style: \"thin\" },\r\n          left: { style: \"thin\" },\r\n          right: { style: \"thin\" },\r\n        };\r\n      });\r\n      headerRow.commit();\r\n\r\n      const sortedRows = [...rows].sort((a, b) => {\r\n        return new Date(a.createdOn) - new Date(b.createdOn);\r\n      });\r\n\r\n      // Add data rows (starting from row 4)\r\n      sortedRows.forEach((rowData) => {\r\n        const processedData = {\r\n          ...rowData,\r\n          createdOn: renderETDateAtCell(rowData?.createdOn),\r\n        };\r\n\r\n        const excelRow = worksheet.addRow(processedData);\r\n        const isFailed = processedData.services\r\n          ?.toLowerCase()\r\n          .includes(\"failed\");\r\n\r\n        excelRow.eachCell((cell) => {\r\n          cell.border = {\r\n            top: { style: \"thin\" },\r\n            bottom: { style: \"thin\" },\r\n            left: { style: \"thin\" },\r\n            right: { style: \"thin\" },\r\n          };\r\n          if (isFailed) {\r\n            cell.fill = {\r\n              type: \"pattern\",\r\n              pattern: \"solid\",\r\n              fgColor: { argb: \"FFFFCCCC\" }, // Light red background\r\n            };\r\n          }\r\n        });\r\n      });\r\n\r\n      // Footer row for total count\r\n      const totalRow = worksheet.addRow([]);\r\n      totalRow.getCell(1).value = `Total Requests: ${rows.length}`;\r\n      totalRow.getCell(1).font = { bold: true };\r\n      worksheet.mergeCells(`A${totalRow.number}:G${totalRow.number}`);\r\n      totalRow.alignment = { horizontal: \"left\" };\r\n\r\n      // Freeze rows: title + date + headers\r\n      worksheet.views = [{ state: \"frozen\", ySplit: 3 }];\r\n\r\n      const buffer = await workbook.xlsx.writeBuffer();\r\n      saveAs(\r\n        new Blob([buffer]),\r\n        `DoctorRequests_${renderETDateAtCell(\r\n          formattedStart\r\n        )}_to_${renderETDateAtCell(formattedEnd)}.xlsx`\r\n      );\r\n    } catch (error) {\r\n      console.error(\"This is exportToExcel Error : \", error);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"cardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"fullName\", headerName: \"Patient Name\", flex: 2 },\r\n    { field: \"gender\", headerName: \"Gender\", flex: 1 },\r\n    { field: \"services\", headerName: \"Services\", flex: 2.5 },\r\n    { field: \"requestedBy\", headerName: \"Requested By\", flex: 1 },\r\n    {\r\n      field: \"department\",\r\n      headerName: \"Requesting Department\",\r\n      flex: 1.5,\r\n    },\r\n    {\r\n      field: \"createdOn\",\r\n      headerName: \"Created On\",\r\n      flex: 1.5,\r\n      renderCell: (params) =>\r\n        renderETDateAtCell(params?.row?.createdOn || \"1995-01-01\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom fontWeight={600}>\r\n        Doctor Request Viewer\r\n      </Typography>\r\n\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          p: 2,\r\n          mb: 2,\r\n          backgroundColor:\r\n            theme.palette.mode === \"dark\"\r\n              ? \"#12121200\"\r\n              : theme.palette.background.paper,\r\n          borderRadius: 2,\r\n        }}\r\n      >\r\n        <Stack\r\n          direction={{ xs: \"column\", sm: \"row\" }}\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n        >\r\n          <EtDatePicker\r\n            key={startDate || \"startDate\"}\r\n            label=\"Start Date\"\r\n            value={startDate ? new Date(startDate) : null}\r\n            onChange={(newValue) => setStartDate(newValue)}\r\n            required\r\n          />\r\n\r\n          <EtDatePicker\r\n            key={endDate || \"endDate\"}\r\n            label=\"End Date\"\r\n            value={endDate ? new Date(endDate) : null}\r\n            onChange={(newValue) => setEndDate(newValue)}\r\n            required\r\n          />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={fetchData}\r\n            disabled={loading}\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            sx={{ minWidth: 120, backgroundColor: \"#2e8ac9\" }}\r\n          >\r\n            {loading ? \"Loading...\" : \"Search\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            onClick={exportToExcel}\r\n            disabled={!rows.length}\r\n          >\r\n            Export to Excel\r\n          </Button>\r\n        </Stack>\r\n      </Paper>\r\n\r\n      <Paper elevation={1}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          loading={loading}\r\n          autoHeight\r\n          sx={{\r\n            minWidth: 320,\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: theme.palette.primary.light,\r\n              fontWeight: \"bold\",\r\n            },\r\n            \"& .MuiDataGrid-cell\": {\r\n              whiteSpace: \"normal\",\r\n              wordBreak: \"break-word\",\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PharmacyRequestsPage;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Grid,\r\n  Paper,\r\n  Divider,\r\n  Box,\r\n  CircularProgress,\r\n  InputAdornment,\r\n  MenuItem,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { Add, Delete } from \"@mui/icons-material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport api from \"../utils/api\";\r\nimport { fetchPatientName, registerUser } from \"../services/user_service\"; // Assuming this is needed\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\nimport {\r\n  formatAccounting,\r\n  formatAccounting2,\r\n} from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\nimport PatientTransactionsModal from \"./PatientTransactionsModal\";\r\n\r\nconst initialState = {\r\n  services: [],\r\n  patientCardNumber: \"\",\r\n  patientName: \"\",\r\n  medicationUse: \"\",\r\n  admissionDate: \"\",\r\n  dischargeDate: \"\",\r\n  patientCondition: \"\",\r\n};\r\nconst controllerError = (state, action) => {\r\n  if (action.name === \"Reset\") return initialState;\r\n\r\n  if (action.org === \"services\") {\r\n    const services = [...(state.services || [])];\r\n\r\n    if (!services[action.index]) {\r\n      services[action.index] = { name: \"\", quantity: \"\", unitCost: \"\" };\r\n    }\r\n\r\n    const updatedServices = services.map((item, i) => {\r\n      if (i === action.index) {\r\n        return { ...item, [action.name]: action.values };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    return { ...state, services: updatedServices };\r\n  }\r\n\r\n  if (action.name === \"Add Services\") {\r\n    return {\r\n      ...state,\r\n      services: [\r\n        ...(state?.services || []),\r\n        { name: \"\", quantity: \"\", unitCost: \"\" },\r\n      ],\r\n    };\r\n  }\r\n\r\n  if (action.name === \"Remove Services\") {\r\n    return {\r\n      ...state,\r\n      services: (state.services || []).filter((_, i) => i !== action.index),\r\n    };\r\n  }\r\n\r\n  return { ...state, [action.name]: action.values };\r\n};\r\n\r\nconst DischargeForm = () => {\r\n  const theme = useTheme();\r\n  const [formData, setFromData] = useState(initialState);\r\n  const [formDataError, setFromDataError] = useReducer(\r\n    controllerError,\r\n    initialState\r\n  );\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [openDetail, setOpenDetail] = useState(false);\r\n  const [detailData, setDetailData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.put(\"/Patient/get-nurse-request\", {});\r\n        if (response?.status === 200) {\r\n          const modData =\r\n            response?.data?.length > 0\r\n              ? response?.data?.map(\r\n                  (\r\n                    {\r\n                      patientFirstName,\r\n                      patientMiddleName,\r\n                      patientLastName,\r\n                      ...rest\r\n                    },\r\n                    index\r\n                  ) => ({\r\n                    patientFName: `${patientFirstName} ${patientMiddleName} ${patientLastName}`,\r\n                    id: index + 1,\r\n                    ...rest,\r\n                  })\r\n                )\r\n              : [];\r\n          setRowData(\r\n            modData?.sort(\r\n              (a, b) => new Date(b.createdOn) - new Date(a.createdOn)\r\n            )\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"This is fetch data error: \", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  // Columns definition\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"Card No\", flex: 1 },\r\n    { field: \"patientFName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"patientGender\", headerName: \"Gender\", flex: 1 },\r\n    {\r\n      field: \"totalPrice\",\r\n      headerName: \"Total\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return formatAccounting2(params?.row?.totalPrice);\r\n      },\r\n    },\r\n    {\r\n      field: \"paid\",\r\n      headerName: \"Paid\",\r\n      flex: 1,\r\n      renderCell: (params) => (params.value ? \"✅\" : \"❌\"),\r\n    },\r\n\r\n    { field: \"createdBy\", headerName: \"Created By\", width: 100 },\r\n    {\r\n      field: \"createdOn\",\r\n      headerName: \"Created On\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return renderETDateAtCell(params?.row?.createdOn);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleDetailClose = () => {\r\n    setOpenDetail(false);\r\n    setDetailData([]);\r\n  };\r\n\r\n  const handleDoubleClick = (data) => {\r\n    try {\r\n      const services = (data.row.rquestedServices || [])?.map(\r\n        ({ services, ...rest }) => ({\r\n          service: services,\r\n          ...rest,\r\n          catagory: \"Used Service\",\r\n        })\r\n      );\r\n\r\n      setOpenDetail(true);\r\n\r\n      const dataToSet =\r\n        services.length > 0\r\n          ? services.map((item, index) => ({\r\n              id: index + 1,\r\n              patientFName: data.row.patientFName,\r\n              patientCardNumber: data.row.patientCardNumber,\r\n              ...item, // includes amount, service, catagory\r\n            }))\r\n          : [];\r\n      setDetailData(dataToSet);\r\n    } catch (error) {\r\n      console.error(\"Double-click error: \", error);\r\n      toast.error(\"Unable to open Detail Data.\");\r\n    }\r\n  };\r\n\r\n  const validateMrn = (name, value) => {\r\n    const mrnRegex = /^[0-9]{5,}$/;\r\n    if (!mrnRegex.test(value) && value?.length > 0) {\r\n      setFromDataError({\r\n        name: name,\r\n        values: \"Please insert a valid MRN (at least 5 digits, numbers only).\",\r\n      });\r\n      return false;\r\n    } else {\r\n      setFromDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setFromData(initialState);\r\n    setFromDataError({ name: \"Reset\" });\r\n  };\r\n\r\n  const handleChangeTime = (fieldName, selectedDate) => {\r\n    if (fieldName === \"dischargeDate\") {\r\n      const admissionDate = formData?.admissionDate;\r\n      const dischargeDate = selectedDate;\r\n\r\n      if (admissionDate && dischargeDate < admissionDate) {\r\n        setFromData((prev) => ({\r\n          ...prev,\r\n          [fieldName]: selectedDate,\r\n        }));\r\n        setFromDataError({\r\n          name: fieldName,\r\n          values: `Discharge date cannot be before admission date (${renderETDateAtCell(\r\n            admissionDate\r\n          )})`,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    setFromData((prev) => ({\r\n      ...prev,\r\n      [fieldName]: selectedDate,\r\n    }));\r\n    setFromDataError({ name: fieldName, values: \"\" });\r\n  };\r\n\r\n  const handleChange = (e, index) => {\r\n    if (e.target.name === \"patientCardNumber\") {\r\n      setFromData({\r\n        ...formData,\r\n        patientName: \"\",\r\n        [e.target.name]: e.target.value,\r\n      });\r\n\r\n      validateMrn(e.target.name, e.target.value);\r\n      return;\r\n    }\r\n\r\n    if ([\"quantity\", \"unitCost\", \"name\"]?.includes(e.target.name)) {\r\n      const updated = [...formData?.services];\r\n      updated[index][e.target.name] =\r\n        e.target.name !== \"name\" && e.target.value?.length > 0\r\n          ? parseFloat(Math.abs(e.target.value))\r\n          : e.target.value;\r\n      setFromData((prev) => ({ ...prev, services: updated }));\r\n      if (e.target.name === \"name\") {\r\n        letterOnlyCheck(index, e.target.name, e.target.value);\r\n      } else {\r\n        zeroValueCheck(index, e.target.name, e.target.value);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (e.target.name === \"medicationUse\") {\r\n      setFromData({\r\n        ...formData,\r\n        [e.target.name]:\r\n          e.target.value === \"Yes\"\r\n            ? true\r\n            : e.target.value === \"No\"\r\n            ? false\r\n            : null,\r\n      });\r\n      setFromDataError({ name: e.target.name, values: \"\" });\r\n      return;\r\n    }\r\n    if (e.target.name === \"patientCondition\") {\r\n      letterOnly(e.target.name, e.target.value);\r\n    }\r\n\r\n    if (e.target.name === \"patientName\") {\r\n      setFromData({ ...formData, [e.target.name]: e.target.value });\r\n      setFromDataError({ name: e.target.name, values: \"\" });\r\n      return;\r\n    }\r\n\r\n    setFromData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const letterOnlyCheck = (index, key, value) => {\r\n    const regex = /^[A-Za-z\\s]+$/;\r\n    if (!regex.test(value) && value?.length > 0) {\r\n      setFromDataError({\r\n        name: key,\r\n        index: index,\r\n        values: \"Only letters and spaces allowed.\",\r\n        org: \"services\",\r\n      });\r\n    } else {\r\n      setFromDataError({\r\n        name: key,\r\n        index: index,\r\n        values: \"\",\r\n        org: \"services\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const zeroValueCheck = (index, key, rawValue) => {\r\n    const value = Number(rawValue); // Ensures \"0\" (string) is converted to 0 (number)\r\n\r\n    if (value === 0) {\r\n      setFromDataError({\r\n        org: \"services\",\r\n        index,\r\n        name: key,\r\n        values: \"Zero value is not allowed.\",\r\n      });\r\n    } else {\r\n      // Clear previous error\r\n      setFromDataError({\r\n        org: \"services\",\r\n        index,\r\n        name: key,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const letterOnly = (key, value) => {\r\n    const regex = /^[A-Za-z\\s]+$/;\r\n    if (!regex.test(value) && value?.length > 0) {\r\n      setFromDataError({\r\n        name: key,\r\n        values: \"Only letters and spaces allowed.\",\r\n      });\r\n    } else {\r\n      setFromDataError({\r\n        name: key,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleGetPatientName = async () => {\r\n    if (formData?.patientName?.length <= 0) {\r\n      try {\r\n        setIsFetching(true);\r\n\r\n        if (\r\n          formDataError?.patientCardNumber?.length <= 0 &&\r\n          formData?.patientCardNumber?.length > 0\r\n        ) {\r\n          const response = await fetchPatientName(\r\n            formData?.patientCardNumber\r\n          );\r\n\r\n          if (response?.length > 0) {\r\n            setFromData((prev) => ({ ...prev, patientName: response }));\r\n          } else {\r\n            toast.error(\"Card Number Not Registered.\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch patient data:\", error);\r\n        toast.error(\"Failed to fetch patient data.\");\r\n        setFromData((prev) => ({ ...prev, patientName: \"\" }));\r\n      } finally {\r\n        setIsFetching(false);\r\n      }\r\n    }\r\n  };\r\n  const handleAddService = () => {\r\n    setFromData((prev) => ({\r\n      ...prev,\r\n      services: [\r\n        ...(prev?.services || []),\r\n        { name: \"\", quantity: \"\", unitCost: \"\" },\r\n      ],\r\n    }));\r\n    setFromDataError({ name: \"Add Services\" });\r\n  };\r\n\r\n  const handleRemoveService = (index) => {\r\n    const updated = [...formData?.services];\r\n    setFromData((prev) => ({\r\n      ...prev,\r\n      services: updated.filter((_, i) => i !== index),\r\n    }));\r\n\r\n    setFromDataError({ name: \"Remove Services\", index: index });\r\n  };\r\n\r\n  const totalCost =\r\n    formData?.services?.length > 0\r\n      ? formData?.services?.reduce(\r\n          (acc, item) => acc + item.quantity * item.unitCost,\r\n          0\r\n        )\r\n      : 0;\r\n\r\n  // Effect for updating Bed service based on admission and discharge dates\r\n  useEffect(() => {\r\n    if (formData?.admissionDate && formData?.dischargeDate) {\r\n      const getDateDifference = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const diffTime = end - start;\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;\r\n        return diffDays > 0 ? diffDays : 1;\r\n      };\r\n\r\n      const stayDuration = getDateDifference(\r\n        formData?.admissionDate,\r\n        formData?.dischargeDate\r\n      );\r\n\r\n      setFromData((prev) => {\r\n        const updatedServices = [...(prev.services || [])];\r\n\r\n        const bedServiceIndex = updatedServices.findIndex(\r\n          (service) => service.name === \"Bed\"\r\n        );\r\n\r\n        if (bedServiceIndex !== -1) {\r\n          updatedServices[bedServiceIndex] = {\r\n            ...updatedServices[bedServiceIndex],\r\n            quantity: stayDuration,\r\n          };\r\n        } else {\r\n          updatedServices.unshift({\r\n            name: \"Bed\",\r\n            quantity: stayDuration,\r\n            unitCost: 0,\r\n          });\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          services: updatedServices,\r\n        };\r\n      });\r\n    } else if (!formData?.admissionDate || !formData?.dischargeDate) {\r\n      setFromData((prev) => ({\r\n        ...prev,\r\n        services:\r\n          prev.services?.filter((service) => service.name !== \"Bed\") || [],\r\n      }));\r\n    }\r\n  }, [formData?.admissionDate, formData?.dischargeDate]);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const noServices = Object.entries(formData || {}).filter(\r\n        ([key]) => key !== \"services\"\r\n      );\r\n\r\n      const noServicesError = Object.entries(formDataError || {}).filter(\r\n        ([key]) => key !== \"services\"\r\n      );\r\n\r\n      //1. Check if any non-service field has error\r\n      if (noServicesError.some(([_, value]) => value?.length > 0)) {\r\n        toast.error(\"Please first fix the error.\");\r\n        return;\r\n      }\r\n\r\n      //2. Check if any service field has error\r\n      const hasServiceError = (formDataError?.services || []).some(\r\n        (serviceError) =>\r\n          Object.values(serviceError || {}).some((value) => value?.length > 0)\r\n      );\r\n\r\n      if (hasServiceError) {\r\n        toast.error(\"Please fix errors in service fields.\");\r\n        return;\r\n      }\r\n\r\n      // 3. Check if any non-service field is empty\r\n      const hasEmptyMainFields = noServices.some(\r\n        ([_, value]) => !value || value?.length <= 0\r\n      );\r\n\r\n      if (hasEmptyMainFields) {\r\n        toast.error(\"Please fill the required fields.\");\r\n\r\n        // Dispatch error for each empty main field\r\n        noServices.forEach(([key, value]) => {\r\n          if (!value || value.length <= 0) {\r\n            setFromDataError({\r\n              name: key,\r\n              values: \"Please fill this field\",\r\n            });\r\n          }\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      //4. Check if there is no Service add\r\n      if (formData?.services?.length <= 0) {\r\n        toast.error(\"Please insert at least one service.\");\r\n        return;\r\n      }\r\n\r\n      //5. Check if any service field is empty\r\n      const hasServiceEmpty = (formData?.services || []).some(\r\n        (service, index) =>\r\n          Object.entries(service || {}).some(([field, value]) => {\r\n            const isEmpty = !value || value?.length <= 0;\r\n            if (isEmpty) {\r\n              setFromDataError({\r\n                org: \"services\",\r\n                index,\r\n                name: field,\r\n                values: \"Please fill this field\",\r\n              });\r\n            }\r\n            return isEmpty;\r\n          })\r\n      );\r\n\r\n      if (hasServiceEmpty) {\r\n        toast.error(\"Please insert at least one valid service.\");\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        patientCardNumber: `${Number(formData?.patientCardNumber)}`,\r\n        dischargeDate: formData?.dischargeDate,\r\n        admissionDate: formData?.admissionDate,\r\n        hasMedication: formData?.medicationUse,\r\n        patientCondition: formData?.patientCondition,\r\n        services: formData?.services.map((s) => ({\r\n          service: s.name,\r\n          amount: s.quantity,\r\n          price: s.unitCost,\r\n        })),\r\n      };\r\n\r\n      const response = await api.post(`/Patient/add-nurse-request`, payload);\r\n      if (response?.status === 200) {\r\n        setRefresh((prev) => !prev);\r\n        setFromData(initialState);\r\n        setFromDataError({ name: \"Reset\" });\r\n        toast.success(\"Submitted Successfully.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Submission failed:\", error);\r\n      toast.error(\"Failed to submit. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#f5f7fb\"\r\n            : theme.palette.background.default,\r\n        minHeight: \"100vh\",\r\n        py: 6,\r\n        px: { xs: 2, sm: 4, md: 6 },\r\n      }}\r\n    >\r\n      {/* Form Container */}\r\n      <Paper\r\n        elevation={6}\r\n        sx={{\r\n          p: { xs: 3, sm: 5, md: 6 },\r\n          borderRadius: 4,\r\n          backgroundColor: theme.palette.background.paper,\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          fontWeight={700}\r\n          textAlign=\"center\"\r\n          gutterBottom\r\n        >\r\n          Patient Discharge Summary\r\n        </Typography>\r\n\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} md={4}>\r\n            <TextField\r\n              label=\"Card / MRN Number\"\r\n              fullWidth\r\n              required\r\n              name=\"patientCardNumber\"\r\n              value={formData?.patientCardNumber}\r\n              onChange={handleChange}\r\n              onBlurCapture={handleGetPatientName}\r\n              error={!!formDataError?.patientCardNumber}\r\n              helperText={formDataError?.patientCardNumber}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    {isFetching && <CircularProgress size={24} />}\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={5}>\r\n            <TextField\r\n              label=\"Patient Name\"\r\n              fullWidth\r\n              required\r\n              name=\"patientName\"\r\n              value={formData?.patientName}\r\n              onChange={handleChange}\r\n              error={!!formDataError?.patientName}\r\n              helperText={formDataError?.patientName}\r\n              disabled\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-disabled\": {\r\n                    color: \"rgba(41, 225, 48, 0.71)\",\r\n                    fontWeight: \"bold\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={3}>\r\n            <TextField\r\n              select\r\n              label=\"Medication Use\"\r\n              name=\"medicationUse\"\r\n              fullWidth\r\n              required\r\n              value={\r\n                formData?.medicationUse === null ||\r\n                formData?.medicationUse === \"\"\r\n                  ? \"\"\r\n                  : formData?.medicationUse\r\n                  ? \"Yes\"\r\n                  : \"No\"\r\n              }\r\n              error={!!formDataError?.medicationUse}\r\n              helperText={formDataError?.medicationUse}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <MenuItem value=\"\">-- Select --</MenuItem>\r\n              <MenuItem value=\"Yes\">Yes</MenuItem>\r\n              <MenuItem value=\"No\">No</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={3}>\r\n            <EtDatePicker\r\n              key={formData?.admissionDate || \"admissionDate-date\"}\r\n              label=\"Date of Admission\"\r\n              name=\"admissionDate\"\r\n              fullWidth\r\n              required\r\n              value={\r\n                formData?.admissionDate\r\n                  ? new Date(formData?.admissionDate)\r\n                  : null\r\n              }\r\n              onChange={(e) => handleChangeTime(\"admissionDate\", e)}\r\n              error={!!formDataError?.admissionDate}\r\n              helperText={formDataError?.admissionDate}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6} md={3}>\r\n            <EtDatePicker\r\n              key={formData?.dischargeDate || \"dischargeDate-date\"}\r\n              label=\"Date of Discharge\"\r\n              name=\"dischargeDate\"\r\n              fullWidth\r\n              required\r\n              value={\r\n                formData?.dischargeDate\r\n                  ? new Date(formData?.dischargeDate)\r\n                  : null\r\n              }\r\n              onChange={(e) => handleChangeTime(\"dischargeDate\", e)}\r\n              error={!!formDataError?.dischargeDate}\r\n              helperText={formDataError?.dischargeDate}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              label=\"Patient Condition (e.g., Discharged / Death)\"\r\n              name=\"patientCondition\"\r\n              fullWidth\r\n              required\r\n              value={formData?.patientCondition}\r\n              onChange={handleChange}\r\n              error={!!formDataError?.patientCondition}\r\n              helperText={formDataError?.patientCondition}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider sx={{ my: 4 }} />\r\n\r\n        <Typography variant=\"h6\" fontWeight={600} gutterBottom>\r\n          Services Provided\r\n        </Typography>\r\n\r\n        {formData?.services.map((item, index) => (\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            key={index}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              mb: 1,\r\n              px: 2,\r\n              py: 1.5,\r\n              backgroundColor: theme.palette.action.hover,\r\n              borderRadius: 2,\r\n            }}\r\n          >\r\n            <Grid item xs={12} sm={5} md={4}>\r\n              <TextField\r\n                label=\"Service Name\"\r\n                name=\"name\"\r\n                fullWidth\r\n                required\r\n                value={item?.name}\r\n                onChange={(e) => handleChange(e, index)}\r\n                error={!!formDataError?.services[index]?.name}\r\n                helperText={formDataError?.services[index]?.name}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4} sm={2}>\r\n              <TextField\r\n                label=\"Qty\"\r\n                type=\"number\"\r\n                name=\"quantity\"\r\n                required\r\n                fullWidth\r\n                inputProps={{ min: 0 }}\r\n                onWheel={(e) => e.target.blur()}\r\n                value={item?.quantity}\r\n                onChange={(e) => handleChange(e, index)}\r\n                error={!!formDataError?.services[index]?.quantity}\r\n                helperText={formDataError?.services[index]?.quantity}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4} sm={2}>\r\n              <TextField\r\n                label=\"Unit Cost\"\r\n                type=\"number\"\r\n                name=\"unitCost\"\r\n                required\r\n                fullWidth\r\n                onWheel={(e) => e.target.blur()}\r\n                value={item?.unitCost}\r\n                onChange={(e) => handleChange(e, index)}\r\n                error={!!formDataError?.services[index]?.unitCost}\r\n                helperText={formDataError?.services[index]?.unitCost}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4} sm={2}>\r\n              <Typography fontWeight={500}>\r\n                {formatAccounting(item?.quantity * item?.unitCost)} ብር\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={1}>\r\n              <IconButton\r\n                color=\"error\"\r\n                onClick={() => handleRemoveService(index)}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n\r\n        <Button\r\n          startIcon={<Add />}\r\n          onClick={handleAddService}\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          variant=\"outlined\"\r\n          sx={{\r\n            my: 2,\r\n            textTransform: \"none\",\r\n            borderStyle: \"dashed\",\r\n            fontWeight: 500,\r\n          }}\r\n        >\r\n          Add Service\r\n        </Button>\r\n\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" sx={{ my: 3 }}>\r\n          <Button variant=\"outlined\" color=\"error\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 3 }} />\r\n\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" sx={{ mb: 3 }}>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n            Total: {formatAccounting(totalCost)} ብር\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          size=\"large\"\r\n          onClick={handleSubmit}\r\n          sx={{ py: 1.5, fontWeight: 600 }}\r\n        >\r\n          {isLoading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            \"Submit to Cashier\"\r\n          )}\r\n        </Button>\r\n        <Divider sx={{ mb: 4 }} />\r\n        {/* Table Section */}\r\n        <Typography\r\n          variant=\"h4\"\r\n          fontWeight={700}\r\n          textAlign=\"center\"\r\n          gutterBottom\r\n        >\r\n          Sent Requests\r\n        </Typography>\r\n        <Paper\r\n          elevation={6}\r\n          sx={{\r\n            borderRadius: 4,\r\n            backgroundColor: theme.palette.background.paper,\r\n            mt: 5,\r\n          }}\r\n        >\r\n          <DataGrid\r\n            rows={rowData}\r\n            columns={columns}\r\n            autoHeight\r\n            sx={{\r\n              backgroundColor: theme.palette.background.default,\r\n              borderRadius: 2,\r\n              minWidth: 320,\r\n            }}\r\n            onRowDoubleClick={handleDoubleClick}\r\n            localeText={{\r\n              noRowsLabel: \"No Nurse Request\",\r\n            }}\r\n          />\r\n        </Paper>\r\n      </Paper>\r\n      <PatientTransactionsModal\r\n        open={openDetail}\r\n        onClose={handleDetailClose}\r\n        rows={detailData}\r\n      />\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DischargeForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\nconst EditCreditUsers = ({\r\n  open,\r\n  onClose,\r\n  creditUserData,\r\n  onSave,\r\n  isloading,\r\n}) => {\r\n  const [editedData, setEditedData] = useState(() =>\r\n    creditUserData !== undefined ? { ...creditUserData } : {}\r\n  );\r\n\r\n  useEffect(() => {\r\n    setEditedData(creditUserData);\r\n  }, [creditUserData]);\r\n\r\n  const handleChange = (e) => {\r\n    setEditedData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onSave({ editedData: editedData, message: \"Edit\" });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          onClose(); // Reset and close the modal\r\n        }\r\n      }}\r\n      maxWidth=\"sm\"\r\n      disableEnforceFocus\r\n      BackdropProps={{ \"aria-hidden\": false }}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Edit Credit Usesr</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Employee ID\"\r\n          name=\"employeeID\"\r\n          fullWidth\r\n          value={editedData?.employeeID || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Name\"\r\n          name=\"employeeName\"\r\n          fullWidth\r\n          value={editedData?.employeeName || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Phone\"\r\n          name=\"employeePhone\"\r\n          fullWidth\r\n          value={editedData?.employeePhone || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Email\"\r\n          name=\"employeeEmail\"\r\n          fullWidth\r\n          value={editedData?.employeeEmail || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"inherit\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n          {isloading ? <CircularProgress size={24} color=\"inherit\" /> : \"Save\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditCreditUsers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Grid,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { CancelPresentationTwoTone } from \"@mui/icons-material\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport api from \"../utils/api\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\nimport EditCreditUsers from \"./EditCreditUsers\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nconst OrgUploadManager = () => {\r\n  const [fileData, setFileData] = useState([]);\r\n  const [SearchData, setSearchData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editData, setEditData] = useState(null);\r\n  const [editLoading, setEditloading] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [fileLoading, setFileLoading] = useState(false);\r\n  const [searching, SetSearching] = useState(false);\r\n  const [isConfOpen, setIsConfOpen] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const option = [\"New\", \"Extend\"];\r\n  const [formData, setFormData] = useState({ organization: \"\", option: \"\" });\r\n  const [org, setOrg] = useState([]);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleFileUpload = (event) => {\r\n    try {\r\n      setFileLoading(true);\r\n      setSearchData([]);\r\n      setSearchKey(\"\");\r\n      if (!formData.organization) {\r\n        toast.error(\"Please First Select Organization.\");\r\n        event.target.value = null;\r\n        return;\r\n      } else if (!formData.option) {\r\n        toast.error(\"Please First Select Option.\");\r\n        event.target.value = null;\r\n        return;\r\n      }\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const sheet = workbook.Sheets[sheetName];\r\n        const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n        const withIds = parsedData.map((prev, index) => ({\r\n          ...prev,\r\n          id: index + 1,\r\n          workPlace: formData?.organization,\r\n          option: formData?.option,\r\n        }));\r\n\r\n        setFileData(withIds);\r\n        event.target.value = null;\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setFileLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      SetSearching(true);\r\n      if (!searchKey) {\r\n        toast.error(\"Please insert something to search field\");\r\n\r\n        return;\r\n      }\r\n\r\n      const response = await api.get(`/Organiztion/get-workers/${searchKey}`);\r\n      if (response?.data?.length === 0) {\r\n        toast.info(`Employee ID : ${searchKey} not Found.`);\r\n      }\r\n      setSearchData(response?.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Unable to search.\");\r\n    } finally {\r\n      SetSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadToDatabase = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post(\"/Organiztion/add-workers\", {\r\n        employeeID: fileData.map((Item) => Item?.employeeID),\r\n        employeeName: fileData.map((Item) => Item?.employeeName),\r\n        employeePhone: fileData.map((Item) => Item?.employeePhone),\r\n        employeeEmail: fileData.map((Item) => Item?.employeeEmail),\r\n        isExtend: formData?.option === \"Extend\" ? true : false,\r\n        workplace: formData?.organization,\r\n        uploadedBy: tokenvalue?.name,\r\n      });\r\n      toast.success(\"Upload Successful.\");\r\n      setRefresh((prev) => !prev);\r\n      setFileData([]);\r\n      setFormData({ organization: \"\", option: \"\" });\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      toast.error(\"Upload error.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEmp = async () => {\r\n      try {\r\n        const response = await api.get(`/Organiztion/get-workers`);\r\n        setData(response?.data <= 0 ? new Array() : response?.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(error?.response?.data || \"Failde To Load list.\");\r\n      }\r\n    };\r\n\r\n    fetchEmp();\r\n  }, [refresh]);\r\n\r\n  const handleDeleteAll = () => {\r\n    setFileData([]);\r\n    setFormData({ organization: \"\", option: \"\" });\r\n    setSearchData([]);\r\n    setSearchKey(\"\");\r\n  };\r\n\r\n  const handleEdit = async (params) => {\r\n    try {\r\n      if (params.message === \"Edit\") {\r\n        if (fileData.length > 0) {\r\n          const updated = fileData?.map((item) =>\r\n            item.id === params?.editedData?.id\r\n              ? { ...item, ...params?.editedData }\r\n              : item\r\n          );\r\n          setFileData(updated);\r\n        }\r\n\r\n        setEditloading(true);\r\n      } else {\r\n        setEditing(true);\r\n        setEditData(params?.row);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is handle Edit Error: \", error);\r\n    } finally {\r\n      setEditloading(false);\r\n    }\r\n  };\r\n\r\n  const handlConfirm = async (params) => {\r\n    try {\r\n      if (params.message === \"Delete\") {\r\n        if (fileData.length > 0) {\r\n          setFileData((prev) =>\r\n            prev.filter((item) => item.employeeID !== params?.userData)\r\n          );\r\n        }\r\n\r\n        setDeleteLoading(true);\r\n        setIsConfOpen(false);\r\n        setDeleteId(null);\r\n      } else {\r\n        setIsConfOpen(true);\r\n        setDeleteId(params?.row?.employeeID);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is handle confirm Error: \", error);\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"employeeID\", headerName: \"Employee ID\", flex: 1 },\r\n    { field: \"employeeName\", headerName: \"Employee Name\", flex: 1 },\r\n    { field: \"employeePhone\", headerName: \"Phone\", flex: 1 },\r\n    { field: \"employeeEmail\", headerName: \"Email\", flex: 1 },\r\n    { field: \"workPlace\", headerName: \"Organization\", flex: 1 },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            onClick={() => handleEdit(params)}\r\n            color=\"info\"\r\n            aria-label=\"edit\"\r\n            className=\"text-info\"\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={() => handlConfirm(params)}\r\n            aria-label=\"delete\"\r\n            className=\"text-danger\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const CustomErrorOverlay = () => {\r\n    toast.error(\"Id Missing\");\r\n    return (\r\n      <div style={{ padding: \"20px\", color: \"red\" }}>\r\n        An error occurred: Id Missing\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //Fetch Organization with agreement\r\n  useEffect(() => {\r\n    const fetchORG = async () => {\r\n      try {\r\n        const response = await api.get(`/Organiztion/Organization`);\r\n        if (response?.status === 200 || response?.status === 201) {\r\n          setOrg(response?.data?.map((item) => item.organization));\r\n        }\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchORG();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setSearchData([]);\r\n    setSearchKey(\"\");\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Credit Users\r\n      </Typography>\r\n      <Paper sx={{ padding: 2, marginBottom: 2 }}>\r\n        <Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Organization\"\r\n                variant=\"filled\"\r\n                name=\"organization\"\r\n                value={formData.organization}\r\n                onChange={handleChange}\r\n                margin=\"normal\"\r\n                required\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: \"primary.neutral\",\r\n                    \"&.Mui-focused\": {\r\n                      color: \"secondary.main\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {org.map((item, index) => (\r\n                  <MenuItem key={index} value={item}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Option\"\r\n                name=\"option\"\r\n                variant=\"filled\"\r\n                value={formData.option}\r\n                onChange={handleChange}\r\n                margin=\"normal\"\r\n                required\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: \"primary.neutral\",\r\n                    \"&.Mui-focused\": {\r\n                      color: \"secondary.main\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {option.map((item, index) => (\r\n                  <MenuItem key={index} value={item}>\r\n                    {item}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={5}\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <input\r\n                accept=\".xlsx, .xls\"\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  handleFileUpload(e);\r\n                }}\r\n                style={{ display: \"none\" }}\r\n                id=\"upload-excel\"\r\n              />\r\n              <label htmlFor=\"upload-excel\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color={\r\n                    theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"\r\n                  }\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  {fileLoading ? (\r\n                    <CircularProgress size={24} color=\"inherit\" />\r\n                  ) : (\r\n                    \"Upload Excel\"\r\n                  )}\r\n                </Button>\r\n              </label>\r\n              <IconButton\r\n                onClick={handleDeleteAll}\r\n                color=\"error\"\r\n                sx={{ marginLeft: 2 }}\r\n              >\r\n                <CancelPresentationTwoTone />\r\n              </IconButton>\r\n              <Button\r\n                variant=\"contained\"\r\n                color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n                onClick={handleUploadToDatabase}\r\n                sx={{ marginLeft: 2 }}\r\n                disabled={fileData.length === 0}\r\n              >\r\n                {loading ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Upload to Database\"\r\n                )}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2} sx={{ marginTop: \"10px\" }}>\r\n            <Grid item xs={11}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"text\"\r\n                label=\"Search By Employee ID\"\r\n                value={searchKey}\r\n                onChange={(e) => {\r\n                  setSearchData([]);\r\n                  setSearchKey(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={1}\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n                onClick={() => handleSearch()}\r\n              >\r\n                {searching ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Search\"\r\n                )}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Typography variant=\"h6\" sx={{ m: \"15px 0 5px 20px\" }}>\r\n            {SearchData.length > 0\r\n              ? \"Viewing Search Result\"\r\n              : fileData.length > 0\r\n              ? \"Viewing from File\"\r\n              : \"Viewing Registered\"}\r\n          </Typography>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper sx={{ height: 400 }}>\r\n        <DataGrid\r\n          rows={\r\n            SearchData.length > 0\r\n              ? SearchData\r\n              : fileData.length <= 0\r\n              ? data\r\n              : fileData\r\n          }\r\n          columns={columns}\r\n          // getRowId={(row) => row.id}\r\n          // error={error}\r\n          components={{\r\n            ErrorOverlay: CustomErrorOverlay,\r\n          }}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Paper>\r\n      <EditCreditUsers\r\n        open={editing}\r\n        onClose={() => {\r\n          setEditing(false);\r\n          setEditData(null);\r\n          setEditloading(false);\r\n        }}\r\n        creditUserData={editData}\r\n        onSave={handleEdit}\r\n        isloading={editLoading}\r\n      />\r\n      <ConfirmationModal\r\n        isOpen={isConfOpen}\r\n        onClose={() => {\r\n          setIsConfOpen(false);\r\n          setDeleteId(null);\r\n          setDeleteLoading(false);\r\n        }}\r\n        onConfirm={handlConfirm}\r\n        userData={deleteId}\r\n        loading={deleteLoading}\r\n      />\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrgUploadManager;\r\n","import { Box, Button, TextField } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Header from \"../../components/Header\";\r\n\r\nconst Form = () => {\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  const handleFormSubmit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"CREATE USER\" subtitle=\"Create a New User Profile\" />\r\n\r\n      <Formik\r\n        onSubmit={handleFormSubmit}\r\n        initialValues={initialValues}\r\n        validationSchema={checkoutSchema}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Box\r\n              display=\"grid\"\r\n              gap=\"30px\"\r\n              gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n              sx={{\r\n                \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n              }}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.firstName}\r\n                name=\"firstName\"\r\n                error={!!touched.firstName && !!errors.firstName}\r\n                helperText={touched.firstName && errors.firstName}\r\n                sx={{ gridColumn: \"span 2\" }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.lastName}\r\n                name=\"lastName\"\r\n                error={!!touched.lastName && !!errors.lastName}\r\n                helperText={touched.lastName && errors.lastName}\r\n                sx={{ gridColumn: \"span 2\" }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.email}\r\n                name=\"email\"\r\n                error={!!touched.email && !!errors.email}\r\n                helperText={touched.email && errors.email}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Contact Number\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.contact}\r\n                name=\"contact\"\r\n                error={!!touched.contact && !!errors.contact}\r\n                helperText={touched.contact && errors.contact}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Address 1\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.address1}\r\n                name=\"address1\"\r\n                error={!!touched.address1 && !!errors.address1}\r\n                helperText={touched.address1 && errors.address1}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                type=\"text\"\r\n                label=\"Address 2\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                value={values.address2}\r\n                name=\"address2\"\r\n                error={!!touched.address2 && !!errors.address2}\r\n                helperText={touched.address2 && errors.address2}\r\n                sx={{ gridColumn: \"span 4\" }}\r\n              />\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\r\n              <Button type=\"submit\" color=\"secondary\" variant=\"contained\">\r\n                Create New User\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst phoneRegExp =\r\n  /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\r\n\r\nconst checkoutSchema = yup.object().shape({\r\n  firstName: yup.string().required(\"required\"),\r\n  lastName: yup.string().required(\"required\"),\r\n  email: yup.string().email(\"invalid email\").required(\"required\"),\r\n  contact: yup\r\n    .string()\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .required(\"required\"),\r\n  address1: yup.string().required(\"required\"),\r\n  address2: yup.string().required(\"required\"),\r\n});\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  contact: \"\",\r\n  address1: \"\",\r\n  address2: \"\",\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  CircularProgress,\r\n  useTheme,\r\n} from \"@mui/material\";\r\n\r\nconst contactMethods = [\"EMAIL\", \"SMS\"];\r\n\r\nconst EditStaffModal = ({ open, onClose, staffData, onSave, isloading }) => {\r\n  const [editedData, setEditedData] = useState(() =>\r\n    staffData !== undefined ? { ...staffData } : {}\r\n  );\r\n\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    setEditedData(staffData);\r\n  }, [staffData]);\r\n\r\n  const handleChange = (e) => {\r\n    setEditedData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onSave(editedData);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          onClose(); // Reset and close the modal\r\n        }\r\n      }}\r\n      maxWidth=\"sm\"\r\n      disableEnforceFocus\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Edit Staff</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Employee ID\"\r\n          name=\"employeeID\"\r\n          fullWidth\r\n          value={editedData?.employeeID || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Name\"\r\n          name=\"employeeName\"\r\n          fullWidth\r\n          value={editedData?.employeeName || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Phone\"\r\n          name=\"employeePhone\"\r\n          fullWidth\r\n          value={editedData?.employeePhone || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Email\"\r\n          name=\"employeeEmail\"\r\n          fullWidth\r\n          value={editedData?.employeeEmail || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Assigned As\"\r\n          name=\"assignedAs\"\r\n          fullWidth\r\n          value={editedData?.assignedAs || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Assigned By\"\r\n          name=\"assignedBy\"\r\n          fullWidth\r\n          value={editedData?.assignedBy || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          select\r\n          margin=\"dense\"\r\n          label=\"Contact Method\"\r\n          name=\"contactMethod\"\r\n          fullWidth\r\n          value={editedData?.contactMethod || \"\"}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {contactMethods.map((method) => (\r\n            <MenuItem key={method} value={method}>\r\n              {method}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"error\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n        >\r\n          {isloading ? <CircularProgress size={24} color=\"inherit\" /> : \"Save\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditStaffModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Divider,\r\n  Alert,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\nimport { formatAccounting } from \"../pages/hospitalpayment/HospitalPayment\";\r\nfunction ReversalModal({ open, onClose, receipt, onConfirm, loading, theme }) {\r\n  const [reason, setReason] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const letterNumberCheck = (value) => {\r\n    const comp = /^[a-zA-Z0-9\\u1200-\\u137F\\s]+$/;\r\n\r\n    return !comp.test(value) && value.length > 0;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    try {\r\n      if (!reason.trim()) {\r\n        setError(\"Reversal reason is required.\");\r\n        return;\r\n      }\r\n\r\n      if (reason.length < 10) {\r\n        setError(\"Please describe it using more than 10 characters.\");\r\n        return;\r\n      }\r\n\r\n      if (letterNumberCheck(reason)) {\r\n        setError(\"Please insert letters or numbers only.\");\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        paymentRefNo: receipt?.referenceNo,\r\n        paymentType: receipt?.paymentType || \"-\",\r\n        cardNumber: receipt?.patientCardNumber || \"-\",\r\n        amount: [\r\n          {\r\n            amount: -receipt?.paymentAmount || 0,\r\n            purpose: receipt?.paymentReason || \"-\",\r\n          },\r\n        ],\r\n        description: reason || \"-\",\r\n        channel: receipt?.paymentChannel || \"-\",\r\n        organization: receipt?.patientWorkingPlace || \"-\",\r\n        paymentVerifingID: receipt?.paymentVerifingID || \"-\",\r\n        patientWorkID: receipt?.patientWorkID || \"-\",\r\n        reverse: true,\r\n      };\r\n\r\n      onConfirm(payload);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setReason(\"\");\r\n    setError(\"\");\r\n    onClose();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    try {\r\n      setReason(e.target.value);\r\n    } catch (error) {\r\n      console.error(\"This is handle change error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          handleClose();\r\n        }\r\n      }}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      disableEnforceFocus\r\n    >\r\n      <DialogTitle>Reversal Request</DialogTitle>\r\n      <DialogContent>\r\n        <Box\r\n          mb={3}\r\n          p={2}\r\n          borderRadius={2}\r\n          sx={{ boxShadow: \"inset 0px 0px 3px 2px #0000008a\" }}\r\n          bgcolor={theme.palette.mode === \"light\" && \"#f9f9f9\"}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            📄 Receipt Summary\r\n          </Typography>\r\n\r\n          <Box display=\"flex\" justifyContent=\"space-between\" py={0.5}>\r\n            <Typography color=\"text.secondary\">Receipt No:</Typography>\r\n            <Typography fontWeight={600}>{receipt?.referenceNo}</Typography>\r\n          </Box>\r\n\r\n          <Box display=\"flex\" justifyContent=\"space-between\" py={0.5}>\r\n            <Typography color=\"text.secondary\">Patient Name:</Typography>\r\n            <Typography fontWeight={600}>{receipt?.patientName}</Typography>\r\n          </Box>\r\n\r\n          <Box display=\"flex\" justifyContent=\"space-between\" py={0.5}>\r\n            <Typography color=\"text.secondary\">Payment Reason:</Typography>\r\n            <Typography fontWeight={500}>{receipt?.paymentReason}</Typography>\r\n          </Box>\r\n\r\n          <Box display=\"flex\" justifyContent=\"space-between\" py={0.5}>\r\n            <Typography color=\"text.secondary\">Amount Paid:</Typography>\r\n            <Typography fontWeight={700} color=\"green\">\r\n              {formatAccounting(receipt?.paymentAmount)}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box display=\"flex\" justifyContent=\"space-between\" py={0.5}>\r\n            <Typography color=\"text.secondary\">Date:</Typography>\r\n            <Typography fontStyle=\"italic\" fontWeight={500}>\r\n              {renderETDateAtCell(receipt?.registeredOn)}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Box mt={5}>\r\n          <TextField\r\n            label=\"Reason for Reversal\"\r\n            multiline\r\n            fullWidth\r\n            rows={3}\r\n            required\r\n            //value={reason}\r\n            onChange={(e) => handleChange(e)}\r\n            InputProps={{\r\n              sx: {\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              sx: {\r\n                color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        {error && (\r\n          <Box mt={2}>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"inherit\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          onClick={() => handleSubmit()}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            \"Confirm Reversal\"\r\n          )}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ReversalModal;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport ReversalModal from \"./ReversalModal\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport api from \"../utils/api\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\nimport { formatAccounting2 } from \"../pages/hospitalpayment/HospitalPayment\";\r\n\r\nconst ReceiptReversalManager = () => {\r\n  const [searchRef, setSearchRef] = useState(\"\");\r\n  const [filteredReceipts, setFilteredReceipts] = useState([]);\r\n  const [selectedReceipt, setSelectedReceipt] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [reversalLoad, setReversalLoad] = useState(false);\r\n  const [errorM, setErrorM] = useState(\"\");\r\n  const [isCalcul, setIsCalcul] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  const ReceiptRegex = /^[a-zA-Z0-9-]+$/;\r\n\r\n  const validateReceipt = (value) => {\r\n    if (!ReceiptRegex.test(value) && value?.length > 0) {\r\n      setErrorM(\"Please Insert Valid Receipt Number.\");\r\n    } else {\r\n      setErrorM(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      if (searchRef?.length <= 0) {\r\n        toast.error(\"Please Insert Reference Number First.\");\r\n        return;\r\n      }\r\n\r\n      if (!!errorM) {\r\n        toast.error(\"Please Insert (VALID) Reference Number.\");\r\n        return;\r\n      }\r\n      setFilteredReceipts([]);\r\n      const response = await api.put(\"/Payment/payment-by-refno\", {\r\n        paymentId: searchRef,\r\n      });\r\n      const modData =\r\n        response?.data?.length > 0\r\n          ? response?.data?.map(({ rowId, ...rest }) => ({\r\n              id: rowId,\r\n              ...rest,\r\n            }))\r\n          : [];\r\n      if (modData?.length <= 0) {\r\n        toast.info(\"Data not found.\");\r\n        return;\r\n      }\r\n\r\n      setFilteredReceipts(modData);\r\n    } catch (error) {\r\n      console.error(\"This is search error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Unable to search.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOpenModal = async () => {\r\n    try {\r\n      setIsCalcul(true);\r\n      if (filteredReceipts?.length <= 0) {\r\n        toast.error(\"No Data.\");\r\n        return;\r\n      }\r\n      const result = await filteredReceipts.reduce((acc, curr) => {\r\n        for (const key in curr) {\r\n          if (key === \"paymentAmount\") {\r\n            acc.paymentAmount = (acc.paymentAmount || 0) + curr.paymentAmount;\r\n          } else if (key === \"paymentReason\") {\r\n            acc.paymentReason = acc.paymentReason\r\n              ? acc.paymentReason + \", \" + curr.paymentReason\r\n              : curr.paymentReason;\r\n          } else {\r\n            acc[key] = acc[key] || curr[key];\r\n          }\r\n        }\r\n        return acc;\r\n      }, {});\r\n      setSelectedReceipt(result);\r\n      setIsCalcul(false);\r\n      setModalOpen(true);\r\n      return;\r\n    } catch (error) {\r\n      console.error(\"This is handle Open Modal handler Error: \", error);\r\n    } finally {\r\n      setIsCalcul(false);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalOpen(false);\r\n    setSelectedReceipt(null);\r\n    setReversalLoad(false);\r\n  };\r\n\r\n  const handleReversal = async (data) => {\r\n    try {\r\n      setReversalLoad(true);\r\n\r\n      const response = await api.post(\"/Payment/add-payment\", data, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response?.status === 200) {\r\n        toast.success(\"Transaction Reversed Successfully.\");\r\n        setModalOpen(false);\r\n        setFilteredReceipts([]);\r\n        setSearchRef(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is reversal handler error: \", error);\r\n      toast.error(\r\n        error?.response?.data?.msg || \"Something went wrong! Unable to reverse.\"\r\n      );\r\n    } finally {\r\n      setReversalLoad(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"referenceNo\", headerName: \"Receipt No\", flex: 1 },\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Patient\", flex: 1 },\r\n    {\r\n      field: \"paymentAmount\",\r\n      headerName: \"Amount\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return formatAccounting2(params?.row?.paymentAmount);\r\n      },\r\n    },\r\n    { field: \"paymentType\", headerName: \"Type\", flex: 1 },\r\n    { field: \"paymentReason\", headerName: \"Reason\", flex: 1 },\r\n    {\r\n      field: \"registeredOn\",\r\n      headerName: \"Date\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return renderETDateAtCell(params?.row?.registeredOn);\r\n      },\r\n    },\r\n    {\r\n      field: \"Status\",\r\n      headerName: \"Status\",\r\n      flex: 1,\r\n      renderCell: (params) =>\r\n        params?.row?.isReversed && (\r\n          <p\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              padding: 0,\r\n              marginTop: \"0\",\r\n              color: \"red\",\r\n              gap: \"3px\",\r\n            }}\r\n          >\r\n            <LockIcon color=\"error\" fontSize=\"small\" />\r\n            <span>Reversed</span>\r\n          </p>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Receipt Reversal\r\n      </Typography>\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n        <TextField\r\n          label=\"Search by Reference\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchRef}\r\n          onChange={(e) => {\r\n            setSearchRef(e.target.value);\r\n            validateReceipt(e.target.value);\r\n          }}\r\n          error={!!errorM}\r\n          helperText={errorM}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          disabled={isLoading}\r\n          onClick={() => handleSearch()}\r\n        >\r\n          {isLoading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            \"Search\"\r\n          )}\r\n        </Button>\r\n      </Box>\r\n      <Box justifySelf={\"flex-end\"} sx={{ margin: \"10px\" }}>\r\n        {isCalcul ? (\r\n          <CircularProgress size={24} color=\"inherit\" />\r\n        ) : (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"warning\"\r\n            onClick={() => handleOpenModal()}\r\n            disabled={\r\n              isCalcul ||\r\n              filteredReceipts?.some((item) => item.isReversed === true)\r\n            }\r\n          >\r\n            Reverse\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <DataGrid\r\n        rows={filteredReceipts}\r\n        columns={columns}\r\n        loading={isLoading}\r\n        autoHeight\r\n        sx={{ minWidth: 320 }}\r\n      />\r\n\r\n      <ReversalModal\r\n        open={modalOpen}\r\n        onClose={handleModalClose}\r\n        receipt={selectedReceipt}\r\n        onConfirm={handleReversal}\r\n        loading={reversalLoad}\r\n        theme={theme}\r\n      />\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReceiptReversalManager;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Box, Button, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport DownloadOutlinedIcon from \"@mui/icons-material/DownloadOutlined\";\r\nimport CreditCardIcon from \"@mui/icons-material/CreditCard\";\r\nimport PointOfSaleIcon from \"@mui/icons-material/PointOfSale\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\r\nimport {\r\n  Header,\r\n  LineChart,\r\n  GeographyChart,\r\n  BarChart,\r\n  StatBox,\r\n  ProgressCircle,\r\n} from \"../../components\";\r\n\r\nimport { getTokenValue } from \"../../services/user_service\";\r\nimport api from \"../../utils/api\";\r\nimport jsPDF from \"jspdf\";\r\nimport { useRef } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n// Formatter functions\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"ETB\",\r\n  minimumFractionDigits: 2,\r\n});\r\n\r\nconst formatAccounting = (num) => {\r\n  const formatted = formatter.format(Math.abs(num));\r\n  return num < 0 ? `(${formatted})` : formatted;\r\n};\r\nconst tokenValue = getTokenValue();\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const dashboardRef = useRef(null);\r\n\r\n  const handleDownloadPDF = async () => {\r\n    setIsGenerating(true);\r\n    const doc = new jsPDF({\r\n      orientation: \"landscape\",\r\n      unit: \"mm\",\r\n      format: \"a4\",\r\n    });\r\n\r\n    const element = dashboardRef.current;\r\n    const options = {\r\n      scale: 2,\r\n      useCORS: true,\r\n      logging: true,\r\n      backgroundColor: colors.primary[400],\r\n    };\r\n\r\n    try {\r\n      const canvas = await html2canvas(element, options);\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdfWidth = doc.internal.pageSize.getWidth();\r\n      const pdfHeight = doc.internal.pageSize.getHeight();\r\n      const imgWidth = pdfWidth - 20;\r\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n\r\n      doc.setFontSize(20);\r\n      doc.setTextColor(colors.blueAccent[500]);\r\n      doc.text(\"Hospital Revenue Dashboard\", pdfWidth / 2, 15, {\r\n        align: \"center\",\r\n      });\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(100);\r\n      doc.text(\r\n        `Generated on: ${new Date().toLocaleString()}`,\r\n        pdfWidth / 2,\r\n        22,\r\n        { align: \"center\" }\r\n      );\r\n      doc.text(`Generated by: ${tokenValue?.name}`, pdfWidth / 2, 28, {\r\n        align: \"center\",\r\n      });\r\n\r\n      doc.addImage(imgData, \"PNG\", 10, 35, imgWidth, imgHeight);\r\n\r\n      doc.setFontSize(10);\r\n      doc.setTextColor(150);\r\n      doc.text(\"© 2023 Hospital Payment System\", pdfWidth / 2, pdfHeight - 10, {\r\n        align: \"center\",\r\n      });\r\n\r\n      doc.save(`Dashboard_Report_${new Date().toISOString().slice(0, 10)}.pdf`);\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [totalUnc, setTotalUnc] = useState(0);\r\n  const [todayTotal, setTodayTotal] = useState(0);\r\n  // const [yesterdayTotal, setYesterdayTotal] = useState(0);\r\n  const [trend, setTrend] = useState(0);\r\n  const [trendpercent, setTrendPercent] = useState(0);\r\n\r\n  const [transactionCountBy, setTransactionCountBy] = useState({});\r\n  // const [totalUncollectedbycash, setTotalUncollectedbycash] = useState([]);\r\n  const [pateintCount, setPatientcount] = useState({});\r\n  const [collectionbycashier, setCollectionbycashier] = useState([]);\r\n  // const [lastCollectedOn, setLastCollectedOn] = useState(\"\");\r\n  const [totalCollected, setTotalCollected] = useState(0);\r\n\r\n\r\n  const { today, collectionnStartDate } = useMemo(() => {\r\n    const today = new Date();\r\n    const startDate = new Date(today);\r\n    startDate.setDate(today.getDate() - 30);\r\n    return { today, collectionnStartDate: startDate };\r\n  }, []);\r\n\r\n  const startDate = new Date(today);\r\n  startDate.setDate(today.getDate() - 7);\r\n  const yesterday = new Date(today);\r\n  yesterday.setDate(today.getDate() - 1);\r\n\r\n  const fetchCollectedData = async () => {\r\n    try {\r\n      const response2 = await api.put(\"/Collection/Get-all-Collection\", {\r\n        startDate: collectionnStartDate.toISOString().split(\"T\")[0],\r\n        endDate: today.toISOString().split(\"T\")[0],\r\n        user: tokenValue?.name,\r\n        isCollected: 0,\r\n      });\r\n\r\n      // Group collected data by cashier and find their last collected date\r\n      const collectedByCashier = response2?.data\r\n        ? response2?.data?.reduce((acc, item) => {\r\n            if (\r\n              !acc[item.casher] ||\r\n              new Date(item.collectedOn) > new Date(acc[item.casher].date)\r\n            ) {\r\n              acc[item.casher] = {\r\n                date: item.collectedOn,\r\n                amount: parseFloat(item.collectedAmount || 0),\r\n              };\r\n            }\r\n            return acc;\r\n          }, {})\r\n        : [];\r\n\r\n      // Calculate total collected across all cashiers\r\n      const totalCollected = response2?.data\r\n        ? response2?.data?.reduce(\r\n            (acc, item) => acc + parseFloat(item.collectedAmount || 0),\r\n            0\r\n          )\r\n        : [];\r\n\r\n      return {\r\n        collectedByCashier,\r\n        totalCollected: totalCollected || 0,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching collected data:\", error);\r\n      return { collectedByCashier: {}, totalCollected: 0 };\r\n    }\r\n  };\r\n\r\n  const fetchUncollected = async () => {\r\n    try {\r\n      const response1 = await api.get(`/Collection/rpt-uncollected`);\r\n\r\n      const uncollectedData = response1?.data;\r\n\r\n      const uncollected = uncollectedData\r\n        ? uncollectedData?.reduce((acc, payment) => {\r\n            const { cashier, cashAmount } = payment;\r\n            acc[cashier] = (acc[cashier] || 0) + parseFloat(cashAmount);\r\n            return acc;\r\n          }, {})\r\n        : [];\r\n\r\n      const mapp = Object.entries(uncollected).map(([key, value]) => ({\r\n        cashier: key,\r\n        amount: value,\r\n      }));\r\n\r\n      const totalUnc = Object.values(uncollected)?.reduce(\r\n        (acc, value) => acc + value,\r\n        0\r\n      );\r\n\r\n      const { collectedByCashier, totalCollected } = await fetchCollectedData();\r\n\r\n      // Map each cashier's uncollected amount with their specific last collected date\r\n      const transform2 = mapp.map((prev) => ({\r\n        ...prev,\r\n        date: collectedByCashier[prev.cashier]?.date || null,\r\n        collectedAmount: collectedByCashier[prev.cashier]?.amount || 0,\r\n      }));\r\n\r\n      setCollectionbycashier(transform2);\r\n      setTotalUnc(totalUnc);\r\n      // setTotalUncollectedbycash(mapp);\r\n      setTotalCollected(totalCollected);\r\n    } catch (error) {\r\n      console.error(\"Error fetching uncollected data:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch uncollected data\r\n  useEffect(() => {\r\n    fetchUncollected();\r\n  }, [collectionnStartDate, tokenValue?.name]);\r\n\r\n  // Fetch recent transactions\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.put(\"/Payment/Get-all-Payment\", {\r\n          startDate: startDate.toISOString().split(\"T\")[0],\r\n          endDate: today.toISOString().split(\"T\")[0],\r\n          user: tokenValue?.name,\r\n        });\r\n\r\n        const recentPayments = response?.data\r\n          ? response?.data?.filter((payment) => {\r\n              const paymentDate = new Date(payment.registeredOn)\r\n                .toISOString()\r\n                .split(\"T\")[0];\r\n              return (\r\n                paymentDate >= startDate.toISOString().split(\"T\")[0] &&\r\n                paymentDate <= today.toISOString().split(\"T\")[0]\r\n              );\r\n            })\r\n          : [];\r\n\r\n        const summary = recentPayments\r\n          .filter((item) => item.paymentType.toLowerCase() !== \"free of charge\")\r\n          .reduce((acc, payment) => {\r\n            const { paymentType, paymentAmount } = payment;\r\n            acc[paymentType] =\r\n              (acc[paymentType] || 0) + parseFloat(paymentAmount);\r\n            return acc;\r\n          }, {});\r\n\r\n        const totalSum = Object.values(summary).reduce(\r\n          (acc, value) => acc + value,\r\n          0\r\n        );\r\n\r\n        // Today's data\r\n        const todayDateStr = today.toISOString().split(\"T\")[0];\r\n\r\n        const todayPayments = recentPayments.filter((payment) => {\r\n          return (\r\n            payment.registeredOn?.split(\"T\")[0] === todayDateStr &&\r\n            payment.paymentType.toLowerCase() !== \"free of charge\"\r\n          );\r\n        });\r\n\r\n        // Yesterday's data\r\n        const yesterdayDateStr = yesterday.toISOString().split(\"T\")[0];\r\n        const yesterdayPayments = recentPayments.filter((payment) => {\r\n          return (\r\n            payment.registeredOn?.split(\"T\")[0] === yesterdayDateStr &&\r\n            payment.paymentType.toLowerCase() !== \"free of charge\"\r\n          );\r\n        });\r\n\r\n        // Amount calculations\r\n        const todayTotal = todayPayments.reduce(\r\n          (acc, payment) => acc + parseFloat(payment.paymentAmount),\r\n          0\r\n        );\r\n\r\n        const yesterdayTotal = yesterdayPayments.reduce(\r\n          (acc, payment) => acc + parseFloat(payment.paymentAmount),\r\n          0\r\n        );\r\n\r\n        const trend =\r\n          yesterdayTotal > 0\r\n            ? Math.abs((todayTotal - yesterdayTotal) / yesterdayTotal).toFixed(\r\n                2\r\n              )\r\n            : \"0\";\r\n\r\n        const trendpercent =\r\n          yesterdayTotal > 0\r\n            ? `${Math.round(\r\n                ((todayTotal - yesterdayTotal) / yesterdayTotal) * 100\r\n              )}%`\r\n            : \"0%\";\r\n\r\n        // Transaction count calculations\r\n        const todayTransactionCount = todayPayments.length;\r\n        const yesterdayTransactionCount = yesterdayPayments.length;\r\n        const transactionTrend =\r\n          yesterdayTransactionCount > 0\r\n            ? Math.abs(\r\n                (todayTransactionCount - yesterdayTransactionCount) /\r\n                  yesterdayTransactionCount\r\n              ).toFixed(2)\r\n            : \"0\";\r\n        const transactionTrendPercent =\r\n          yesterdayTransactionCount > 0\r\n            ? `${Math.round(\r\n                ((todayTransactionCount - yesterdayTransactionCount) /\r\n                  yesterdayTransactionCount) *\r\n                  100\r\n              )}%`\r\n            : \"0%\";\r\n\r\n        // Patient count calculations\r\n        const todayPatientCount = new Set(\r\n          todayPayments.map((payment) => payment.patientCardNumber)\r\n        ).size;\r\n\r\n        const yesterdayPatientCount = new Set(\r\n          yesterdayPayments.map((payment) => payment.patientCardNumber)\r\n        ).size;\r\n        const patientTrend =\r\n          yesterdayPatientCount > 0\r\n            ? Math.abs(\r\n                (todayPatientCount - yesterdayPatientCount) /\r\n                  yesterdayPatientCount\r\n              ).toFixed(2)\r\n            : \"0\";\r\n        const patientTrendPercent =\r\n          yesterdayPatientCount > 0\r\n            ? `${Math.round(\r\n                ((todayPatientCount - yesterdayPatientCount) /\r\n                  yesterdayPatientCount) *\r\n                  100\r\n              )}%`\r\n            : \"0%\";\r\n\r\n        // Set all states\r\n\r\n        setTotalSum(totalSum);\r\n\r\n        setTodayTotal(todayTotal);\r\n\r\n        // setYesterdayTotal(yesterdayTotal);\r\n\r\n        setTrend(trend);\r\n\r\n        setTrendPercent(trendpercent);\r\n        setTransactionCountBy({\r\n          count: todayTransactionCount,\r\n          trend: transactionTrend,\r\n          trendPercent: transactionTrendPercent,\r\n        });\r\n\r\n        setPatientcount({\r\n          count: todayPatientCount,\r\n          trend: patientTrend,\r\n          trendPercent: patientTrendPercent,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching transaction data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tokenValue?.name]);\r\n  return (\r\n    <div ref={dashboardRef} style={{ padding: \"20px\" }}>\r\n      {/* PDF Header - Only visible in PDF */}\r\n      <div style={{ display: \"none\" }}>\r\n        <h1>Hospital Revenue Dashboard</h1>\r\n        <p>Generated on: {new Date().toLocaleString()}</p>\r\n        <p>Generated by: {tokenValue?.name}</p>\r\n      </div>\r\n\r\n      {/* HEADER */}\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        mb={4}\r\n      >\r\n        <Header title=\"DASHBOARD\" subtitle=\"Welcome to your dashboard\" />\r\n        <Box>\r\n          <Button\r\n            onClick={handleDownloadPDF}\r\n            sx={{\r\n              backgroundColor: colors.blueAccent[700],\r\n              color: colors.grey[100],\r\n              fontSize: \"14px\",\r\n              fontWeight: \"bold\",\r\n              padding: \"10px 20px\",\r\n              \"&:hover\": {\r\n                backgroundColor: colors.blueAccent[900],\r\n              },\r\n            }}\r\n            disabled={isGenerating}\r\n          >\r\n            <DownloadOutlinedIcon sx={{ mr: \"10px\" }} />\r\n            {isGenerating ? \"Generating PDF...\" : \"Download Reports\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* GRID & CHARTS */}\r\n      <Box\r\n        display=\"grid\"\r\n        gridTemplateColumns=\"repeat(12, 1fr)\"\r\n        gridAutoRows=\"140px\"\r\n        gap=\"20px\"\r\n      >\r\n        {/* ROW 1 - STAT CARDS */}\r\n        {[\r\n          {\r\n            title: transactionCountBy.count || 0,\r\n            subtitle: \"No of Transactions Today\",\r\n            icon: (\r\n              <CreditCardIcon\r\n                sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }}\r\n              />\r\n            ),\r\n            progress: transactionCountBy.trend || \"0\",\r\n            increase: transactionCountBy.trendPercent || \"0%\",\r\n          },\r\n          {\r\n            title: formatAccounting(todayTotal),\r\n            subtitle: \"Total Revenue Today\",\r\n            icon: (\r\n              <PointOfSaleIcon\r\n                sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }}\r\n              />\r\n            ),\r\n            progress: trend,\r\n            increase: trendpercent,\r\n          },\r\n          {\r\n            title: pateintCount.count || 0,\r\n            subtitle: \"Patient served Today\",\r\n            icon: (\r\n              <PersonAddIcon\r\n                sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }}\r\n              />\r\n            ),\r\n            progress: pateintCount.trend || \"0\",\r\n            increase: pateintCount.trendPercent || \"0%\",\r\n          },\r\n          {\r\n            title: formatAccounting(totalUnc),\r\n            subtitle: \"Uncollected Cash from Cashier\",\r\n            icon: (\r\n              <AccountBalanceIcon\r\n                sx={{ color: colors.greenAccent[600], fontSize: \"26px\" }}\r\n              />\r\n            ),\r\n          },\r\n        ].map((stat, index) => (\r\n          <Box\r\n            key={index}\r\n            gridColumn=\"span 3\"\r\n            backgroundColor={colors.primary[400]}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <StatBox\r\n              title={stat.title}\r\n              subtitle={stat.subtitle}\r\n              progress={stat.progress}\r\n              increase={stat.increase}\r\n              icon={stat.icon}\r\n            />\r\n          </Box>\r\n        ))}\r\n\r\n        {/* ROW 2 - REVENUE CHART */}\r\n        <Box\r\n          gridColumn=\"span 8\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n        >\r\n          <Box\r\n            mt=\"25px\"\r\n            p=\"0 30px\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Box>\r\n              <Typography\r\n                variant=\"h5\"\r\n                fontWeight=\"600\"\r\n                color={colors.grey[100]}\r\n              >\r\n                Revenue Generated from Last Week\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h3\"\r\n                fontWeight=\"bold\"\r\n                color={colors.greenAccent[500]}\r\n              >\r\n                {formatAccounting(totalSum)}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <IconButton>\r\n                <DownloadOutlinedIcon\r\n                  sx={{ fontSize: \"26px\", color: colors.greenAccent[500] }}\r\n                />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n          <Box height=\"250px\" m=\"-20px 0 0 0\">\r\n            <LineChart isDashboard={true} />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* ROW 2 - UNCOLLECTED CASH BY CASHIER */}\r\n        <Box\r\n          gridColumn=\"span 4\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n          overflow=\"auto\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            p=\"15px\"\r\n          >\r\n            <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"600\">\r\n              Uncollected Cash by Cashier\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Column Titles */}\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            p=\"10px 15px\"\r\n            borderBottom={`2px solid ${colors.primary[500]}`}\r\n          >\r\n            <Typography\r\n              color={colors.greenAccent[500]}\r\n              fontWeight=\"600\"\r\n              width=\"33%\"\r\n            >\r\n              Cashier Name\r\n            </Typography>\r\n            <Typography\r\n              color={colors.greenAccent[500]}\r\n              fontWeight=\"600\"\r\n              width=\"33%\"\r\n            >\r\n              Last Collection Date\r\n            </Typography>\r\n            <Typography\r\n              color={colors.greenAccent[500]}\r\n              fontWeight=\"600\"\r\n              width=\"33%\"\r\n            >\r\n              Total Amount\r\n            </Typography>\r\n          </Box>\r\n\r\n          {collectionbycashier.map((transaction, i) => (\r\n            <Box\r\n              key={`${transaction.cashier}-${i}`}\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              p=\"10px 15px\"\r\n              sx={{\r\n                \"&:hover\": {\r\n                  backgroundColor: colors.greenAccent[900],\r\n                },\r\n              }}\r\n            >\r\n              <Typography color={colors.grey[100]} width=\"33%\">\r\n                {transaction.cashier}\r\n              </Typography>\r\n              <Typography color={colors.grey[100]} width=\"33%\">\r\n                {transaction.date\r\n                  ? new Date(transaction.date).toLocaleDateString()\r\n                  : \"N/A\"}\r\n              </Typography>\r\n              <Typography\r\n                color={colors.greenAccent[500]}\r\n                fontWeight=\"600\"\r\n                width=\"33%\"\r\n              >\r\n                {formatAccounting(transaction.amount)}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n\r\n        {/* ROW 3 - PAYMENT METHOD CHART */}\r\n        <Box\r\n          gridColumn=\"span 3\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n          p=\"30px\"\r\n          overflow=\"auto\"\r\n        >\r\n          <Typography variant=\"h5\" fontWeight=\"600\">\r\n            Uncollected vs Collected Over Last Month\r\n          </Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            mt=\"25px\"\r\n          >\r\n            <ProgressCircle\r\n              progress={\r\n                totalUnc + totalCollected > 0\r\n                  ? totalCollected / (totalUnc + totalCollected)\r\n                  : 0\r\n              } // the pie chart for collected and uncollected\r\n              size=\"125\"\r\n              showLegend={true}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              color={colors.greenAccent[500]}\r\n              sx={{ mt: \"15px\" }}\r\n            >\r\n              {formatAccounting(totalUnc)} of{\" \"}\r\n              {formatAccounting(totalUnc + totalCollected)} is Uncollected from\r\n              Cashier\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          gridColumn=\"span 5\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            fontWeight=\"600\"\r\n            sx={{ padding: \"30px 30px 0 30px\" }}\r\n            color={colors.grey[100]}\r\n          >\r\n            Amount by Payment Method over last week\r\n          </Typography>\r\n          <Box height=\"250px\" mt=\"-20px\">\r\n            <BarChart isDashboard={true} />\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* ROW 3 - GEOGRAPHY CHART */}\r\n\r\n        <Box\r\n          gridColumn=\"span 4\"\r\n          gridRow=\"span 2\"\r\n          backgroundColor={colors.primary[400]}\r\n          padding=\"30px\"\r\n        >\r\n          <Typography variant=\"h5\" fontWeight=\"600\" color={colors.grey[100]}>\r\n            Geography Based Traffic\r\n          </Typography>\r\n          <Box height=\"200px\" mt=\"10px\">\r\n            <GeographyChart isDashboard={true} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* PDF Footer - Only visible in PDF */}\r\n      <div style={{ display: \"none\" }}>\r\n        <p style={{ textAlign: \"center\", marginTop: \"20px\", color: \"#666\" }}>\r\n          © {new Date().getFullYear()} Hospital Payment System - Confidential\r\n          Report\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import {\r\n  Box,\r\n  IconButton,\r\n  useTheme,\r\n  Divider,\r\n  MenuItem,\r\n  Menu,\r\n  Avatar,\r\n  ListItemIcon,\r\n  Tooltip,\r\n  InputBase,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate, Form, useRouteLoaderData } from \"react-router-dom\";\r\nimport { ColorModeContext, tokens } from \"../../theme\";\r\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\r\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\r\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\r\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Logout from \"@mui/icons-material/Logout\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport { getTokenValue } from \"../../services/user_service\";\r\n// import AMHRLogo from \"../../assets/Amhara-region.png\";\r\n\r\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nconst Topbar = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const colorMode = useContext(ColorModeContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const session = useRouteLoaderData(\"root\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n  const handleProfile = () => navigate(\"/profile\");\r\n\r\n  const handleDownloadCollectorsFile = () => {\r\n    try {\r\n      const link = document.createElement(\"a\");\r\n      link.href = `${window.location.origin}/assets/files/Register Collectors.xlsx`;\r\n      link.download = \"Register Collectors.xlsx\";\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Download failed:\", error);\r\n    }\r\n  };\r\n  // Register Credit Users\r\n  const handleDownloadCreditUserFile = () => {\r\n    try {\r\n      const link = document.createElement(\"a\");\r\n      link.href = `${window.location.origin}/assets/files/Register Credit Users.xlsx`;\r\n      link.download = \"Register Credit Users.xlsx\";\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Download failed:\", error);\r\n    }\r\n  };\r\n\r\n  // Upload Services\r\n  const handleDownloadUploadServicesFile = () => {\r\n    try {\r\n      const link = document.createElement(\"a\");\r\n      link.href = `${window.location.origin}/assets/files/Services.xlsx`;\r\n      link.download = \"Services.xlsx\";\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Download failed:\", error);\r\n    }\r\n  };\r\n\r\n  const handleHelp = () => {\r\n    try {\r\n      const pdf = `${window.location.origin}/assets/files/Moh Documentation.pdf`;\r\n      window.open(pdf, \"_blank\");\r\n    } catch (error) {\r\n      console.error(\"Download failed:\", error);\r\n    }\r\n  };\r\n\r\n  return session ? (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\r\n      {/* SEARCH BAR */}\r\n      <Box\r\n        display=\"flex\"\r\n        backgroundColor={colors.primary[400]}\r\n        borderRadius=\"3px\"\r\n        sx={{\r\n          height: { xs: 35, sm: 40, md: 42 },\r\n          width: { xs: 120, sm: 160, md: 222 },\r\n        }}\r\n      >\r\n        <InputBase sx={{ ml: 2, flex: 1 }} placeholder=\"Search\" />\r\n        <IconButton type=\"button\" sx={{ p: 1 }}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n      {/*<Box\r\n        component=\"img\"\r\n        src={AMHRLogo}\r\n        alt=\"Amhara Region Logo\"\r\n        sx={{\r\n          height: { xs: 50, sm: 55, md: 90 },\r\n          width: { xs: 120, sm: 160, md: 222 },\r\n          objectFit: \"contain\",\r\n          maxWidth: \"100%\",\r\n        }}\r\n      />*/}\r\n\r\n      {/* ICONS */}\r\n      <Box display=\"flex\">\r\n        <IconButton onClick={colorMode.toggleColorMode}>\r\n          {theme.palette.mode === \"dark\" ? (\r\n            <DarkModeOutlinedIcon />\r\n          ) : (\r\n            <LightModeOutlinedIcon />\r\n          )}\r\n        </IconButton>\r\n        <IconButton>\r\n          <NotificationsOutlinedIcon />\r\n          {/* <LanguageToggle onClick={handleToggleLanguage}/> */}\r\n        </IconButton>\r\n        <IconButton>\r\n          <SettingsOutlinedIcon />\r\n        </IconButton>\r\n\r\n        {/* User Avatar */}\r\n        <Box\r\n          sx={{ display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}\r\n        >\r\n          <Tooltip title=\"Account settings\">\r\n            <IconButton\r\n              onClick={handleClick}\r\n              size=\"small\"\r\n              sx={{ ml: 2 }}\r\n              aria-controls={open ? \"account-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n            >\r\n              <Avatar sx={{ width: 32, height: 32 }}>\r\n                {tokenvalue.name?.charAt(0)?.toUpperCase()}\r\n              </Avatar>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n\r\n        {/* Dropdown Menu */}\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          id=\"account-menu\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onClick={handleClose}\r\n          transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n          anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n          sx={{\r\n            \"& .MuiAvatar-root\": { width: 32, height: 32, ml: -0.5, mr: 1 },\r\n            \"&::before\": {\r\n              content: '\"\"',\r\n              display: \"block\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 14,\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: \"background.paper\",\r\n              transform: \"translateY(-50%) rotate(45deg)\",\r\n              zIndex: 0,\r\n            },\r\n          }}\r\n        >\r\n          <MenuItem onClick={() => handleProfile()}>\r\n            <ListItemIcon>\r\n              <Avatar />\r\n            </ListItemIcon>\r\n            Profile\r\n          </MenuItem>\r\n          <MenuItem onClick={() => handleDownloadCollectorsFile()}>\r\n            <ListItemIcon>\r\n              <FileDownloadIcon />\r\n            </ListItemIcon>\r\n            Get Register Collectors File\r\n          </MenuItem>\r\n          <MenuItem onClick={() => handleDownloadCreditUserFile()}>\r\n            <ListItemIcon>\r\n              <FileDownloadIcon />\r\n            </ListItemIcon>\r\n            Get Register Credit User File\r\n          </MenuItem>\r\n          <MenuItem onClick={() => handleDownloadUploadServicesFile()}>\r\n            <ListItemIcon>\r\n              <FileDownloadIcon />\r\n            </ListItemIcon>\r\n            Service Upload\r\n          </MenuItem>\r\n          <MenuItem onClick={() => handleHelp()}>\r\n            <ListItemIcon>\r\n              <HelpOutlineIcon />\r\n            </ListItemIcon>\r\n            Help\r\n          </MenuItem>\r\n          <Divider />\r\n          <Form action=\"/logout\" method=\"post\">\r\n            <MenuItem>\r\n              <ListItemIcon>\r\n                <Logout fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <Button variant=\"contained\" type=\"submit\" color=\"secondary\">\r\n                Logout\r\n              </Button>\r\n            </MenuItem>\r\n          </Form>\r\n        </Menu>\r\n      </Box>\r\n    </Box>\r\n  ) : (\r\n    <Box display=\"flex\">\r\n      <IconButton onClick={colorMode.toggleColorMode}>\r\n        {theme.palette.mode === \"dark\" ? (\r\n          <DarkModeOutlinedIcon />\r\n        ) : (\r\n          <LightModeOutlinedIcon />\r\n        )}\r\n      </IconButton>\r\n      <IconButton>\r\n        <NotificationsOutlinedIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  Grid,\r\n  Paper,\r\n  useTheme,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Box,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport {\r\n  AddCircleOutline,\r\n  RemoveCircleOutline,\r\n  ExpandMore,\r\n  Edit,\r\n} from \"@mui/icons-material\";\r\nimport api from \"../utils/api\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { normalizeText } from \"../utils/normalizer\";\r\nconst initialState = {\r\n  type: \"\",\r\n  descriptions: [],\r\n};\r\n\r\nconst initialStateError = {\r\n  type: \"\",\r\n  descriptions: [\"\"],\r\n};\r\nconst PaymentTypeManager = () => {\r\n  const theme = useTheme();\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n  const [paymentType, setPaymentType] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [formDataError, setFormDataError] = useState(initialStateError);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [deleteLoading, setDeleteLoading] = useState({ status: false, on: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Fetch all payment types with descriptions\r\n  const fetchPaymentTypes = async () => {\r\n    try {\r\n      const response = await api.get(\"/Lookup/payment-type-description\");\r\n      if (response?.data?.data) {\r\n        setPaymentTypes(\r\n          response.data.data\r\n            ?.filter((item) => normalizeText(item?.type) !== \"all\")\r\n            ?.map(({ id, ...rest }, index) => ({\r\n              id: index + 1,\r\n              mainId: id,\r\n              ...rest,\r\n            }))\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch error:\", error);\r\n      toast.error(\"Failed to load payment types\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPaymentTypes();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    const fetchPaymentType = async () => {\r\n      try {\r\n        const response = await api.get(\"/Lookup/payment-type\");\r\n        if (response?.status === 200) {\r\n          setPaymentType(\r\n            response?.data\r\n              ?.map((item) => item?.type)\r\n              ?.filter((item) => normalizeText(item) !== \"all\")\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"This is fecth Payment Type error: \", error);\r\n      }\r\n    };\r\n    fetchPaymentType();\r\n  }, []);\r\n\r\n  ///Edit handler\r\n  const handleEditClick = (paymentType) => {\r\n    setEditingId(paymentType.mainId);\r\n    setFormData({\r\n      type: paymentType.type,\r\n      descriptions:\r\n        paymentType?.description?.length > 0 ||\r\n        paymentType?.description !== null\r\n          ? paymentType?.description\r\n          : [{ id: null, description: \"\" }],\r\n    });\r\n  };\r\n\r\n  //Descriptions Change Handler\r\n  const handleDescriptionChange = (index, value) => {\r\n    const updated = [...formData.descriptions];\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      descriptions: updated?.map((item, i) => {\r\n        if (i === index) {\r\n          return { id: item.id, description: value };\r\n        }\r\n\r\n        return item;\r\n      }),\r\n    }));\r\n    isValidName(index, value);\r\n  };\r\n\r\n  //Description Validator\r\n  const isValidName = (index, value) => {\r\n    const regex = /^[A-Za-z0-9._\\-\\s]{2,}$/;\r\n    const des = Array.isArray(formDataError?.descriptions)\r\n      ? [...formDataError.descriptions]\r\n      : [];\r\n\r\n    if (!regex.test(value) && value?.length > 0) {\r\n      des[index] =\r\n        \"Use only letters, numbers, space, dot (.), dash (-), or underscore (_) — at least 2 characters.\";\r\n      setFormDataError((prev) => ({\r\n        ...prev,\r\n        descriptions: des,\r\n      }));\r\n      return false;\r\n    } else {\r\n      des[index] = \"\"; // clear error at that index\r\n      setFormDataError((prev) => ({\r\n        ...prev,\r\n        descriptions: des,\r\n      }));\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //Descriptions Add Handler\r\n  const handleAddDescription = () => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      descriptions: [...prev.descriptions, { id: null, description: \"\" }],\r\n    }));\r\n  };\r\n\r\n  //Descriptions Remove Handler\r\n  const handleRemoveDescription = async (index) => {\r\n    try {\r\n      if (\r\n        formData?.descriptions?.some(\r\n          (item) =>\r\n            item.description === null ||\r\n            item.description === undefined ||\r\n            item.description.toString().trim() === \"\"\r\n        )\r\n      ) {\r\n        toast.error(\"Please fill required fields.\");\r\n        setFormDataError({\r\n          ...formDataError,\r\n          descriptions: \"Please fill this field.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (editingId !== null) {\r\n        //Remove the description for Edit\r\n        setDeleteLoading({ status: false, on: index });\r\n\r\n        const removeData = formData?.descriptions?.filter(\r\n          (_, i) => i === index\r\n        );\r\n        const response = await api.delete(\"/Lookup/payment-type-description\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          data: {\r\n            id: removeData[0]?.id,\r\n          },\r\n        });\r\n\r\n        if (response?.status === 200) {\r\n          if (formData.descriptions.length === 1) {\r\n            toast.success(response?.data?.msg || \"Removed Successfully.\");\r\n            setFormData(initialState);\r\n            setRefresh((prev) => !prev);\r\n            setEditingId(null);\r\n            return;\r\n          }\r\n          toast.success(response?.data?.msg || \"Removed Successfully.\");\r\n          setFormData((prev) => ({\r\n            ...prev,\r\n            descriptions: prev.descriptions.filter((_, i) => i !== index),\r\n          }));\r\n          setRefresh((prev) => !prev);\r\n        }\r\n      } else {\r\n        //Remove the description for Create\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          descriptions: prev.descriptions.filter((_, i) => i !== index),\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This is handle Remove Description error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal server error.\");\r\n    } finally {\r\n      setDeleteLoading({ status: false, on: index });\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingId(null);\r\n    setFormData(initialState);\r\n    setFormDataError(initialStateError);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const payload = {\r\n        type: formData?.type,\r\n        discription: editingId\r\n          ? formData?.descriptions?.filter((d) => d?.description?.trim() !== \"\")\r\n          : formData?.descriptions\r\n              ?.filter((d) => d?.description?.trim() !== \"\")\r\n              ?.map((item) => item?.description),\r\n      };\r\n\r\n      if (\r\n        formData?.type?.length <= 0 ||\r\n        formData?.descriptions?.some(\r\n          (item) =>\r\n            item.description === null ||\r\n            item.description === undefined ||\r\n            item.description.toString().trim() === \"\"\r\n        )\r\n      ) {\r\n        toast.error(\"Pleas fill required fields.\");\r\n        if (formData?.type?.length <= 0) {\r\n          setFormDataError({\r\n            ...formDataError,\r\n            type: \"Please fill this field.\",\r\n          });\r\n        }\r\n\r\n        if (\r\n          formData?.descriptions?.some(\r\n            (item) =>\r\n              item.description === null ||\r\n              item.description === undefined ||\r\n              item.description.toString().trim() === \"\"\r\n          )\r\n        ) {\r\n          setFormDataError({\r\n            ...formDataError,\r\n            descriptions: formData?.descriptions?.map(\r\n              () => \"Please fill this field.\"\r\n            ),\r\n          });\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (\r\n        !!formDataError?.type ||\r\n        formDataError?.descriptions?.some((item) => item?.length > 0)\r\n      ) {\r\n        toast.error(\"Please fix the error first.\");\r\n        return;\r\n      }\r\n\r\n      if (editingId) {\r\n        // Update existing\r\n        const responses = await Promise.all(\r\n          formData?.descriptions.map((desc) =>\r\n            api.put(\"/Lookup/payment-type-description/\", {\r\n              id: desc?.id,\r\n              discription: desc?.description,\r\n            })\r\n          )\r\n        );\r\n\r\n        let hasSuccess = false;\r\n\r\n        responses?.forEach((res, i) => {\r\n          if (res?.status === 200) {\r\n            hasSuccess = true;\r\n            toast.success(res?.data?.msg || `Description ${i + 1} updated.`);\r\n          }\r\n        });\r\n\r\n        if (hasSuccess) {\r\n          setRefresh((prev) => !prev);\r\n          handleCancelEdit();\r\n          setEditingId(null);\r\n        }\r\n      } else {\r\n        // Create new\r\n        const response = await api.post(\r\n          \"/Lookup/payment-type-description\",\r\n          payload\r\n        );\r\n        if (response?.status === 201) {\r\n          setRefresh((prev) => !prev);\r\n          handleCancelEdit();\r\n          toast.success(\r\n            response?.data?.msg ||\r\n              (editingId ? \"Updated successfully\" : \"Created successfully\")\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Submit error:\", error);\r\n      toast.error(error?.response?.data?.msg || \"Operation failed\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      elevation={3}\r\n      sx={{\r\n        p: 4,\r\n        margin: 2,\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n        Payment Types Manager\r\n      </Typography>\r\n\r\n      {/* Edit/Create Section */}\r\n      <Paper\r\n        elevation={2}\r\n        sx={{\r\n          p: 3,\r\n          mt: 4,\r\n          background: theme.palette.mode === \"dark\" && \"#1f2a408a\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {editingId ? \"Edit Payment Type\" : \"Create New Payment Type\"}\r\n        </Typography>\r\n\r\n        <TextField\r\n          fullWidth\r\n          select\r\n          label=\"Payment Type\"\r\n          value={formData?.type}\r\n          onChange={(e) =>\r\n            setFormData((prev) => ({ ...prev, type: e.target.value }))\r\n          }\r\n          sx={{ mb: 3 }}\r\n          error={!!formDataError?.type}\r\n          helperText={formDataError?.type}\r\n          InputProps={{\r\n            sx: {\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          }}\r\n          InputLabelProps={{\r\n            sx: {\r\n              color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n              \"&.Mui-focused\": {\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {paymentType?.map((item, index) => (\r\n            <MenuItem key={index} value={item}>\r\n              {item}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        {formData.descriptions.map((desc, index) => (\r\n          <Grid\r\n            container\r\n            spacing={1}\r\n            key={index}\r\n            alignItems=\"center\"\r\n            sx={{ mb: 2 }}\r\n          >\r\n            <Grid item xs={10}>\r\n              <TextField\r\n                fullWidth\r\n                label={`Description ${index + 1}`}\r\n                value={desc?.description || \"\"}\r\n                onChange={(e) => handleDescriptionChange(index, e.target.value)}\r\n                error={!!formDataError?.descriptions[index]}\r\n                helperText={formDataError?.descriptions[index]}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={() => handleRemoveDescription(index)}>\r\n                {deleteLoading?.on === index ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  <RemoveCircleOutline color=\"error\" />\r\n                )}\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n\r\n        <Box display=\"flex\" justifyContent=\"space-between\" mt={2}>\r\n          <Button\r\n            startIcon={<AddCircleOutline />}\r\n            onClick={handleAddDescription}\r\n            variant=\"outlined\"\r\n            color=\"inherit\"\r\n            disabled={editingId !== null}\r\n          >\r\n            Add Description\r\n          </Button>\r\n          <Box>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={handleCancelEdit}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n              onClick={handleSubmit}\r\n              disabled={\r\n                !formData.type ||\r\n                formData.descriptions.every(\r\n                  (d) =>\r\n                    d?.description?.trim() === \"\" || d?.description === null\r\n                )\r\n              }\r\n            >\r\n              {isLoading ? (\r\n                <CircularProgress size={24} color=\"inherit\" />\r\n              ) : editingId ? (\r\n                \"Update\"\r\n              ) : (\r\n                \"Create\"\r\n              )}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Display Section */}\r\n      <div\r\n        style={{\r\n          marginTop: \"40px\",\r\n        }}\r\n      >\r\n        {paymentTypes.map((type) => (\r\n          <Accordion\r\n            key={type.id}\r\n            sx={{\r\n              background:\r\n                theme.palette.mode === \"dark\"\r\n                  ? \"linear-gradient(45deg, #1f2a40 30%, #2c3a58 90%)\"\r\n                  : \"linear-gradient(45deg, #f8f9fa 30%, #ffffff 90%)\",\r\n              borderRadius: \"12px !important\",\r\n              overflow: \"hidden\",\r\n              transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\r\n              boxShadow: theme.shadows[2],\r\n              \"&:hover\": {\r\n                transform: \"translateY(-2px)\",\r\n                boxShadow: theme.shadows[6],\r\n              },\r\n              \"&:before\": {\r\n                // Remove default divider\r\n                display: \"none\",\r\n              },\r\n              \"&.Mui-expanded\": {\r\n                margin: \"16px 0\",\r\n                transform: \"scale(1.005)\",\r\n              },\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                <ExpandMore sx={{ color: theme.palette.text.secondary }} />\r\n              }\r\n              sx={{\r\n                transition: \"background 0.2s ease\",\r\n                \"&:hover\": {\r\n                  background:\r\n                    theme.palette.mode === \"dark\"\r\n                      ? \"rgba(255,255,255,0.03)\"\r\n                      : \"rgba(0,0,0,0.03)\",\r\n                },\r\n                \"& .MuiAccordionSummary-content\": {\r\n                  alignItems: \"center\",\r\n                  py: 2,\r\n                },\r\n              }}\r\n            >\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item xs={10}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{\r\n                      fontWeight: 600,\r\n                      letterSpacing: \"0.5px\",\r\n                      position: \"relative\",\r\n                      \"&:after\": {\r\n                        content: '\"\"',\r\n                        position: \"absolute\",\r\n                        bottom: -8,\r\n                        left: 0,\r\n                        width: \"40px\",\r\n                        height: \"3px\",\r\n                        background: theme.palette.primary.main,\r\n                        transition: \"all 0.3s ease\",\r\n                        opacity: 0,\r\n                      },\r\n                    }}\r\n                  >\r\n                    {type.type}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={2} textAlign=\"right\">\r\n                  <IconButton\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleEditClick(type);\r\n                    }}\r\n                    sx={{\r\n                      transform: \"scale(0.9)\",\r\n                      transition: \"all 0.2s ease\",\r\n                      \"&:hover\": {\r\n                        transform: \"scale(1.1)\",\r\n                        background:\r\n                          theme.palette.mode === \"dark\"\r\n                            ? \"rgba(255,255,255,0.1)\"\r\n                            : \"rgba(0,0,0,0.1)\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Edit fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails sx={{ pt: 0 }}>\r\n              <List\r\n                sx={{\r\n                  background:\r\n                    theme.palette.mode === \"dark\"\r\n                      ? \"rgba(0,0,0,0.15)\"\r\n                      : \"rgba(255,255,255,0.5)\",\r\n                  borderRadius: \"8px\",\r\n                  py: 0,\r\n                }}\r\n              >\r\n                {type.description.map((desc, idx) => (\r\n                  <ListItem\r\n                    key={desc.id || idx}\r\n                    sx={{\r\n                      transition: \"all 0.2s ease\",\r\n                      \"&:hover\": {\r\n                        transform: \"translateX(8px)\",\r\n                        background:\r\n                          theme.palette.mode === \"dark\"\r\n                            ? \"rgba(255,255,255,0.02)\"\r\n                            : \"rgba(0,0,0,0.02)\",\r\n                      },\r\n                      \"&:not(:last-child)\": {\r\n                        borderBottom: `1px solid ${theme.palette.divider}`,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={desc.description || \"No description\"}\r\n                      primaryTypographyProps={{\r\n                        sx: {\r\n                          position: \"relative\",\r\n                          \"&:before\": {\r\n                            content: '\"•\"',\r\n                            color:\r\n                              theme.palette.mode === \"light\"\r\n                                ? theme.palette.primary.main\r\n                                : theme.palette.secondary.main,\r\n                            mr: 1.5,\r\n                            fontSize: \"1.2rem\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        ))}\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PaymentTypeManager;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Alert,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\n\r\nimport Topbar from \"../global/Topbar\";\r\nimport bag from \"../../assets/bg16.jpg\";\r\nimport { login } from \"../../services/user_service\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport tsedey from \"../../assets/tsedey.png\";\r\nimport amh from \"../../assets/amh.png\";\r\nimport moh from \"../../assets/moh.png\";\r\n// import { useAuth } from \"../../contexts/AuthProvider\"\r\n\r\nconst Login = () => {\r\n  const theme = useTheme();\r\n\r\n  const mutation = useMutation({\r\n    mutationFn: login,\r\n    onSuccess: (data) => {\r\n      localStorage.setItem(\".otc\", data?.token);\r\n      window.location.href = \"/\";\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Login Error\", error);\r\n    },\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (enteredData) => {\r\n    const apiData = {\r\n      username: enteredData.username,\r\n      password: enteredData.password,\r\n    };\r\n    mutation.mutate(apiData);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#1a1a1a\" : \"#478594\",\r\n      }}\r\n    >\r\n      <Topbar />\r\n\r\n      <Grid\r\n        container\r\n        sx={{\r\n          flexGrow: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          height: \"100%\",\r\n          px: 2,\r\n        }}\r\n      >\r\n        {/* Left Side - Image */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundImage: `url(${bag})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            height: { xs: 250, md: \"80vh\" },\r\n            ml: { md: 3 }, // Small margin from the left\r\n            borderRadius: \"20px\",\r\n            boxShadow: 3,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n              backdropFilter: \"blur(5px)\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              padding: 4,\r\n              borderRadius: 2,\r\n              maxWidth: \"80%\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h4\" fontWeight=\"bold\" mb={2}>\r\n              Welcome Back!\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              Sign in to access your account .\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n\r\n        {/* Right Side - Form */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={5}\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: { xs: \"auto\", md: \"80%\" },\r\n            mt: { xs: 4, md: 0 },\r\n          }}\r\n        >\r\n          <Paper\r\n            elevation={6}\r\n            sx={{\r\n              p: 4,\r\n              width: \"100%\",\r\n              maxWidth: 400,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              borderRadius: \"20px\",\r\n              boxShadow: 3,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img\r\n                src={moh}\r\n                width=\"110px\"\r\n                alt=\"Company Logo\"\r\n                style={{ marginRight: \"0px\", marginTop: \"25px\" }}\r\n              />\r\n               <img src={tsedey} width=\"105px\" alt=\"Company Logo\" />\r\n              <img\r\n                src={amh}\r\n                width=\"100px\"\r\n                alt=\"Company Logo\"\r\n                style={{ marginRight: \"0px\",marginTop: \"5px\"  }}\r\n              />\r\n             \r\n            </div>\r\n            <Typography variant=\"h5\" sx={{ mt: 2, fontWeight: \"bold\" }}>\r\n              Sign in to Your Account\r\n            </Typography>\r\n\r\n            \r\n            {mutation.isError && (\r\n              <Alert severity=\"error\" sx={{ width: \"100%\", mt: 2 }}>\r\n                {mutation.error.status === 401\r\n                  ? \"Invalid username or password!\"\r\n                  : mutation.error?.message}\r\n              </Alert>\r\n            )}\r\n\r\n            {/* Login Form */}\r\n            <Box\r\n              component=\"form\"\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              sx={{ mt: 3, width: \"100%\" }}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Username\"\r\n                autoFocus\r\n                {...register(\"username\", {\r\n                  required: \"Username is required\",\r\n                  minLength: {\r\n                    value: 4,\r\n                    message: \"Username must be at least 4 characters\",\r\n                  },\r\n                })}\r\n                error={Boolean(errors.username)}\r\n                helperText={errors.username?.message}\r\n                sx={{ mb: 2 }}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                {...register(\"password\", {\r\n                  required: \"Password is required\",\r\n                  minLength: {\r\n                    value: 4,\r\n                    message: \"Password must be at least 4 characters\",\r\n                  },\r\n                })}\r\n                error={Boolean(errors.password)}\r\n                helperText={errors.password?.message}\r\n                sx={{ mb: 2 }}\r\n                InputProps={{\r\n                  min: 0, // Prevents negative values\r\n                  step: \"any\", // Allows decimal values\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{\r\n                  mt: 3,\r\n                  mb: 2,\r\n                  py: 1.5,\r\n                  backgroundColor: \"#478594\",\r\n                  color: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  \"&:hover\": {\r\n                    backgroundColor: \"#1f5459\",\r\n                  },\r\n                }}\r\n                disabled={mutation.isPending}\r\n              >\r\n                {mutation.isPending ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  \"Sign In\"\r\n                )}\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport api from \"../utils/api\";\r\nimport { normalizeText } from \"../utils/normalizer\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { DeleteIcon, EditIcon } from \"lucide-react\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nconst initialState = {\r\n  type: \"\",\r\n  amount: \"\",\r\n  time: \"\",\r\n};\r\n\r\nexport const isEmpty = (val) =>\r\n  val === null ||\r\n  val === undefined ||\r\n  (typeof val === \"string\" && val.trim() === \"\") ||\r\n  (typeof val === \"number\" && isNaN(val));\r\n\r\nconst PaymentTypeLimitForm = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [formError, setFormError] = useState(initialState);\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n  const [fullPaymentTypes, setFullPaymentTypes] = useState([]);\r\n  const [limits, setLimits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [saveLoading, setSaveLoading] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n  const [selectedDeleteUser, setSelectedDeleteUser] = useState({});\r\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  // Fetch and map limits\r\n  useEffect(() => {\r\n    const fetchLimits = async () => {\r\n      try {\r\n        const res = await api.get(\"/Setting/paymentType-limit\");\r\n        const limitsData = res?.data?.data || [];\r\n        // Enrich type from fullPaymentTypes\r\n        const enrichedData = limitsData.map((item, index) => {\r\n          const match = fullPaymentTypes.find((p) => p.id === item.type);\r\n          return {\r\n            id: index + 1,\r\n            mainId: item.id,\r\n            type: match?.type || `Type ID: ${item.type}`,\r\n            amount: item.amount,\r\n            time: item.time,\r\n            createdBy: item.createdBy || \"-\",\r\n          };\r\n        });\r\n\r\n        setLimits(enrichedData);\r\n      } catch (err) {\r\n        console.error(\"Error loading limits:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (fullPaymentTypes.length > 0) {\r\n      fetchLimits();\r\n    }\r\n  }, [fullPaymentTypes, refresh]);\r\n\r\n  // Generalized fetch function\r\n  const fetchData = async (endpoint) => {\r\n    try {\r\n      const response = await api.get(endpoint);\r\n      const response2 = await api.get(\"/Lookup/payment-type-description\");\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        const modData = response?.data\r\n          ?.map((item) => item.type)\r\n          .filter((item) => !normalizeText(item)?.includes(\"all\"));\r\n        setPaymentTypes(modData);\r\n      }\r\n      if (response2.status === 200) {\r\n        setFullPaymentTypes(response2?.data?.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  // Fetch Payment Methods\r\n  useEffect(() => {\r\n    fetchData(\"/Lookup/payment-type\");\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    try {\r\n      const { name, value } = e.target;\r\n      const key = normalizeText(name);\r\n\r\n      let transformedValue = value;\r\n\r\n      if ([\"amount\", \"time\"].includes(key)) {\r\n        const numericValue = Math.abs(Number(value));\r\n        transformedValue =\r\n          key === \"amount\" ? parseFloat(numericValue) : parseInt(numericValue);\r\n      }\r\n\r\n      setForm((prev) => ({\r\n        ...prev,\r\n        [name]: transformedValue,\r\n      }));\r\n\r\n      setFormError((prev) => ({\r\n        ...prev,\r\n        [name]: \"\",\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"This is handle change error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (Object.values(form || {}).some(isEmpty)) {\r\n        toast.info(\"Please fill all fields.\");\r\n\r\n        Object.entries(form || {}).forEach(([key, value]) => {\r\n          if (isEmpty(value)) {\r\n            setFormError((prev) => ({\r\n              ...prev,\r\n              [key]: \"Please fill this field.\",\r\n            }));\r\n          }\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      setSaveLoading(true);\r\n      const payload = {\r\n        id: isEdit\r\n          ? form?.mainId\r\n          : fullPaymentTypes.filter(\r\n              (item) => normalizeText(item?.type) === normalizeText(form?.type)\r\n            )[0]?.id,\r\n        type: form.type,\r\n        amount: parseFloat(form.amount),\r\n        time: parseInt(form.time),\r\n      };\r\n\r\n      if (isEdit) {\r\n        const response = await api.put(\"/Setting/paymentType-limit\", payload);\r\n\r\n        if (response?.status === 200) {\r\n          toast.success(response?.data?.msg || \"Updated successfully.\");\r\n          setForm(initialState);\r\n          setIsEdit(false);\r\n          setRefresh((prev) => !prev);\r\n        }\r\n      } else {\r\n        const response = await api.post(\"/Setting/paymentType-limit\", payload);\r\n        if (response?.status === 200 || response?.status === 201) {\r\n          toast.success(response?.data?.msg || \"Created successfully.\");\r\n          setForm(initialState);\r\n          setRefresh((prev) => !prev);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving:\", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server error.\");\r\n    } finally {\r\n      setSaveLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (params) => {\r\n    try {\r\n      setIsEdit(true);\r\n      setForm(params?.row);\r\n    } catch (error) {\r\n      console.error(\"This is handle edit error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (params) => {\r\n    try {\r\n      if (params?.message === \"Delete\") {\r\n        setIsDeleteLoading(true);\r\n\r\n        const response = await api.delete(\"/Setting/paymentType-limit\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          data: selectedDeleteUser?.mainId || 0,\r\n        });\r\n\r\n        if (response?.status === 200) {\r\n          toast.success(response?.data?.msg || \"Deleted Successfully.\");\r\n          setSelectedDeleteUser({});\r\n          setConfirmModalOpen(false);\r\n          setRefresh((prev) => !prev);\r\n          return;\r\n        }\r\n      }\r\n\r\n      //start delete confirmation task\r\n      setSelectedDeleteUser(params);\r\n      setConfirmModalOpen(true);\r\n    } catch (error) {\r\n      console.error(\"This is handle delete error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal server error.\");\r\n    } finally {\r\n      setIsDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm(initialState);\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"#\", width: 60 },\r\n    { field: \"type\", headerName: \"Payment Type\", flex: 1 },\r\n    { field: \"amount\", headerName: \"Amount\", flex: 1 },\r\n    { field: \"time\", headerName: \"Time Limit\", flex: 1 },\r\n    { field: \"createdBy\", headerName: \"Created By\", flex: 1 },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      flex: 1,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            onClick={() => handleEdit(params)}\r\n            aria-label=\"edit\"\r\n            className=\"text-info\"\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => handleDelete(params.row)}\r\n            color=\"danger\"\r\n            aria-label=\"delete\"\r\n            className=\"text-danger\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 4, mx: \"auto\", mt: 5, marginInline: \"15px\" }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Set Payment Type Limit\r\n      </Typography>\r\n\r\n      <TextField\r\n        select\r\n        fullWidth\r\n        label=\"Payment Type\"\r\n        name=\"type\"\r\n        value={form?.type}\r\n        onChange={handleChange}\r\n        sx={{ mb: 3 }}\r\n        required\r\n        error={!!formError?.type}\r\n        helperText={formError?.type}\r\n        InputProps={{\r\n          sx: {\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n          },\r\n        }}\r\n        InputLabelProps={{\r\n          sx: {\r\n            color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n            \"&.Mui-focused\": {\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {paymentTypes.map((type) => (\r\n          <MenuItem key={type} value={type}>\r\n            {type}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Amount\"\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        value={form?.amount}\r\n        onWheel={(e) => e.target.blur()}\r\n        onChange={handleChange}\r\n        sx={{ mb: 3 }}\r\n        required\r\n        error={!!formError?.amount}\r\n        helperText={formError?.amount}\r\n        InputProps={{\r\n          sx: {\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n          },\r\n        }}\r\n        InputLabelProps={{\r\n          sx: {\r\n            color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n            \"&.Mui-focused\": {\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        fullWidth\r\n        label=\"Time Limit (in Hours)\"\r\n        type=\"number\"\r\n        name=\"time\"\r\n        value={form?.time}\r\n        onChange={handleChange}\r\n        onWheel={(e) => e.target.blur()}\r\n        sx={{ mb: 3 }}\r\n        required\r\n        error={!!formError?.time}\r\n        helperText={formError?.time}\r\n        InputProps={{\r\n          sx: {\r\n            \"& .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n              borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n            color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n          },\r\n        }}\r\n        InputLabelProps={{\r\n          sx: {\r\n            color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n            \"&.Mui-focused\": {\r\n              color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Box textAlign=\"right\">\r\n        <Button variant=\"outlined\" color=\"error\" onClick={handleCancel}>\r\n          cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{ marginLeft: \"10px\" }}\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n          onClick={() => handleSubmit()}\r\n        >\r\n          {saveLoading ? (\r\n            <CircularProgress size={24} color=\"inherit\" />\r\n          ) : (\r\n            <>{isEdit ? \"Update\" : \"Save\"}</>\r\n          )}\r\n        </Button>\r\n      </Box>\r\n      <ToastContainer />\r\n      <Typography variant=\"h6\" mt={6} mb={2}>\r\n        Existing Payment Type Limits\r\n      </Typography>\r\n\r\n      <Box sx={{ height: 400, width: \"100%\", mt: 2 }}>\r\n        <DataGrid\r\n          rows={limits}\r\n          columns={columns}\r\n          loading={loading}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </Box>\r\n\r\n      <ConfirmationModal\r\n        isOpen={confirmModalOpen}\r\n        onClose={() => setConfirmModalOpen(false)}\r\n        userData={selectedDeleteUser?.type}\r\n        onConfirm={(data) => handleDelete(data)}\r\n        showUser={false}\r\n        loading={isDeleteLoading}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PaymentTypeLimitForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  IconButton,\r\n  Backdrop,\r\n  Grid,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddUserModal = ({\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  userData,\r\n  onEdit,\r\n  resetUserData,\r\n  role,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n    phone: \"\",\r\n    role: \"\",\r\n    department: \"\",\r\n    usertype: \"\",\r\n    hospital: \"DB Tena tabiya\",\r\n  });\r\n\r\n  const [usernameError, setUsernameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(\"\");\r\n  const [confPassError, setConfPassError] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  const departments = [\r\n    \"Card\",\r\n    \"Pharmacy\",\r\n    \"Hospital\",\r\n    \"Tsedey Bank\",\r\n    \"OPD 20\",\r\n    \"OPD 21\",\r\n    \"OPD 22\",\r\n    \"OPD 23\",\r\n    \"OPD 44\",\r\n    \"OPD 63\",\r\n    \"ANC\",\r\n    \"FAMILY PLANNING\",\r\n    \"DELIVERY\",\r\n    \"SURGICAL\",\r\n    \"NICU\",\r\n    \"ART\",\r\n  ];\r\n  const hospitals = [\"DB Tena tabiya\"];\r\n  const usertypes = [\r\n    \"Cashier\",\r\n    \"Supervisor\",\r\n    \"Admin\",\r\n    \"MLT\",\r\n    \"Radiology\",\r\n    \"Doctor\",\r\n    \"Pharmacy\",\r\n  ];\r\n  // (MLT) stand for Medical Laboratory Technician\r\n  const handleClose = () => {\r\n    setFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmpassword: \"\",\r\n      phone: \"\",\r\n      role: \"\",\r\n      department: \"\",\r\n      usertype: \"\",\r\n      hospital: \"DB Tena tabiya\",\r\n    });\r\n    setConfPassError(\"\");\r\n    setEmailError(\"\");\r\n    setUsernameError(\"\");\r\n    resetUserData();\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      setFormData({\r\n        username: userData?.username || \"\",\r\n        email: userData?.email || \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        phone: userData?.phoneNumber || \"\",\r\n        role: userData?.role || \"\",\r\n        department: userData?.departement || \"\",\r\n        usertype: userData?.userType || \"\",\r\n        hospital: userData?.hospital || \"DB Tena tabiya\",\r\n      });\r\n    }\r\n  }, [userData]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === \"email\") validateEmail(e.target.value);\r\n    if (e.target.name === \"phone\") validatePhoneNumber(e.target.value);\r\n    if (e.target.name === \"username\") validateUsername(e.target.value);\r\n    if (e.target.name === \"confirmpassword\") setConfPassError(\"\");\r\n  };\r\n\r\n  const validateUsername = (username) => {\r\n    const usernameRegex = /^[A-Za-z][A-Za-z0-9]{3,}$/;\r\n    setUsernameError(\r\n      usernameRegex.test(username)\r\n        ? \"\"\r\n        : \"Username must start with a letter and be at least 4 characters.\"\r\n    );\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    setEmailError(emailRegex.test(email) ? \"\" : \"Invalid email format.\");\r\n  };\r\n\r\n  const validatePhoneNumber = (phone) => {\r\n    const phoneRegex = /^(?:\\+251|09|07)\\d+$/;\r\n    if (!phoneRegex.test(phone)) {\r\n      setPhoneError(\"Start with +251, 09, or 07 and use only digits.\");\r\n    } else if (phone.startsWith(\"+251\") && phone.length !== 13) {\r\n      setPhoneError(\"+251 numbers must be 13 digits.\");\r\n    } else if (\r\n      (phone.startsWith(\"09\") || phone.startsWith(\"07\")) &&\r\n      phone.length !== 10\r\n    ) {\r\n      setPhoneError(\"09 or 07 numbers must be 10 digits.\");\r\n    } else {\r\n      setPhoneError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!usernameError && !emailError && !phoneError) {\r\n      if (formData.password !== formData.confirmpassword) {\r\n        setConfPassError(\"Passwords do not match.\");\r\n        return;\r\n      }\r\n      if (\r\n        formData.department === \"Tsedey Bank\" &&\r\n        formData.usertype === \"Cashier\"\r\n      ) {\r\n        toast.error(`Bank can't have Cashier user type.`);\r\n        return;\r\n      }\r\n\r\n      userData ? onEdit(formData) : onSubmit(formData);\r\n    } else {\r\n      alert(\"Please fix the errors before submitting.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) handleClose();\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          handleClose();\r\n        }\r\n      }}\r\n      disableEscapeKeyDown\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{ timeout: 500 }}\r\n    >\r\n      <Box\r\n        sx={modalStyle}\r\n        bgcolor={\r\n          theme.palette.mode === \"light\"\r\n            ? theme.palette.background.paper\r\n            : theme.palette.background.default\r\n        }\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Typography variant=\"h6\">\r\n            {userData ? \"Edit User\" : \"Add New User\"}\r\n          </Typography>\r\n          <IconButton onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n\r\n        <Box component=\"form\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={!!userData}\r\n                error={!!usernameError}\r\n                helperText={usernameError}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={!!userData}\r\n                error={!!emailError}\r\n                helperText={emailError}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                value={formData.phone}\r\n                onChange={handleChange}\r\n                error={!!phoneError}\r\n                helperText={phoneError}\r\n                disabled={!!userData}\r\n                required\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"User Type\"\r\n                name=\"usertype\"\r\n                value={formData.usertype}\r\n                onChange={handleChange}\r\n                disabled={!!userData}\r\n                required\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {usertypes.map((type) => (\r\n                  <MenuItem key={type} value={type}>\r\n                    {type}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Department\"\r\n                name=\"department\"\r\n                value={formData.department}\r\n                onChange={handleChange}\r\n                disabled={!!userData}\r\n                required\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {departments.map((dep) => (\r\n                  <MenuItem key={dep} value={dep}>\r\n                    {dep}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Hospital Name\"\r\n                name=\"hospital\"\r\n                value={formData.hospital}\r\n                onChange={handleChange}\r\n                disabled={!!userData}\r\n                required\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {hospitals.map((hosp) => (\r\n                  <MenuItem key={hosp} value={hosp}>\r\n                    {hosp}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={!!userData}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                name=\"confirmpassword\"\r\n                type=\"password\"\r\n                value={formData.confirmpassword}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={!!userData}\r\n                error={!!confPassError}\r\n                helperText={confPassError}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Role\"\r\n                name=\"role\"\r\n                value={userData ? formData.role : \"User\"}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={!userData}\r\n                InputProps={{\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                {role.map((r) => (\r\n                  <MenuItem key={r} value={r}>\r\n                    {r}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box display=\"flex\" justifyContent=\"flex-end\" mt={3}>\r\n            <Button\r\n              onClick={handleClose}\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n            >\r\n              {userData ? \"Save Changes\" : \"Add User\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// Responsive Modal Style\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: { xs: \"90%\", sm: 500, md: 600 },\r\n  maxHeight: \"90vh\",\r\n  overflowY: \"auto\",\r\n  boxShadow: 24,\r\n  p: 3,\r\n  borderRadius: 2,\r\n};\r\n\r\nexport default AddUserModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  IconButton,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst SmartModal = ({ open, onClose, username, onSubmit, clearUserData }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [validationError, setValidationError] = useState({\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      handleClose();\r\n    }\r\n  }, [open]);\r\n\r\n  const validatePassword = (name, value) => {\r\n    const passwordValidationErrors = [];\r\n    if (value.length < 6) {\r\n      passwordValidationErrors.push(\"Passwords must be at least 6 characters.\");\r\n    }\r\n    if (!/[^\\w\\s]/.test(value)) {\r\n      passwordValidationErrors.push(\r\n        \"Passwords must have at least one non-alphanumeric character.\"\r\n      );\r\n    }\r\n    if (!/[a-z]/.test(value)) {\r\n      passwordValidationErrors.push(\r\n        \"Passwords must have at least one lowercase ('a'-'z').\"\r\n      );\r\n    }\r\n    if (!/[A-Z]/.test(value)) {\r\n      passwordValidationErrors.push(\r\n        \"Passwords must have at least one uppercase ('A'-'Z').\"\r\n      );\r\n    }\r\n\r\n    setValidationError((prevError) => ({\r\n      ...prevError,\r\n      [name]: passwordValidationErrors.join(\", \"),\r\n    }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmPassword(\"\");\r\n    setPassword(\"\");\r\n    setError(\"\");\r\n    setValidationError({\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n    clearUserData();\r\n    onClose(); // Close the modal\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (password?.length <= 0 && confirmPassword?.length <= 0) {\r\n      toast.error(\"Please fill the required fields.\");\r\n      setValidationError({\r\n        newPassword: \"Please fill this field.\",\r\n        confirmPassword: \"Please fill this field.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password === confirmPassword) {\r\n      if (validationError.newPassword || validationError.confirmPassword) {\r\n        toast.error(\"Please fix the errors before submitting.\");\r\n        return;\r\n      }\r\n\r\n      onSubmit(username, password, confirmPassword);\r\n      setError(\"\");\r\n      setValidationError({\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n      });\r\n    } else {\r\n      setError(\"Passwords do not match!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleClose(); // Reset and close the modal\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={modalStyle}\r\n          bgcolor={\r\n            theme.palette.mode === \"light\"\r\n              ? theme.palette.background.paper\r\n              : theme.palette.background.default\r\n          }\r\n        >\r\n          {/* Close Button */}\r\n          <IconButton sx={closeButtonStyle} onClick={onClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Set Password for <strong>{username}</strong>\r\n          </Typography>\r\n\r\n          {/* Display Username */}\r\n          <TextField\r\n            label=\"Username\"\r\n            fullWidth\r\n            value={username}\r\n            disabled\r\n            sx={{ marginBottom: 2 }}\r\n            InputProps={{\r\n              sx: {\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              sx: {\r\n                color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n\r\n          {/* Password Fields */}\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            fullWidth\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n              validatePassword(e.target.name, e.target.value);\r\n            }}\r\n            error={!!validationError.newPassword}\r\n            helperText={validationError.newPassword}\r\n            sx={{ marginBottom: 2 }}\r\n            InputProps={{\r\n              sx: {\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              sx: {\r\n                color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            fullWidth\r\n            value={confirmPassword}\r\n            onChange={(e) => {\r\n              setConfirmPassword(e.target.value);\r\n              validatePassword(e.target.name, e.target.value);\r\n            }}\r\n            error={!!validationError.confirmPassword}\r\n            helperText={validationError.confirmPassword}\r\n            sx={{ marginBottom: 2 }}\r\n            InputProps={{\r\n              sx: {\r\n                \"& .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                  borderColor: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n                color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              sx: {\r\n                color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                \"&.Mui-focused\": {\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <Typography color=\"error\" variant=\"body2\" sx={{ marginBottom: 2 }}>\r\n              {error}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* Action Buttons */}\r\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button variant=\"outlined\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n// Modal Styling\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  padding: 4,\r\n  borderRadius: 2,\r\n  boxShadow: 24,\r\n};\r\n\r\n// Close Button Styling\r\nconst closeButtonStyle = {\r\n  position: \"absolute\",\r\n  top: 10,\r\n  right: 10,\r\n};\r\n\r\nexport default SmartModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./UserManagment.css\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { IconButton, Button, useTheme } from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport PasswordIcon from \"@mui/icons-material/VpnKey\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport AddUserModal from \"./AddUserModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport api from \"../utils/api\";\r\nimport SmartModal from \"./SmartModal\";\r\n\r\nconst UserManagment = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [openResetModal, setOpenResetModal] = useState(false);\r\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null); // New state for selected user\r\n  const [rows, setRows] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [role, setRoles] = useState([]);\r\n  const [selectedDelete, setSelectedDelete] = useState(\"\");\r\n  const [selectedDeleteUser, setSelectedDeleteUser] = useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  const handlConfirm = async (params) => {\r\n    setConfirmModalOpen(true);\r\n    setSelectedDeleteUser(params.row.username);\r\n    setSelectedDelete(params.row.id);\r\n  };\r\n\r\n  // Function to run on confirmation\r\n  const handleDeleteConfirmation = async () => {\r\n    try {\r\n      const response = await api.delete(`/Admin/users/${selectedDelete}`);\r\n      if (response.status === 200) {\r\n        toast.success(response.data.message);\r\n        setRefresh((prev) => !prev);\r\n        setConfirmModalOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      toast.error(error?.response?.data?.message);\r\n    } finally {\r\n      setSelectedDelete(\"\");\r\n      setSelectedDeleteUser(\"\");\r\n    }\r\n  };\r\n\r\n  const handleEditUser = async (params) => {\r\n    try {\r\n      setSelectedUser(params.row); // Set selected user data for editing\r\n      setModalOpen(true); // Open the modal for editing\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async (params) => {\r\n    try {\r\n      setUserName(params.row.username);\r\n      setOpenResetModal(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const handleResetSubmit = async (username, password, confirmPassword) => {\r\n    try {\r\n      const response = await api.post(\"/Admin/reset-password\", {\r\n        username: username,\r\n        newPassword: password,\r\n      });\r\n      toast.success(response?.data?.message);\r\n      handleCleare();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      toast.error(error?.response?.data?.message || \"Internal Server Error\");\r\n    } finally {\r\n      setOpenResetModal(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const handleCleare = async () => {\r\n    setUserName(\"\");\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"orderNumber\", headerName: \"ID\", flex: 1 },\r\n    { field: \"username\", headerName: \"UserName\", flex: 1 },\r\n    { field: \"email\", headerName: \"Email\", flex: 1 },\r\n    { field: \"phoneNumber\", headerName: \"PhoneNumber\", flex: 1 },\r\n    { field: \"roles\", headerName: \"Role\", flex: 1 },\r\n    { field: \"departement\", headerName: \"Department\", flex: 1 },\r\n    { field: \"userType\", headerName: \"User Type\", flex: 1 },\r\n    { field: \"hospital\", headerName: \"Hospital Name\", flex: 1 },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            onClick={() => handleEditUser(params)}\r\n            aria-label=\"edit\"\r\n            className=\"text-info\"\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"danger\"\r\n            onClick={() => handlConfirm(params)}\r\n            aria-label=\"delete\"\r\n            className=\"text-danger\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"warning\"\r\n            onClick={() => handleResetPassword(params)}\r\n            aria-label=\"reset password\"\r\n            className=\"text-warnning\"\r\n          >\r\n            <PasswordIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchUserList = async () => {\r\n      try {\r\n        const response = await api.get(\"/Admin/users\");\r\n\r\n        const sortedUsers = response?.data?.sort((a, b) =>\r\n          a.username.localeCompare(b.username)\r\n        );\r\n        const usersWithOrder = sortedUsers.map((user, index) => ({\r\n          ...user,\r\n          orderNumber: index + 1,\r\n        }));\r\n        setRows(usersWithOrder);\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchUserList();\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    const fetchRoles = async () => {\r\n      try {\r\n        const response = await api.get(\"/Admin/roles\");\r\n        setRoles(response?.data?.map((item) => item.name));\r\n      } catch (error) {\r\n        console.error(\"fetchrole>>\", error.message);\r\n        toast.error(\r\n          error?.response?.data?.message ||\r\n            \"Internal Server Error on Role Fetch;\"\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchRoles();\r\n  }, []);\r\n\r\n  const handleAddUser = async (userData) => {\r\n    try {\r\n      const response = await api.post(\"/Admin/users\", {\r\n        username: userData.username,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        phoneNumber: userData.phone,\r\n        userType: userData.usertype,\r\n        departement: userData.department,\r\n        hospital: userData.hospital,\r\n      });\r\n      if (response?.status === 200) {\r\n        toast.success(response?.data?.message);\r\n        setRefresh((prev) => !prev);\r\n        handleReset();\r\n        setModalOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      if (Array.isArray(error?.response?.data)) {\r\n        error?.response?.data?.map((item) => toast.error(item.description));\r\n      } else {\r\n        toast.error(error?.response?.data?.message || \"Internal Server Error.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async (editedUserData) => {\r\n    try {\r\n      const response = await api.post(\"/Admin/change-user-role\", {\r\n        userName: editedUserData.username,\r\n        newRole: editedUserData.role,\r\n      });\r\n      if (response?.status === 200) {\r\n        toast.success(\"Role Changed Success Fully!!\");\r\n        setRefresh((prev) => !prev);\r\n        handleReset();\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      toast.error(\"Internal Server Error.\");\r\n    } finally {\r\n      setModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h1 className=\"hed\">User Management</h1>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n        startIcon={<PersonAddIcon />}\r\n        onClick={() => setModalOpen(true)}\r\n      >\r\n        Add User\r\n      </Button>\r\n\r\n      <AddUserModal\r\n        isOpen={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        onSubmit={handleAddUser}\r\n        onEdit={handleEditSubmit}\r\n        userData={selectedUser}\r\n        resetUserData={handleReset}\r\n        role={role}\r\n      />\r\n      <ConfirmationModal\r\n        isOpen={confirmModalOpen}\r\n        onClose={() => setConfirmModalOpen(false)}\r\n        userData={selectedDeleteUser}\r\n        onConfirm={() => handleDeleteConfirmation()}\r\n      />\r\n      <SmartModal\r\n        open={openResetModal}\r\n        onClose={() => setOpenResetModal(false)}\r\n        username={username}\r\n        onSubmit={handleResetSubmit}\r\n        clearUserData={handleCleare}\r\n      />\r\n      <div className=\"data-grid-container\">\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          autoHeight\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagment;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\n// Sample data\r\nconst rows = [\r\n  { id: 1, name: \"John\", age: 25 },\r\n  { id: 2, name: \"Alice\", age: 30 },\r\n  { id: 3, name: \"Bob\", age: 20 },\r\n  { id: 4, name: \"Eve\", age: 35 },\r\n];\r\n\r\n// Columns\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"name\", headerName: \"Name\", width: 150 },\r\n  { field: \"age\", headerName: \"Age\", width: 100 },\r\n];\r\n\r\n// Filter options\r\nconst filterOptions = [\r\n  { label: \"Equal to\", value: \"=\" },\r\n  { label: \"Greater than\", value: \">\" },\r\n  { label: \"Less than\", value: \"<\" },\r\n  { label: \"Greater or equal\", value: \">=\" },\r\n  { label: \"Less or equal\", value: \"<=\" },\r\n  { label: \"Not equal\", value: \"!=\" },\r\n  { label: \"Between\", value: \"between\" },\r\n];\r\n\r\nexport default function FriendlyAgeFilterDataGrid() {\r\n  const [operator, setOperator] = useState(\"=\");\r\n  const [filterAge, setFilterAge] = useState(\"\");\r\n  const [minAge, setMinAge] = useState(\"\");\r\n  const [maxAge, setMaxAge] = useState(\"\");\r\n\r\n  const filteredRows = useMemo(() => {\r\n    const parsedAge = parseInt(filterAge);\r\n    const min = parseInt(minAge);\r\n    const max = parseInt(maxAge);\r\n\r\n    if (operator === \"between\") {\r\n      if (isNaN(min) || isNaN(max)) return rows;\r\n      return rows.filter((row) => row.age >= min && row.age <= max);\r\n    }\r\n\r\n    if (isNaN(parsedAge)) return rows;\r\n\r\n    return rows.filter((row) => {\r\n      switch (operator) {\r\n        case \">\":\r\n          return row.age > parsedAge;\r\n        case \"<\":\r\n          return row.age < parsedAge;\r\n        case \"=\":\r\n          return row.age === parsedAge;\r\n        case \">=\":\r\n          return row.age >= parsedAge;\r\n        case \"<=\":\r\n          return row.age <= parsedAge;\r\n        case \"!=\":\r\n          return row.age !== parsedAge;\r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  }, [operator, filterAge, minAge, maxAge]);\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Grid container spacing={2} alignItems=\"center\" mb={2}>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Filter Type</InputLabel>\r\n            <Select\r\n              value={operator}\r\n              label=\"Filter Type\"\r\n              onChange={(e) => setOperator(e.target.value)}\r\n            >\r\n              {filterOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        {operator === \"between\" ? (\r\n          <>\r\n            <Grid item xs={6} sm={4}>\r\n              <TextField\r\n                label=\"Min Age\"\r\n                type=\"number\"\r\n                value={minAge}\r\n                onChange={(e) => setMinAge(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={4}>\r\n              <TextField\r\n                label=\"Max Age\"\r\n                type=\"number\"\r\n                value={maxAge}\r\n                onChange={(e) => setMaxAge(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Age\"\r\n              value={filterAge}\r\n              onChange={(e) => setFilterAge(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      <DataGrid\r\n        rows={filteredRows}\r\n        columns={columns}\r\n        autoHeight\r\n        sx={{ minWidth: 320 }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport PieChart from \"../../components/PieChart\";\r\n\r\nconst Pie = () => {\r\n  return (\r\n    <Box m=\"20px\">\r\n      <Header title=\"Pie Chart\" subtitle=\"Simple Pie Chart\" />\r\n      <Box height=\"75vh\">\r\n        <PieChart />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Pie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  CircularProgress,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport ReceiptLongIcon from \"@mui/icons-material/ReceiptLong\";\r\nimport CreditCardIcon from \"@mui/icons-material/CreditCard\";\r\nimport api from \"../utils/api\";\r\nimport { generatePDF } from \"../pages/hospitalpayment/HospitalPayment\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst formatter2 = new Intl.NumberFormat(\"en-US\", {\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n  useGrouping: true,\r\n});\r\n\r\nconst formatAccounting2 = (num) => {\r\n  const formatted = formatter2.format(Math.abs(num));\r\n  return num < 0 ? `(${formatted})` : formatted;\r\n};\r\n\r\nconst ReportReceiptFetcher = () => {\r\n  const [tab, setTab] = useState(0);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [receiptNumber, setReceiptNumber] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [receiptData, setReceiptData] = useState([]);\r\n  const [errorM, setErrorM] = useState(\"\");\r\n  const [dispPrint, setDispPrint] = useState(false);\r\n  const theme = useTheme();\r\n  const ReceiptRegex = /^[a-zA-Z0-9-]+$/;\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", flex: 1 },\r\n    { field: \"registeredOn\", headerName: \"Date\", flex: 1 },\r\n    { field: \"referenceNo\", headerName: \"Reciept Number\", flex: 1 },\r\n    { field: \"patientCardNumber\", headerName: \"Card Number\", flex: 1 },\r\n    { field: \"patientName\", headerName: \"Patient Name\", flex: 1 },\r\n    {\r\n      field: \"paymentAmount\",\r\n      headerName: \"Amount\",\r\n      flex: 1,\r\n      renderCell: (params) => formatAccounting2(params.row.paymentAmount),\r\n    },\r\n    {\r\n      field: \"paymentType\",\r\n      headerName: \"Payment Method\",\r\n      flex: 1,\r\n    },\r\n    { field: \"paymentReason\", headerName: \"Reason\", flex: 1 },\r\n    {\r\n      field: \"isReversed\",\r\n      headerName: \"IsReversed\",\r\n      flex: 1,\r\n      renderCell: (params) =>\r\n        params?.row?.isReversed && (\r\n          <p\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-start\",\r\n              padding: 0,\r\n              marginTop: \"0\",\r\n              color: \"red\",\r\n              gap: \"3px\",\r\n            }}\r\n          >\r\n            <LockIcon color=\"error\" fontSize=\"small\" />\r\n            <span>Reversed</span>\r\n          </p>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const exportToExcel = (data) => {\r\n    try {\r\n      if (!data || data.length === 0) return;\r\n\r\n      const { patientCardNumber, hospitalName, department, registeredBy } =\r\n        data[0];\r\n\r\n      // Seal-style header section (4 rows)\r\n      const headerSection = [\r\n        [\"Card Number\", patientCardNumber],\r\n        [\"Hospital Name\", hospitalName],\r\n        [\"Department\", department],\r\n        [\"Cashier\", registeredBy],\r\n        [], // <-- blank row\r\n      ];\r\n\r\n      // Extract data table (excluding repeating fields)\r\n      const tableData = data.map(\r\n        ({\r\n          patientCardNumber,\r\n          hospitalName,\r\n          department,\r\n          registeredBy,\r\n          ...rest\r\n        }) => rest\r\n      );\r\n\r\n      // Create sheet from header\r\n      const ws = XLSX.utils.aoa_to_sheet(headerSection);\r\n\r\n      // Add table data after the blank row (origin: row 6 = index 5)\r\n      XLSX.utils.sheet_add_json(ws, tableData, {\r\n        origin: { r: headerSection.length, c: 0 },\r\n        skipHeader: false,\r\n      });\r\n\r\n      // Optional styling for better visuals\r\n      const range = XLSX.utils.decode_range(ws[\"!ref\"]);\r\n      for (let C = range.s.c; C <= range.e.c; ++C) {\r\n        const cellRef = XLSX.utils.encode_cell({\r\n          r: headerSection.length,\r\n          c: C,\r\n        });\r\n        if (!ws[cellRef]) continue;\r\n        ws[cellRef].s = {\r\n          font: { bold: true },\r\n          alignment: { horizontal: \"center\" },\r\n          border: {\r\n            top: { style: \"thin\", color: { rgb: \"000000\" } },\r\n            bottom: { style: \"thin\", color: { rgb: \"000000\" } },\r\n          },\r\n        };\r\n      }\r\n\r\n      // Workbook creation\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, `Patient Report of ${cardNumber}`);\r\n      XLSX.writeFile(\r\n        wb,\r\n        `Patient Report ${new Date().toISOString().slice(0, 10)}.xlsx`\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Excel export failed:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePrint = async () => {\r\n    try {\r\n      if (tab === 0 && cardNumber) {\r\n        if (reportData.length > 0) {\r\n          exportToExcel(\r\n            reportData.map(({ id, isCollected, collectionID, ...rest }) => rest)\r\n          );\r\n        } else {\r\n          toast.error(\"Data is Empty.\");\r\n        }\r\n      } else if (tab === 1 && receiptNumber) {\r\n        if (receiptData.length > 0) {\r\n          if (receiptData?.some((item) => item.isReversed === true)) {\r\n            toast.error(\"Reversed receipt can't be printed.\");\r\n            return;\r\n          }\r\n          const data = await transformPayments(receiptData || []);\r\n          generatePDF(data);\r\n        } else {\r\n          toast.error(\"Data is Empty.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Printing Task Erro: \", error);\r\n    }\r\n  };\r\n\r\n  const transformPayments = async (data) => {\r\n    if (!data || data.length === 0) return null;\r\n\r\n    const first = data[0];\r\n\r\n    const result = {\r\n      refNo: first?.referenceNo,\r\n      id: first?.id,\r\n      cardNumber: first?.patientCardNumber,\r\n      recipt: first?.recipt,\r\n      patientName: first?.patientName,\r\n      hospitalName: first?.hospitalName,\r\n      department: first?.department,\r\n      amount: data.map((item) => ({\r\n        purpose: item.paymentReason,\r\n        amount: item.paymentAmount,\r\n      })),\r\n      cbhiId: first?.patientCBHI_ID,\r\n      createdby: first?.registeredBy,\r\n      method: first?.paymentType,\r\n      digitalChannel: first?.paymentChannel,\r\n      trxref: first?.paymentVerifingID,\r\n      patientLoaction: first?.patientWoreda,\r\n      organization: first?.patientWorkingPlace,\r\n      employeeId: first?.patientWorkID,\r\n      description: first?.paymentDescription,\r\n      createdOn: first?.registeredOn,\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      setLoading(true);\r\n      if (tab === 0 && cardNumber) {\r\n        const response = await api.put(\"/Payment/payment-by-cardNumber\", {\r\n          patientCardNumber: cardNumber,\r\n        });\r\n        if (response?.data?.length > 0) {\r\n          setDispPrint(true);\r\n          const mod = response.data?.map(({ rowId, ...rest }) => ({\r\n            id: rowId,\r\n            ...rest,\r\n          }));\r\n          setReportData(mod);\r\n        } else if (response?.data?.length <= 0) {\r\n          toast.info(\"Card Number Not Found.\");\r\n        }\r\n      } else if (tab === 1 && receiptNumber) {\r\n        const response2 = await api.put(\"/Payment/payment-by-refno\", {\r\n          paymentId: receiptNumber,\r\n        });\r\n\r\n        if (response2?.data?.length > 0) {\r\n          setDispPrint(true);\r\n          const modData = response2?.data?.map(({ rowId, ...rest }) => ({\r\n            id: rowId,\r\n            ...rest,\r\n          }));\r\n          setReceiptData(modData);\r\n        } else if (response2?.data?.length <= 0) {\r\n          toast.info(\"Receipt Not Found.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error?.response?.data || \"Internal Server Error.\");\r\n      setDispPrint(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCardNumber(\"\");\r\n    setReceiptNumber(\"\");\r\n    setDispPrint(false);\r\n    setErrorM(\"\");\r\n    setReportData([]);\r\n    setReceiptData([]);\r\n  }, [tab]);\r\n\r\n  const validateReceipt = (value) => {\r\n    if (!ReceiptRegex.test(value) && value?.length > 0) {\r\n      setErrorM(\"Please Insert Valid Receipt Number.\");\r\n    } else {\r\n      setErrorM(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      sx={{ p: 3, borderRadius: \"2xl\", boxShadow: 3, marginInline: \"15px\" }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {tab === 0\r\n            ? \"Find Patient By Card Number\"\r\n            : \"Generate Receipt by Receipt Number\"}\r\n        </Typography>\r\n\r\n        <Tabs\r\n          value={tab}\r\n          onChange={(e, val) => setTab(val)}\r\n          sx={{ mb: 2 }}\r\n          TabIndicatorProps={{\r\n            style: { backgroundColor: \"#1976d2\" }, // underline color\r\n          }}\r\n        >\r\n          <Tab\r\n            icon={<CreditCardIcon />}\r\n            label=\"Report by Card Number\"\r\n            sx={{\r\n              \"&.Mui-selected\": {\r\n                color: \"#a2b9f5\",\r\n              },\r\n            }}\r\n          />\r\n          <Tab\r\n            icon={<ReceiptLongIcon />}\r\n            label=\"Receipt\"\r\n            sx={{\r\n              \"&.Mui-selected\": {\r\n                color: \"#a2b9f5\",\r\n              },\r\n            }}\r\n          />\r\n        </Tabs>\r\n\r\n        <Box display=\"flex\" alignItems=\"center\" gap={2} mb={3}>\r\n          {tab === 0 ? (\r\n            <TextField\r\n              label=\"Card Number\"\r\n              variant=\"outlined\"\r\n              value={cardNumber}\r\n              onChange={(e) => {\r\n                setDispPrint(false);\r\n                setReportData([]);\r\n                setCardNumber(e.target.value);\r\n              }}\r\n              fullWidth\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          ) : (\r\n            <TextField\r\n              label=\"Receipt Number\"\r\n              variant=\"outlined\"\r\n              value={receiptNumber}\r\n              onChange={(e) => {\r\n                setReceiptData([]);\r\n                setDispPrint(false);\r\n                const val = e.target.value;\r\n                validateReceipt(val);\r\n                setReceiptNumber(val);\r\n              }}\r\n              fullWidth\r\n              error={!!errorM}\r\n              helperText={errorM}\r\n              InputProps={{\r\n                sx: {\r\n                  \"& .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                    borderColor:\r\n                      theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                  color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                sx: {\r\n                  color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                  \"&.Mui-focused\": {\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {!dispPrint && (\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={() => handleSearch()}\r\n              disabled={\r\n                loading ||\r\n                (tab === 0 ? !cardNumber : !receiptNumber) ||\r\n                !!errorM\r\n              }\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Search\"}\r\n            </Button>\r\n          )}\r\n\r\n          {dispPrint && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              onClick={() => handlePrint()}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Print\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <DataGrid\r\n          autoHeight\r\n          rows={tab === 0 ? reportData : receiptData}\r\n          columns={columns}\r\n          disableRowSelectionOnClick\r\n          sx={{ minWidth: 320 }}\r\n        />\r\n      </CardContent>\r\n      <ToastContainer />\r\n    </Card>\r\n  );\r\n};\r\nexport default ReportReceiptFetcher;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Stack,\r\n  CircularProgress,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CancelPresentationTwoTone } from \"@mui/icons-material\";\r\n\r\nconst AddHospitalServices = ({\r\n  isOpen = false,\r\n  setIsOpen,\r\n  onSubmit,\r\n  loading,\r\n  setLoading,\r\n}) => {\r\n  const [rows, setRows] = useState([]);\r\n  const fileInput = useRef(null);\r\n  const columns = [\r\n    { field: \"Name\", headerName: \"Hospital Services\", flex: 1 },\r\n    { field: \"ShortCode\", headerName: \"Short Code\", flex: 1 },\r\n    { field: \"Group\", headerName: \"Group\", flex: 1 },\r\n    { field: \"SubGroup\", headerName: \"SubGroup\", flex: 1 },\r\n    { field: \"Amount\", headerName: \"Amount\", flex: 1 },\r\n  ];\r\n\r\n  const handleFileUpload = (event) => {\r\n    try {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = new Uint8Array(e.target.result);\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const sheet = workbook.Sheets[sheetName];\r\n        const parsedData = XLSX.utils.sheet_to_json(sheet);\r\n\r\n        const rowsData = parsedData.map((prev, index) => ({\r\n          id: index + 1,\r\n          ...prev,\r\n        }));\r\n\r\n        setRows(rowsData);\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    } catch (error) {\r\n      console.error(\"File Upload Error: \", error);\r\n    }\r\n  };\r\n\r\n  const handleUploadToServer = async () => {\r\n    try {\r\n      onSubmit({\r\n        purpose: rows.map((item) => item.Name),\r\n        amount: rows.map((item) => item.Amount),\r\n        shortCode: rows.map((item) => item.ShortCode),\r\n        group: rows.map((item) => item.Group),\r\n        subgroup: rows.map((item) => item.SubGroup),\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Upload failed.\");\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    try {\r\n      setIsOpen(false);\r\n      setRows([]);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Close error\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      handleClose();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleReset = () => {\r\n    setRows([]);\r\n    fileInput.current.value = null;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n          handleClose();\r\n        }\r\n      }}\r\n      aria-labelledby=\"modal-title\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"80%\",\r\n          maxHeight: \"90vh\",\r\n          overflowY: \"auto\",\r\n          bgcolor: \"background.paper\",\r\n          boxShadow: 24,\r\n          p: 4,\r\n          borderRadius: 3,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" gutterBottom id=\"modal-title\">\r\n          Upload Hospital Services (Excel)\r\n        </Typography>\r\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\" mb={2}>\r\n          <input\r\n            ref={fileInput}\r\n            type=\"file\"\r\n            accept=\".xlsx, .xls\"\r\n            onChange={handleFileUpload}\r\n          />\r\n          <IconButton\r\n            onClick={handleReset}\r\n            color=\"error\"\r\n            sx={{ marginLeft: 2 }}\r\n          >\r\n            <CancelPresentationTwoTone />\r\n          </IconButton>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={!rows.length || loading}\r\n            onClick={handleUploadToServer}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : \"Upload to Database\"}\r\n          </Button>\r\n        </Stack>\r\n        <Box sx={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            autoHeight\r\n            sx={{ minWidth: 320 }}\r\n          />\r\n        </Box>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"right\", width: \"100%\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ margin: \"10px\" }}\r\n            onClick={() => handleClose()}\r\n            color=\"error\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddHospitalServices;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  FormHelperText,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\n\r\n// Replace with your actual token getter and API helper\r\nimport api from \"../utils/api\";\r\nimport { fetchPatientName } from \"../services/user_service\";\r\nimport { renderETDateAtCell } from \"./PatientSearch\";\r\n\r\nconst initialFormState = {\r\n  mrn: \"\",\r\n  id: \"\",\r\n  goth: \"\",\r\n  kebele: \"\",\r\n  expDate: \"\",\r\n  referralNumber: \"\",\r\n  letterNumber: \"\",\r\n  examination: \"\",\r\n};\r\n\r\nconst controllerError = (state, action) => {\r\n  if (action.name === \"Reset\") return initialFormState;\r\n  return { ...state, [action.name]: action.values };\r\n};\r\n\r\nconst requiredFields = {\r\n  mrn: \"MRN\",\r\n  id: \"ID\",\r\n  kebele: \"Woreda/Kebele\",\r\n  expDate: \"Expiration Date\",\r\n};\r\n\r\nfunction CBHIUsersManager() {\r\n  const [users, setUsers] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [formData, setFormData] = useState(initialFormState);\r\n  const [formDataError, setFormDataError] = useReducer(\r\n    controllerError,\r\n    initialFormState\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [woredas, setWoredas] = useState([]);\r\n  const [refresh, setReferesh] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [patientName, setPatientName] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  //Fetch Providers\r\n  useEffect(() => {\r\n    const fetchWoredas = async () => {\r\n      try {\r\n        const response = await api.get(`/Providers/list-providers`);\r\n        if (response.status === 200) {\r\n          setWoredas(response?.data?.map((item) => item.provider));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Fetch woredas error:\", error);\r\n      }\r\n    };\r\n    fetchWoredas();\r\n  }, []);\r\n\r\n  //Get data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.post(`/Patient/get-patient-cbhi`);\r\n\r\n        if (response.status === 200) {\r\n          const dataMod =\r\n            Array.isArray(response?.data?.data?.value) &&\r\n            response.data.data.value.length > 0\r\n              ? response.data.data.value\r\n                  .map(\r\n                    (\r\n                      {\r\n                        patientFirstName = \"\",\r\n                        patientMiddleName = \"\",\r\n                        patientLastName = \"\",\r\n                        rowID,\r\n                        ...rest\r\n                      },\r\n                      index\r\n                    ) => ({\r\n                      ...rest,\r\n                      patientFName:\r\n                        `${patientFirstName} ${patientMiddleName} ${patientLastName}`.trim(),\r\n                      id: index + 1,\r\n                    })\r\n                  )\r\n                  .sort((a, b) => b.id - a.id)\r\n              : [];\r\n          setUsers(dataMod);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Fetch woredas error:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [refresh]);\r\n\r\n  const handleOpen = (data = null) => {\r\n    if (data !== null) {\r\n      const updateData = {\r\n        mrn: data?.mrn,\r\n        id: data?.idNo,\r\n        goth: data?.goth,\r\n        kebele: data?.provider,\r\n        expDate: data?.expDate,\r\n        referralNumber: data?.referalNo,\r\n        letterNumber: data?.letterNo,\r\n        examination: data?.examination,\r\n      };\r\n      setFormData(updateData);\r\n    } else {\r\n      setFormData(initialFormState);\r\n    }\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false);\r\n    setFormData(initialFormState);\r\n    setFormDataError({ name: \"Reset\" });\r\n    setPatientName(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"mrn\") {\r\n      setPatientName(\"\");\r\n      mrnCheck(name, value);\r\n    } else letterNumberCheck(name, value);\r\n\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const missingFields = Object.keys(requiredFields).filter(\r\n        (key) => !formData[key]\r\n      );\r\n\r\n      if (missingFields?.length > 0) {\r\n        const fieldNames = missingFields\r\n          .map((key) => requiredFields[key])\r\n          .join(\", \");\r\n\r\n        missingFields?.map((item) => {\r\n          setFormDataError({\r\n            name: item,\r\n            values: \"Please fill this field\",\r\n          });\r\n        });\r\n\r\n        toast.error(\r\n          `Please fill in the following required fields: ${fieldNames}`\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (Object.values(formDataError).some((err) => err.length > 0)) {\r\n        toast.error(\"Please fix the errors.\");\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        provider: formData?.kebele,\r\n        service: \"CBHI\",\r\n        kebele: formData?.kebele,\r\n        goth: formData?.goth,\r\n        idNo: formData?.id,\r\n        referalNo: formData?.referralNumber,\r\n        letterNo: formData?.letterNumber,\r\n        examination: formData?.examination,\r\n        expDate: formData?.expDate,\r\n        cardNumber: `${Number(formData?.mrn)}`,\r\n      };\r\n\r\n      const response = await api.post(\"/Patient/add-patient-cbhi\", payload);\r\n      if (response?.status === 201) {\r\n        toast.success(\r\n          response?.data?.msg || \"CBHI User Regustered Success Fully.\"\r\n        );\r\n        setReferesh((prev) => !prev);\r\n        setPatientName(\"\");\r\n        handleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Save error:\", error);\r\n      toast.error(\"Failed to save user.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"patientCardNumber\", headerName: \"MRN\", flex: 1 },\r\n    { field: \"patientFName\", headerName: \"Patient Name\", flex: 1 },\r\n    { field: \"idNo\", headerName: \"ID\", flex: 1 },\r\n    { field: \"woreda\", headerName: \"Woreda/Kebele\", flex: 1 },\r\n    { field: \"goth\", headerName: \"Goth\", flex: 1 },\r\n    { field: \"referalNo\", headerName: \"Referral No.\", flex: 1 },\r\n    { field: \"letterNo\", headerName: \"Letter No.\", flex: 1 },\r\n    { field: \"examination\", headerName: \"Examination\", flex: 1 },\r\n    {\r\n      field: \"expDate\",\r\n      headerName: \"Expired Date\",\r\n      flex: 1,\r\n      renderCell: (params) => {\r\n        return renderETDateAtCell(params?.row?.expDate);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const mrnCheck = (name, value) => {\r\n    const valid = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/.test(value);\r\n    setFormDataError({\r\n      name,\r\n      values: valid ? \"\" : \"Please enter valid MRN (5+ digits).\",\r\n    });\r\n  };\r\n\r\n  const letterNumberCheck = (name, value) => {\r\n    const valid = /^[a-zA-Z0-9\\u1200-\\u137F\\s/\\\\]+$/.test(value);\r\n    setFormDataError({\r\n      name,\r\n      values: valid ? \"\" : \"Letters and numbers and \\\\ / only.\",\r\n    });\r\n  };\r\n\r\n  const handleChangeTime = (fieldName, selectedDate) => {\r\n    const jsDate = new Date(selectedDate);\r\n    if (isNaN(jsDate.getTime())) return;\r\n    const tzOffset = jsDate.getTimezoneOffset();\r\n    const offsetStr = `${tzOffset <= 0 ? \"+\" : \"-\"}${String(\r\n      Math.abs(tzOffset / 60)\r\n    ).padStart(2, \"0\")}:${String(Math.abs(tzOffset % 60)).padStart(2, \"0\")}`;\r\n    const localDate = new Date(jsDate.getTime() - tzOffset * 60000);\r\n    const dateStr = localDate.toISOString().slice(0, 19).replace(\"T\", \" \");\r\n    const sqlDateOffset = `${dateStr} ${offsetStr}`;\r\n    setFormData((prev) => ({ ...prev, [fieldName]: sqlDateOffset }));\r\n    setFormDataError({ name: fieldName, values: \"\" });\r\n  };\r\n\r\n  const handleGetPatientName = async () => {\r\n    try {\r\n      setIsFetching(true);\r\n\r\n      if (patientName?.length <= 0) {\r\n        if (formDataError?.mrn?.length <= 0 && formData?.mrn?.length > 0) {\r\n          const response = await fetchPatientName(formData?.mrn);\r\n\r\n          if (response?.length > 0) {\r\n            setPatientName(response);\r\n          } else {\r\n            toast.error(\"Card Number Not Registered.\");\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <ToastContainer />\r\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\r\n        <Typography variant=\"h5\" fontWeight=\"bold\">\r\n          CBHI Users Management\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color={theme.palette.mode === \"light\" ? \"info\" : \"success\"}\r\n          startIcon={<Add />}\r\n          onClick={() => handleOpen()}\r\n        >\r\n          Add CBHI User\r\n        </Button>\r\n      </Box>\r\n\r\n      <DataGrid\r\n        autoHeight\r\n        rows={users}\r\n        columns={columns}\r\n        sx={{ boxShadow: 3, borderRadius: 2, minWidth: 320 }}\r\n      />\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={(event, reason) => {\r\n          if (reason !== \"backdropClick\" && reason !== \"escapeKeyDown\") {\r\n            handleClose(); // Reset and close the modal\r\n          }\r\n        }}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        disableEnforceFocus // to remove focus warning\r\n      >\r\n        <DialogTitle>Add CBHI User</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} mt={1}>\r\n            {[\r\n              { label: \"MRN\", name: \"mrn\" },\r\n              { label: \"ID\", name: \"id\" },\r\n              { label: \"Woreda/Kebele\", name: \"kebele\" },\r\n              { label: \"Goth\", name: \"goth\" },\r\n              { label: \"Expired Date\", name: \"expDate\" },\r\n              { label: \"Referral Number\", name: \"referralNumber\" },\r\n              { label: \"Letter Number\", name: \"letterNumber\" },\r\n              { label: \"Examination\", name: \"examination\" },\r\n            ].map(({ label, name }) => (\r\n              <Grid item xs={12} sm={6} key={name}>\r\n                {name === \"expDate\" ? (\r\n                  <EtDatePicker\r\n                    label={label}\r\n                    name={name}\r\n                    required\r\n                    error={!!formDataError[name]}\r\n                    helperText={formDataError[name]}\r\n                    value={formData[name] ? new Date(formData[name]) : null}\r\n                    onChange={(e) => handleChangeTime(name, e)}\r\n                    sx={{ width: \"100%\" }}\r\n                    InputProps={{\r\n                      sx: {\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      sx: {\r\n                        color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                        \"&.Mui-focused\": {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                ) : name === \"kebele\" ? (\r\n                  <FormControl\r\n                    required\r\n                    fullWidth\r\n                    error={!!formDataError[name]}\r\n                    sx={{\r\n                      \"& .MuiInputLabel-root\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                        \"&.Mui-focused\": {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                      \"& .MuiOutlinedInput-root\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  >\r\n                    <InputLabel>{label}</InputLabel>\r\n                    <Select\r\n                      name={name}\r\n                      value={formData[name]}\r\n                      onChange={handleChange}\r\n                      label={label}\r\n                    >\r\n                      {woredas.map((w) => (\r\n                        <MenuItem key={w} value={w}>\r\n                          {w}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <FormHelperText>{formDataError[name]}</FormHelperText>\r\n                  </FormControl>\r\n                ) : name === \"mrn\" ? (\r\n                  <TextField\r\n                    fullWidth\r\n                    label={label}\r\n                    name={name}\r\n                    value={formData[name]}\r\n                    onChange={handleChange}\r\n                    required={[\"mrn\", \"id\", \"kebele\"].includes(name)}\r\n                    error={!!formDataError[name]}\r\n                    helperText={\r\n                      formDataError[name]?.length > 0\r\n                        ? formDataError[name]\r\n                        : patientName\r\n                    }\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          {isFetching && (\r\n                            <CircularProgress size={24} color=\"inherit\" />\r\n                          )}\r\n                        </InputAdornment>\r\n                      ),\r\n                      sx: {\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      sx: {\r\n                        color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                        \"&.Mui-focused\": {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                    }}\r\n                    FormHelperTextProps={{\r\n                      style: {\r\n                        color: !!formDataError?.mrn ? \"red\" : \"green\",\r\n                        fontSize: \"14px\",\r\n                      },\r\n                    }}\r\n                    onBlurCapture={() => handleGetPatientName()}\r\n                  />\r\n                ) : (\r\n                  <TextField\r\n                    fullWidth\r\n                    label={label}\r\n                    name={name}\r\n                    value={formData[name]}\r\n                    onChange={handleChange}\r\n                    multiline={name === \"examination\"}\r\n                    rows={name === \"examination\" ? 4 : 1}\r\n                    required={[\"mrn\", \"id\", \"kebele\"].includes(name)}\r\n                    error={!!formDataError[name]}\r\n                    helperText={formDataError[name]}\r\n                    InputProps={{\r\n                      sx: {\r\n                        \"& .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                          borderColor:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      sx: {\r\n                        color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                        \"&.Mui-focused\": {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                )}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"outlined\" color=\"error\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            color={theme.palette.mode === \"dark\" ? \"secondary\" : \"primary\"}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={20} /> : \"Save\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CBHIUsersManager;\r\n"],"names":["Bar","_jsxs","Box","m","children","_jsx","Header","title","subtitle","height","BarChart","initialItem","medication","dosage","frequency","duration","instructions","DoctorPrescription","theme","useTheme","cardNumber","setCardNumber","useState","cardNumberError","setCardNumberError","patientName","setPatientName","loading","setLoading","isSending","setIsSending","prescriptionItems","setPrescriptionItems","prescriptionItemsError","setPrescriptionItemsError","rows","setRows","selectedRow","setSelectedRow","open","setOpen","brandColor","sectionBgColor","palette","mode","background","paper","handleClose","handleChange","index","field","value","items","map","item","i","_objectSpread","letterOnlyCheck","key","test","length","fetchData","async","_response$data","_response$data$data","response","api","get","data","sorted","result","forEach","entry","fullDate","createdOn","patientCardNumber","Array","isArray","requestedItems","patientGroup","find","g","date","patientInfo","patientFirstName","patientMiddleName","patientLastName","patientGender","services","push","_item$requestedServic","serviceName","requestedServices","trim","toLowerCase","existingService","s","details","count","parseInt","procedeureCount","totalCount","sort","a","b","Date","error","console","groupRequestsByPatientAndDate","formatted","_item$patientInfo","_item$patientInfo2","_item$patientInfo3","_item$patientInfo4","id","filter","Boolean","join","gender","useEffect","sx","display","flexDirection","justifyContent","alignItems","p","concat","grey","marginInline","Paper","elevation","width","borderRadius","backgroundColor","Typography","variant","align","fontWeight","mb","color","Grid","container","spacing","xs","md","TextField","label","onChange","e","target","onBlur","fullName","fetchPatientName","toast","err","fullWidth","helperText","InputProps","endAdornment","InputAdornment","position","CircularProgress","size","borderColor","InputLabelProps","disabled","action","disabledBackground","Divider","my","_prescriptionItemsErr","_prescriptionItemsErr2","_prescriptionItemsErr3","_prescriptionItemsErr4","_prescriptionItemsErr5","_prescriptionItemsErr6","_prescriptionItemsErr7","_prescriptionItemsErr8","_prescriptionItemsErr9","_prescriptionItemsErr0","border","divider","default","sm","IconButton","onClick","warning","_","removeMedication","ml","DeleteIcon","Button","addMedication","startIcon","AddIcon","textTransform","primary","main","hover","dark","textAlign","gap","flexWrap","every","px","py","boxShadow","transition","some","Object","values","each","payload","patientCardnumber","reqestedTo","requestItems","prodedures","prodeduresCount","measurment","instruction","post","status","success","_err$response","_err$response$data","errorDescription","handleSubmit","mt","text","DataGrid","columns","headerName","flex","density","autoHeight","light","borderBottom","minWidth","onRowDoubleClick","params","row","Drawer","anchor","onClose","bgcolor","pt","pb","fontFamily","Stack","direction","InfoOutlinedIcon","fontSize","Tooltip","CloseIcon","flexGrow","overflowY","pr","_Fragment","PersonOutlineIcon","secondary","MedicationOutlinedIcon","List","disablePadding","service","idx","borderLeft","capitalizeWords","detail","measurement","ToastContainer","tokenvalue","getTokenValue","EmployeeUploadManager","fileData","setFileData","setData","refresh","setRefresh","isModalOpen","setIsModalOpen","selectedStaff","setSelectedStaff","isConfOpen","setIsConfOpen","deleteId","setDeleteId","handleConfClose","_error$response4","fetchEmp","renderCell","handleEdit","className","EditIcon","_params$row","employeeID","handlConfirm","Container","gutterBottom","padding","marginBottom","accept","type","event","file","files","reader","FileReader","onload","Uint8Array","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","withIds","sheet_to_json","_ref","HospitalName","rest","_objectWithoutProperties","_excluded","assignedLocation","prev","readAsArrayBuffer","handleFileUpload","style","htmlFor","component","CloudUploadIcon","handleDeleteAll","marginLeft","CancelPresentationTwoTone","Item","employeeName","employeePhone","employeeEmail","assignedAs","assignedBy","contactMethod","user","name","_error$response2","_error$response3","components","ErrorOverlay","CustomErrorOverlay","EditStaffModal","staffData","onSave","updatedArray","_error$response","_error$response$data","message","isloading","ConfirmationModal","isOpen","onConfirm","userData","PatientTransactionsModal","_rows$","_rows$2","sharedCardNumber","sharedPatientName","patientFName","formatAccounting2","amount","Dialog","reason","maxWidth","scroll","disableEnforceFocus","DialogTitle","right","top","DialogContent","dividers","disableSelectionOnClick","selected","DialogActions","PieChart","colors","tokens","ResponsivePie","axis","domain","line","stroke","legend","fill","ticks","strokeWidth","legends","margin","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","enableArcLabels","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","defs","stagger","rotation","lineWidth","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","getStatusIcon","_theme$palette","CheckCircleIcon","PaidIcon","HourglassEmptyIcon","CancelIcon","HelpOutlineIcon","tokenValue","TreatmentEntry","_Object$entries","_testsToComplete$filt","_testsToComplete$filt2","treatments","setTreatments","isLoading","setIsLoading","tabValue","setTabValue","search","setSearch","dialogOpen","setDialogOpen","selectedTests","setSelectedTests","requestedFrom","setRequestedFrom","completeDialogOpen","setCompleteDialogOpen","testsToComplete","setTestsToComplete","completedSelectedTests","setCompletedSelectedTests","completingPatient","setCompletingPatient","completeIsLoading","setCompleteIsLoading","checkboxColor","_tokenValue$UserType","_tokenValue$UserType$","_res$data","_res$data$data","requestedTo","UserType","includes","res","raw","groupedMap","Map","requestedDepartment","slice","replace","has","set","requestedReason","requestGroup","requestingDepartment","tests","paid","totalPrice","group","requeststatus","price","grouped","msg","paidTabs","useMemo","_Array$from","statuses","Set","flatMap","t","filtered","_row$paid","lowerStatuses","matchesTab","matchesSearch","_Array$from2","distinctValue","_params$row2","TaskAltIcon","handleCloseMarkAsCompletedModal","handleCloseViewDetailsModal","handleCategorySelect","checked","categoryName","categoryTests","requestCatagory","toAdd","Tabs","newVal","mx","Tab","Refresh","getRowId","handleDoubleClick","_event$currentTarget$","nodeName","currentTarget","querySelector","contains","TransitionComponent","Fade","BackdropProps","maxHeight","overflow","entries","reduce","acc","category","pl","FolderSpecialIcon","MedicalServicesIcon","AssignmentLateIcon","_ref2","selectedCount","indeterminate","FormControlLabel","control","Checkbox","isSelected","cursor","readOnly","responses","Promise","all","numericId","Number","put","headers","handleMarkAsCompleted","modalStyle","transform","userRole","Modal","disableEscapeKeyDown","closeAfterTransition","BackdropComponent","Backdrop","timeout","info","InfoIcon","mr","isCustomLineColors","isDashboard","today","setHours","startDate","setDate","getDate","setResult","endDate","summary","paymentType","payment","dateKey","registeredOn","toISOString","split","parseFloat","paymentAmount","mapped","x","y","Amount","greenAccent","ResponsiveLine","tooltip","_ref3","point","datum","scheme","xScale","yScale","min","max","stacked","reverse","yFormat","curve","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","undefined","legendOffset","legendPosition","axisLeft","tickValues","enableGridX","enableGridY","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","symbolBorderColor","itemBackground","categoryIcons","lab","LabIcon","Radiology","RadiologyIcon","Procedure","ProcedureIcon","getCategoryIcon","arguments","FactCheckIcon","foundKey","keys","iconKey","isAllEmpty","_Object$values","cat","_Object$values2","arr","initialState","radiology","procedure","BahmniOrderPage","_theme$palette2","_theme$palette3","_selectedTestsMap$sel","_Object$values3","_Object$values3$map","_selectedCategory$cha","_services$selectedCat","_services$selectedCat2","selectedCategory","setSelectedCategory","subCategories","setSubCategories","selectedSubCategory","setSelectedSubCategory","selectedTestsMap","setSelectedTestsMap","selectedPanels","setSelectedPanels","submitted","setSubmitted","isFetching","setIsFetching","loadingSubmit","setLoadingSubmit","setServicsData","labPanels","setLabPanels","labPanelsMother","setLabPanelsMother","isPanelSelected","setIsPanelSelected","panelsFor","setPanelsFor","filteredPanels","shortCode","serviceKeys","structuredMockData","structured","purpose","subgroup","groupKey","subgroupKey","testName","subgroups","subKey","localeCompare","transformPaymentDataToServices","categoriesWithPanels","shortCodes","shortCodeKey","add","extractLabPanels","subs","mrnCheck","handleTestToggle","_Object$entries2","_Object$entries2$filt","_ref4","panelKey","testsUnderSelectedPanels","isTestInSelectedPanel","_item$purpose","warn","_prev$selectedCategor","current","updated","_item$purpose2","_response$data$data$v","_item$requestedDepart","counter","datagrid","handleReset","currentTests","valueGetter","shadows","_e$target","_e$target2","fetchPatientNames","val","indicatorColor","sub","ListItem","button","ListItemText","toLocaleLowerCase","charAt","toUpperCase","panel","handlePanelToggle","_e$target3","isChecked","theKeyName","_prev$selectedCategor2","_t$purpose","_t$purpose$toLowerCas","_test$purpose","_test$purpose$toLower","call","arrow","stopPropagation","_Object$entries3","_Object$entries5","_ref5","_Object$entries4","subMap","_ref6","subCategory","testList","groupedOrders","_ref7","orders","_ref8","_Object$entries6","subCats","_ref9","catagory","resp","_resp$data","_error$response$data$","_error$response2$data","_error$response3$data","Snackbar","autoHideDuration","Alert","severity","REASON_KEYS","labels","getDynamicColumns","paymentTypeRaw","showDescription","reversedOnly","baseCols","digital","cash","credit","traffic","cbhi","normalizeText","interm","aggregatePaymentsByReason","renderDescription","dynamicCols","reasonKeys","r","groups","_row$registeredOn","col","_row$col$key","reasonKey","normalized","getReasonKey","paymentReason","_row$col$key2","curr","total","sum","PaymentTable","payments","setPayments","setPaymentType","viewAggregated","setViewAggregated","setStartDate","dayjs","startOf","setEndDate","endOf","setReversedOnly","creditOrg","setCreditOrg","woreda","setWoreda","creditOrganizations","setCreditOrganizations","woredas","setWoredas","selctedServices","setSelectedServices","paymentTypes","setPaymentTypes","setRenderDescription","setServices","check","description","desc","toString","_paymentTypes$filter$","fetchType","requestReport","paymentDescription","ServiceIS","patientWorkingPlace","patientWoreda","filteredPayments","isReversed","displayedData","getColumns","isAggregated","reasonCols","EtDatePicker","required","FormControl","InputLabel","Select","input","OutlinedInput","MenuItem","ExcelJS","worksheet","addWorksheet","header","rowData","_row$col$field","addRow","getRow","eachCell","cell","font","bold","alignment","vertical","horizontal","buffer","xlsx","writeBuffer","blob","Blob","saveAs","handleExportExcel","serv","org","w","Switch","v","disableRowSelectionOnClick","progress","showLegend","legendText","uncollectedLabel","collectedLabel","angle","percentage","Math","round","blueAccent","icon","increase","ProgressCircle","fontStyle","FAQ","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","STATUS_COLORS","ORDERED","PAID","STATUS_ICONS","DoneIcon","ErrorOutlineIcon","Pharmacy","_group$items","groupedRequests","setGroupedRequests","filteredRequests","setFilteredRequests","searchTerm","setSearchTerm","paymentDialogOpen","setPaymentDialogOpen","selectedGroupKey","setSelectedGroupKey","resetGroupData","_groupedRequests$sele","_groupedRequests$sele2","element","requestedStatusId","resetItems","closeDialog","totalSelectedPrice","isNaN","headerClassName","headerAlign","valueFormatter","toFixed","_entry$requestedItems","dateTime","patientKey","getTime","isPaied","isWaiting","doctor","requestedBy","department","groupId","idNum","modData","fromEntries","_value$items","__","term","_group$patientName","_group$cardNumber","StatusBadge","colorKey","chipColor","Chip","letterSpacing","_theme$palette$chipCo","alpha","_theme$palette$chipCo2","contrastText","marginRight","minHeight","LocalPharmacy","Badge","badgeContent","anchorOrigin","ClipboardList","borderWidth","justifySelf","_group$status","_group$status$toLower","_group$status2","_group$status2$toLowe","ExpandMore","Avatar","Person","CalendarToday","toLocaleString","MedicalInformation","hideFooterSelectedRowCount","marginTop","slots","footer","_group$items4","GridFooterContainer","Payment","common","white","Paid","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","_item$price","_item$price2","handleCheckboxChange","onWheel","blur","inputProps","handleAmountChange","rawValue","_itemsCopy$index","selectedGroup","itemsCopy","borderTop","colSpan","_group$items2","_group$items3","selectedItems","unselectedItems","delete","sendResponses","sendError","cancelError","handlePaymentSubmit","CheckCircleOutline","Calendar","currentEvents","setCurrentEvents","formatDate","start","year","month","day","FullCalendar","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","headerToolbar","center","initialView","editable","selectable","selectMirror","dayMaxEvents","select","prompt","calendarApi","view","calendar","unselect","addEvent","dateStr","startStr","end","endStr","allDay","eventClick","window","confirm","remove","eventsSet","events","initialEvents","Line","LineChart","onSubmit","updateData","onEdit","resetData","formData","setFormData","role","roleErro","setRoleError","validateRole","preventDefault","alert","RoleManagment","modalOpen","setModalOpen","dataToedit","setDataToedit","rolesWithOrder","orderNumber","fetchRoles","PersonAddIcon","AddRoleModal","UnauthorizedPage","isSm","useMediaQuery","breakpoints","down","navigate","useNavigate","SentimentVeryDissatisfiedIcon","categories","PaymentManagementLists","setIsOpen","address","editId","setEditId","isUpdating","setIsUpdating","CustomToolbar","GridToolbarContainer","exportToExcel","endpoint","mapFunction","obj","createdBy","createdby","prevData","handleOpen","handleOpen2","apiEndpoints","apiEndpointsEdit","requestBody","channel","provider","organization","requestBodyEdit","updatedBy","updatedOn","handleDelete","deletedBy","Add","categoryA","location","_params$row$createdBy","Edit","Delete","getRowsAndColumns","toolbar","msFlexDirection","autoFocus","AddHospitalServices","method","ResponsiveBar","indexBy","dataFrom","barAriaLabel","formattedValue","indexValue","initialForm","patientAge","accedentDate","acceedentAddress","carCertificate","plateNumber","policeName","policePhone","controllerError","state","_formDataError$patien2","formDataError","setFormDataError","useReducer","records","setRecords","editIndex","setEditIndex","accedentRecId","fetchTableData","letterNumberCheck","validateName","validatePhoneNumber","renderETDateAtCell","_params$row2$carCerti","_params$row3","sortable","findIndex","phone","startsWith","_formData$accedentDat","em","accAddress","accDate","certificate","_response$data2","orientation","flexItem","FormHelperTextProps","onBlurCapture","_formDataError$patien","_formData$patientCard","handleGetPatientName","paddingBottom","handleChangeTime","fieldName","selectedDate","jsDate","tzOffsetMinutes","getTimezoneOffset","absOffset","abs","offsetHours","String","floor","padStart","offsetMinutes","sign","sqlDateOffset","multiline","handleCancelEdit","localeText","noRowsLabel","PharmacyRequestsPage","_dayjs$startOf","_dayjs$endOf","$d","newValue","requestedto","formattedRows","format","sortedData","formattedStart","formattedEnd","mergeCells","hospitalTitle","getCell","Hospital","argb","pattern","fgColor","dateRange","italic","headerRow","wrapText","commit","_processedData$servic","processedData","excelRow","isFailed","totalRow","number","views","ySplit","whiteSpace","wordBreak","medicationUse","admissionDate","dischargeDate","patientCondition","quantity","unitCost","updatedServices","DischargeForm","_formData$services","_formData$services2","setFromData","setFromDataError","setRowData","openDetail","setOpenDetail","detailData","setDetailData","_e$target$value","zeroValueCheck","letterOnly","totalCost","stayDuration","getDateDifference","diffTime","diffDays","ceil","bedServiceIndex","unshift","_prev$services","_formData$patientName","_formDataError$servic","_formDataError$servic2","_formDataError$servic3","_formDataError$servic4","_formDataError$servic5","_formDataError$servic6","formatAccounting","handleRemoveService","handleAddService","borderStyle","handleCancel","_formData$services3","noServices","serviceError","_ref0","isEmpty","hasMedication","rquestedServices","_excluded2","dataToSet","handleDetailClose","creditUserData","editedData","setEditedData","OrgUploadManager","SearchData","setSearchData","editing","setEditing","editData","setEditData","editLoading","setEditloading","deleteLoading","setDeleteLoading","fileLoading","setFileLoading","searching","SetSearching","option","setOrg","searchKey","setSearchKey","_params$editedData","fetchORG","workPlace","isExtend","workplace","uploadedBy","handleSearch","EditCreditUsers","checkoutSchema","yup","shape","firstName","lastName","email","contact","matches","address1","address2","initialValues","Form","isNonMobile","Formik","log","validationSchema","errors","touched","handleBlur","gridTemplateColumns","gridColumn","contactMethods","receipt","setReason","setError","referenceNo","paymentRefNo","paymentChannel","paymentVerifingID","patientWorkID","ReceiptReversalManager","searchRef","setSearchRef","filteredReceipts","setFilteredReceipts","selectedReceipt","setSelectedReceipt","reversalLoad","setReversalLoad","errorM","setErrorM","isCalcul","setIsCalcul","ReceiptRegex","LockIcon","paymentId","rowId","handleOpenModal","ReversalModal","handleModalClose","formatter","Intl","NumberFormat","currency","minimumFractionDigits","num","Dashboard","isGenerating","setIsGenerating","dashboardRef","useRef","totalSum","setTotalSum","totalUnc","setTotalUnc","todayTotal","setTodayTotal","trend","setTrend","trendpercent","setTrendPercent","transactionCountBy","setTransactionCountBy","pateintCount","setPatientcount","collectionbycashier","setCollectionbycashier","totalCollected","setTotalCollected","collectionnStartDate","yesterday","fetchUncollected","response1","uncollectedData","uncollected","cashier","cashAmount","mapp","collectedByCashier","_response2$data","_response2$data2","response2","isCollected","casher","collectedOn","collectedAmount","fetchCollectedData","transform2","_collectedByCashier$p","_collectedByCashier$p2","recentPayments","paymentDate","todayDateStr","todayPayments","_payment$registeredOn","yesterdayDateStr","yesterdayPayments","_payment$registeredOn2","yesterdayTotal","todayTransactionCount","yesterdayTransactionCount","transactionTrend","transactionTrendPercent","todayPatientCount","yesterdayPatientCount","patientTrend","patientTrendPercent","trendPercent","ref","doc","jsPDF","unit","options","scale","useCORS","logging","canvas","html2canvas","imgData","toDataURL","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","imgWidth","imgHeight","setFontSize","setTextColor","addImage","save","DownloadOutlinedIcon","gridAutoRows","CreditCardIcon","PointOfSaleIcon","AccountBalanceIcon","stat","StatBox","gridRow","transaction","toLocaleDateString","GeographyChart","getFullYear","Topbar","_tokenvalue$name","_tokenvalue$name$char","colorMode","useContext","ColorModeContext","anchorEl","setAnchorEl","session","useRouteLoaderData","InputBase","placeholder","SearchIcon","toggleColorMode","DarkModeOutlinedIcon","LightModeOutlinedIcon","NotificationsOutlinedIcon","SettingsOutlinedIcon","Menu","transformOrigin","content","zIndex","ListItemIcon","handleDownloadCollectorsFile","link","document","createElement","href","origin","download","body","appendChild","click","removeChild","FileDownloadIcon","handleDownloadCreditUserFile","handleDownloadUploadServicesFile","handleHelp","pdf","Logout","descriptions","initialStateError","PaymentTypeManager","editingId","setEditingId","_response$data$data$f","mainId","fetchPaymentTypes","_response$data2$map","fetchPaymentType","isValidName","des","handleDescriptionChange","_formData$description","_formData$description2","_removeData$","removeData","_response$data4","_response$data3","handleRemoveDescription","RemoveCircleOutline","AddCircleOutline","handleAddDescription","_formData$description3","_formData$description4","_formData$description5","_formData$type","_formData$description6","_formDataError$descri","discription","d","_d$description","_d$description2","_formData$type2","_formData$description7","_formData$description8","hasSuccess","_response$data5","_d$description3","opacity","_paymentType$descript","handleEditClick","primaryTypographyProps","Login","_mutation$error","_errors$username","_errors$password","mutation","useMutation","mutationFn","login","onSuccess","localStorage","setItem","token","onError","register","formState","useForm","backgroundImage","bag","backgroundSize","backgroundPosition","backdropFilter","src","moh","alt","tsedey","amh","isError","enteredData","apiData","username","password","mutate","minLength","step","isPending","time","PaymentTypeLimitForm","form","setForm","formError","setFormError","fullPaymentTypes","setFullPaymentTypes","limits","setLimits","isEdit","setIsEdit","saveLoading","setSaveLoading","confirmModalOpen","setConfirmModalOpen","selectedDeleteUser","setSelectedDeleteUser","isDeleteLoading","setIsDeleteLoading","enrichedData","match","fetchLimits","_normalizeText","transformedValue","numericValue","_fullPaymentTypes$fil","showUser","resetUserData","confirmpassword","usertype","hospital","usernameError","setUsernameError","emailError","setEmailError","phoneError","setPhoneError","confPassError","setConfPassError","phoneNumber","departement","userType","validateEmail","validateUsername","dep","hosp","closeButtonStyle","clearUserData","setPassword","confirmPassword","setConfirmPassword","validationError","setValidationError","newPassword","validatePassword","passwordValidationErrors","prevError","UserManagment","openResetModal","setOpenResetModal","selectedUser","setSelectedUser","setRoles","selectedDelete","setSelectedDelete","setUserName","handleCleare","handleEditUser","handleResetPassword","PasswordIcon","usersWithOrder","fetchUserList","AddUserModal","_error$response5","_error$response5$data","_error$response6","_error$response6$data","userName","editedUserData","newRole","handleDeleteConfirmation","SmartModal","age","filterOptions","FriendlyAgeFilterDataGrid","operator","setOperator","filterAge","setFilterAge","minAge","setMinAge","maxAge","setMaxAge","filteredRows","parsedAge","Pie","formatter2","maximumFractionDigits","useGrouping","ReportReceiptFetcher","tab","setTab","receiptNumber","setReceiptNumber","reportData","setReportData","receiptData","setReceiptData","dispPrint","setDispPrint","handlePrint","hospitalName","registeredBy","headerSection","tableData","ws","aoa_to_sheet","sheet_add_json","c","skipHeader","range","decode_range","C","cellRef","encode_cell","rgb","wb","book_new","book_append_sheet","collectionID","transformPayments","generatePDF","first","refNo","recipt","cbhiId","patientCBHI_ID","digitalChannel","trxref","patientLoaction","employeeId","Card","CardContent","TabIndicatorProps","ReceiptLongIcon","mod","_excluded3","_response2$data3","_excluded4","fileInput","rowsData","Name","ShortCode","Group","SubGroup","initialFormState","mrn","goth","kebele","expDate","referralNumber","letterNumber","examination","requiredFields","users","setUsers","openDialog","setOpenDialog","setReferesh","fetchWoredas","_response$data2$data","dataMod","rowID","valid","idNo","referalNo","letterNo","_formDataError$name","tzOffset","offsetStr","FormHelperText","_formDataError$mrn","_formData$mrn","missingFields","fieldNames"],"sourceRoot":""}