{"version":3,"file":"static/js/3967.6c9cce9f.chunk.js","mappings":"oYAuBA,MAAMA,GAAaC,EAAAA,EAAAA,MAEbC,EAAQ,CAAC,aAAc,eACvBC,EAAU,CAAC,OAAQ,UACnBC,EAAY,CAChB,UACA,YACA,SACA,WACA,aACA,WACA,QACA,QAGIC,EAAc,CAClB,oBACA,yBACA,wBACA,kBACA,sBACA,oBACA,WACA,aACA,oBAGIC,EAAY,CAChB,YACA,YACA,YACA,aACA,aACA,aACA,kBACA,iBACA,WACA,YACA,oBACA,mBACA,gBACA,eACA,YACA,cAGIC,EAAY,CAAC,UAAW,KAAM,QAAS,oBACvCC,EAAW,CACf,eACA,UACA,YACA,WACA,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,sBAEIC,EAAiB,CACrB,SACA,UACA,gBACA,QACA,SACA,UACA,WACA,gBACA,iBACA,UACA,WACA,SACA,sBACA,gBACA,YACA,UACA,aACA,gBACA,SACA,SACA,SACA,YACA,cACA,WACA,aACA,UACA,SACA,cACA,cACA,gBACA,iBACA,mBACA,qBACA,gCACA,aACA,SACA,aACA,aACA,SACA,eACA,aACA,YACA,mBACA,QACA,SACA,WACA,gBACA,eACA,oBACA,gBACA,qBACA,aACA,SACA,QACA,aACA,eACA,UACA,WAGIC,EAAU,CAAC,OAAQ,SAAU,UAAW,WAAY,WACpDC,EAAmB,CACvB,cACA,OACA,SACA,oBACA,mBACA,YACA,UACA,SACA,SACA,SACA,iBACA,8BACA,SACA,UAGIC,EAAe,CACnBC,MAAO,GACPC,IAAK,GACLC,IAAK,GACLC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,UAAW,GACXC,MAAO,GACPC,IAAK,GACLC,IAAK,GACLC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,GAAI,GACJC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,MAAO,GAC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","sources":["components/PatientRegistration.jsx"],"sourcesContent":["import React, { useEffect, useReducer, useRef, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Stack,\r\n  Stepper,\r\n  StepLabel,\r\n  Step,\r\n  Divider,\r\n  CircularProgress,\r\n  useTheme,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\nimport EtDatePicker from \"mui-ethiopian-datepicker\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport api from \"../utils/api\";\r\nimport { getTokenValue } from \"../services/user_service\";\r\n\r\nconst tokenvalue = getTokenValue();\r\n\r\nconst steps = [\"Basic Info\", \"Addres Info\"];\r\nconst genders = [\"Male\", \"Female\"];\r\nconst Religions = [\r\n  \"UNKNOWN\",\r\n  \"CHRISTIAN\",\r\n  \"MUSLIM\",\r\n  \"ORTHODOX\",\r\n  \"PROTESTANT\",\r\n  \"CATHOLIC\",\r\n  \"OTHER\",\r\n  \"NONE\",\r\n];\r\n\r\nconst Departments = [\r\n  \"OutPatient Clinic\",\r\n  \"Family Planning Clinic\",\r\n  \"Antenatal Care Clinic\",\r\n  \"HIV/AIDS Clinic\",\r\n  \"Tuberculosis Clinic\",\r\n  \"Pediatrics Clinic\",\r\n  \"Pharmacy\",\r\n  \"Laboratory\",\r\n  \"Postpartum Visit\",\r\n];\r\n\r\nconst Providers = [\r\n  \"OPDCLINIC\",\r\n  \"ARTCLINIC\",\r\n  \"VCTCLINIC\",\r\n  \"LABORATORY\",\r\n  \"OPDCLINIC2\",\r\n  \"OPDCLINIC6\",\r\n  \"OPDCLINICDENTAL\",\r\n  \"PEDIATRICSWARD\",\r\n  \"MEDICALA\",\r\n  \"ANCCLINIC\",\r\n  \"LABORDELIVERYWARD\",\r\n  \"PEDIATRICSCLINIC\",\r\n  \"OPDCLINICGETU\",\r\n  \"MCHCLINICOPD\",\r\n  \"MERRA-LAB\",\r\n  \"MERRATEST1\",\r\n];\r\n\r\nconst MultipleB = [\"UNKNOWN\", \"NO\", \"TWINS\", \"TRIPLETS OR MORE\"];\r\nconst HighestE = [\r\n  \"NO EDUCATION\",\r\n  \"PRIMARY\",\r\n  \"SECONDARY\",\r\n  \"TERTIARY\",\r\n  \"NONE\",\r\n  \"GRADE 1\",\r\n  \"GRADE 2\",\r\n  \"GRADE 3\",\r\n  \"GRADE 4\",\r\n  \"GRADE 5\",\r\n  \"GRADE 6\",\r\n  \"GRADE 7\",\r\n  \"GRADE 8\",\r\n  \"GRADE 9\",\r\n  \"GRADE 10\",\r\n  \"GRADE 11\",\r\n  \"GRADE 12\",\r\n  \"COLLEGE/UNIVERSITY\",\r\n];\r\nconst occupationList = [\r\n  \"Farmer\",\r\n  \"Teacher\",\r\n  \"Health Worker\",\r\n  \"Nurse\",\r\n  \"Doctor\",\r\n  \"Midwife\",\r\n  \"Engineer\",\r\n  \"Civil Servant\",\r\n  \"Police Officer\",\r\n  \"Soldier\",\r\n  \"Merchant\",\r\n  \"Driver\",\r\n  \"Construction Worker\",\r\n  \"Daily Laborer\",\r\n  \"Housemaid\",\r\n  \"Student\",\r\n  \"Unemployed\",\r\n  \"Self-employed\",\r\n  \"Tailor\",\r\n  \"Weaver\",\r\n  \"Potter\",\r\n  \"Carpenter\",\r\n  \"Electrician\",\r\n  \"Mechanic\",\r\n  \"Blacksmith\",\r\n  \"Butcher\",\r\n  \"Barber\",\r\n  \"Hairdresser\",\r\n  \"Taxi Driver\",\r\n  \"Bus Conductor\",\r\n  \"Security Guard\",\r\n  \"Religious Leader\",\r\n  \"Traditional Healer\",\r\n  \"Agricultural Extension Worker\",\r\n  \"NGO Worker\",\r\n  \"Banker\",\r\n  \"Accountant\",\r\n  \"Shopkeeper\",\r\n  \"Trader\",\r\n  \"Hotel Worker\",\r\n  \"Tour Guide\",\r\n  \"Fisherman\",\r\n  \"Livestock Keeper\",\r\n  \"Miner\",\r\n  \"Artist\",\r\n  \"Musician\",\r\n  \"Actor/Actress\",\r\n  \"Craft Worker\",\r\n  \"Mobile Technician\",\r\n  \"IT Technician\",\r\n  \"Software Developer\",\r\n  \"Journalist\",\r\n  \"Lawyer\",\r\n  \"Judge\",\r\n  \"Pharmacist\",\r\n  \"Veterinarian\",\r\n  \"Cleaner\",\r\n  \"Retired\",\r\n];\r\n\r\nconst Marital = [\"None\", \"Single\", \"Married\", \"Divorced\", \"Widowed\"];\r\nconst ethiopianRegions = [\r\n  \"Addis Ababa\",\r\n  \"Afar\",\r\n  \"Amhara\",\r\n  \"Benishangul-Gumuz\",\r\n  \"Central Ethiopia\",\r\n  \"Dire Dawa\",\r\n  \"Gambela\",\r\n  \"Harari\",\r\n  \"Oromia\",\r\n  \"Sidama\",\r\n  \"South Ethiopia\",\r\n  \"South West Ethiopia Peoples\",\r\n  \"Somali\",\r\n  \"Tigray\",\r\n];\r\n\r\nconst initialState = {\r\n  fname: \"\",\r\n  dob: \"\",\r\n  edu: \"\",\r\n  fatname: \"\",\r\n  pbirth: \"\",\r\n  occ: \"\",\r\n  gfname: \"\",\r\n  mbirth: \"\",\r\n  mstatus: \"\",\r\n  maname: \"\",\r\n  religion: \"\",\r\n  sname: \"\",\r\n  sfname: \"\",\r\n  gender: \"\",\r\n  providers: \"\",\r\n  vdate: \"\",\r\n  dep: \"\",\r\n  mrn: \"\",\r\n  region: \"\",\r\n  nregion: \"\",\r\n  woreda: \"\",\r\n  nworeda: \"\",\r\n  kebele: \"\",\r\n  nkebele: \"\",\r\n  hn: \"\",\r\n  nhn: \"\",\r\n  addD: \"\",\r\n  naddD: \"\",\r\n  phone: \"\",\r\n  nphone: \"\",\r\n  mobile: \"\",\r\n  nmobile: \"\",\r\n  isUpdate: false,\r\n};\r\n\r\nconst controller = (state, action) => {\r\n  try {\r\n    if (action.name === \"reset\") {\r\n      return initialState;\r\n    } else if (action.name === \"bulk\") {\r\n      return { ...state, ...action.values }; // merge all keys\r\n    } else {\r\n      return { ...state, [action.name]: action.values };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error on State update : \", error);\r\n  }\r\n};\r\n\r\nconst controllerError = (state, action) => {\r\n  try {\r\n    if (action.name === \"Reset\") {\r\n      return initialState;\r\n    } else {\r\n      return { ...state, [action.name]: action.values };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"State Update Error: \", error);\r\n  }\r\n};\r\n\r\nfunction PatientRegistration() {\r\n  const [formData, setFormData] = useReducer(controller, initialState);\r\n  const [formDataError, setFormDataError] = useReducer(\r\n    controllerError,\r\n    initialState\r\n  );\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [checkLoading, setCheckLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const lastCardNumberRef = useRef(\"\");\r\n\r\n  const [activeField, setActiveField] = React.useState(\"fname\");\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const currentValue = formData?.[activeField] || \"\";\r\n        if (currentValue.length > 1) {\r\n          const res = await api.get(\r\n            `/Patient/patient-name-suggestion/${currentValue}`\r\n          );\r\n\r\n          const mod = res?.data?.data?.value?.map((item, index) => ({\r\n            id: index + 1,\r\n            firstName: item,\r\n          }));\r\n\r\n          const newMod = mod?.filter(\r\n            (item, index, self) =>\r\n              index === self?.findIndex((t) => t?.firstName === item?.firstName)\r\n          );\r\n\r\n          setOptions(newMod);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const delayDebounceFn = setTimeout(() => {\r\n      fetchPatients();\r\n    }, 300); // debounce typing\r\n\r\n    return () => clearTimeout(delayDebounceFn);\r\n  }, [formData, activeField]);\r\n\r\n  const handleCancel = () => {\r\n    setFormData({ name: \"reset\" });\r\n    setFormDataError({ name: \"Reset\" });\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const handleChangeTime = (fieldName, selectedDate) => {\r\n    try {\r\n      const jsDate =\r\n        selectedDate instanceof Date ? selectedDate : new Date(selectedDate);\r\n\r\n      if (isNaN(jsDate.getTime())) {\r\n        console.error(\r\n          \"Invalid date provided to handleChangeTime:\",\r\n          selectedDate\r\n        );\r\n        toast.error(\"Invalid date selected.\");\r\n        return;\r\n      }\r\n\r\n      // Adjust for local timezone\r\n      const tzOffsetMinutes = jsDate.getTimezoneOffset();\r\n      const offsetSign = tzOffsetMinutes <= 0 ? \"+\" : \"-\";\r\n      const offsetHours = String(\r\n        Math.floor(Math.abs(tzOffsetMinutes) / 60)\r\n      ).padStart(2, \"0\");\r\n      const offsetMinutes = String(Math.abs(tzOffsetMinutes) % 60).padStart(\r\n        2,\r\n        \"0\"\r\n      );\r\n\r\n      const localTime = new Date(jsDate.getTime() - tzOffsetMinutes * 60000);\r\n      const formattedDate = localTime\r\n        .toISOString()\r\n        .slice(0, 19)\r\n        .replace(\"T\", \" \");\r\n      const finalDateTime = `${formattedDate} ${offsetSign}${offsetHours}:${offsetMinutes}`;\r\n\r\n      setFormData({ name: fieldName, values: finalDateTime });\r\n      setFormDataError({ name: fieldName, values: \"\" });\r\n    } catch (error) {\r\n      console.error(\"Date Picker Change Error:\", error);\r\n      toast.error(\"Unable to select the date properly.\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (\r\n      e.target.name === \"fname\" ||\r\n      e.target.name === \"fatname\" ||\r\n      e.target.name === \"gfname\" ||\r\n      e.target.name === \"maname\" ||\r\n      e.target.name === \"sname\" ||\r\n      e.target.name === \"sfname\"\r\n    ) {\r\n      validateName(e.target.name, e.target.value);\r\n    } else if (e.target.name === \"pbirth\") {\r\n      onlyLetterCheck(e.target.name, e.target.value);\r\n    } else if (\r\n      e.target.name === \"woreda\" ||\r\n      e.target.name === \"nworeda\" ||\r\n      e.target.name === \"kebele\" ||\r\n      e.target.name === \"nkebele\" ||\r\n      e.target.name === \"addD\" ||\r\n      e.target.name === \"naddD\" ||\r\n      e.target.name === \"hn\" ||\r\n      e.target.name === \"nhn\"\r\n    ) {\r\n      letterNumberCheck(e.target.name, e.target.value);\r\n    } else if (e.target.name === \"mrn\") {\r\n      lastCardNumberRef.current = \"\";\r\n\r\n      mrnCheck(e.target.name, e.target.value);\r\n      if (formData?.isUpdate) {\r\n        toast.info(\r\n          \"You changed the MRN so now you are recording a new data, not updating the existing one.\"\r\n        );\r\n        setFormData({ name: \"isUpdate\", values: false });\r\n      }\r\n    } else if (e.target.name === \"phone\" || e.target.name === \"nphone\") {\r\n      phoneCheck(e.target.name, e.target.value);\r\n    } else if (e.target.name === \"mobile\" || e.target.name === \"nmobile\") {\r\n      validatePhoneNumber(e.target.name, e.target.value);\r\n    } else {\r\n      emptyCheck(e.target.name, e.target.value);\r\n    }\r\n\r\n    setFormData({ name: e.target.name, values: e.target.value });\r\n    //setFormDataError({ name: e.target.name, values: '' });\r\n  };\r\n\r\n  const emptyCheck = (name, value) => {\r\n    if (value?.length <= 0) {\r\n      setFormDataError({ name: name, values: \"Please fill this field first.\" });\r\n    } else {\r\n      setFormDataError({ name: name, values: \"\" });\r\n    }\r\n  };\r\n\r\n  const validateName = (name, value) => {\r\n    const usernameRegex = /^[a-zA-Z\\u1200-\\u137F]{3,}$/;\r\n    if (!usernameRegex.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values:\r\n          \"Name must be only letters, at least 3 characters long, and contain no spaces.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n    return;\r\n  };\r\n\r\n  const mrnCheck = (name, value) => {\r\n    const comp = /^[0-9a-zA-Z\\s\\_\\-]{5,}$/;\r\n\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"Please Insert Valid MRN, more than 5 digit only.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const phoneCheck = (name, value) => {\r\n    const check = /^(?:\\(?\\d{2,4}\\)?[\\s-]?)?\\d{5,8}$/;\r\n    if (!check.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values:\r\n          \"Insert like (011) 2345678 , 011-2345678 , 2345678 , 0123 45678\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const validatePhoneNumber = (name, phone) => {\r\n    const phoneRegex = /^(?:\\+251|09|07)\\d+$/;\r\n    if (!phoneRegex.test(phone) && phone.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values:\r\n          \"Phone number must start with +251, 09, or 07 and contain only numbers.\",\r\n      });\r\n    } else {\r\n      if (phone.startsWith(\"+251\") && phone.length !== 13) {\r\n        setFormDataError({\r\n          name: name,\r\n          values: \"Phone number starting with +251 must have 13 digits.\",\r\n        });\r\n      } else if (\r\n        (phone.startsWith(\"09\") || phone.startsWith(\"07\")) &&\r\n        phone.length !== 10\r\n      ) {\r\n        setFormDataError({\r\n          name: name,\r\n          values: \"Phone number starting with 09 or 07 must have 10 digits.\",\r\n        });\r\n      } else {\r\n        setFormDataError({\r\n          name: name,\r\n          values: \"\",\r\n        });\r\n      }\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onlyLetterCheck = (name, value) => {\r\n    const comp = /^[a-zA-Z\\u1200-\\u137F\\s]+$/;\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"Please Insert Only Letters.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const letterNumberCheck = (name, value) => {\r\n    const comp = /^[a-zA-Z0-9\\u1200-\\u137F\\s]+$/;\r\n\r\n    if (!comp.test(value) && value.length > 0) {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"Letters Number and space Only.\",\r\n      });\r\n    } else {\r\n      setFormDataError({\r\n        name: name,\r\n        values: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleNext = async () => {\r\n    try {\r\n      const step1Fields = [\r\n        \"fname\",\r\n        \"fatname\",\r\n        \"gender\",\r\n        \"providers\",\r\n        \"dep\",\r\n        \"mrn\",\r\n        \"dob\",\r\n      ];\r\n      const step2Fields = [\r\n        \"region\",\r\n        \"nregion\",\r\n        \"woreda\",\r\n        \"nworeda\",\r\n        \"kebele\",\r\n        \"nkebele\",\r\n      ];\r\n\r\n      const requiredMessage = \"Please fill the required fields first.\";\r\n      const errorFixMessage = \"Please fix the errors.\";\r\n\r\n      const isEmpty = (field) =>\r\n        !formData?.[field] || formData[field].length === 0;\r\n\r\n      const hasStep1Empty = step1Fields.some(isEmpty);\r\n      const hasStep2Empty = step2Fields.some(isEmpty);\r\n\r\n      const hasFieldErrors = Object.values(formDataError).some(Boolean);\r\n\r\n      if (activeStep < steps.length - 1) {\r\n        if (hasStep1Empty) {\r\n          step1Fields.map((item) => {\r\n            if (formData[item].length <= 0) {\r\n              setFormDataError({\r\n                name: item,\r\n                values: \"Please fill this field first.\",\r\n              });\r\n            }\r\n          });\r\n          toast.error(requiredMessage);\r\n          return;\r\n        }\r\n        if (hasFieldErrors) {\r\n          toast.error(errorFixMessage);\r\n          return;\r\n        }\r\n        setActiveStep((prev) => prev + 1);\r\n      } else {\r\n        if (hasStep1Empty || hasStep2Empty) {\r\n          step2Fields.map((item) => {\r\n            if (formData[item].length <= 0) {\r\n              setFormDataError({ name: item, values: requiredMessage });\r\n            }\r\n          });\r\n          toast.error(requiredMessage);\r\n          return;\r\n        }\r\n        if (Object.values(formDataError).some((err) => err.length > 0)) {\r\n          toast.error(errorFixMessage);\r\n          return;\r\n        }\r\n        setLoading(true);\r\n\r\n        const payload = {\r\n          patientCardNumber: `${Number(formData?.mrn)}`,\r\n          patientFirstName: formData?.fname,\r\n          patientMiddleName: formData?.fatname,\r\n          patientLastName: formData?.gfname,\r\n          patientMotherName: formData?.maname,\r\n          patientDOB: formData?.dob?.replace(\" +03:00\", \"\"),\r\n          patientGender: formData?.gender,\r\n          patientReligion: formData?.religion,\r\n          patientPlaceofbirth: formData?.pbirth,\r\n          multiplebirth: formData?.mbirth,\r\n          appointment: formData?.providers,\r\n          patientPhoneNumber: formData?.mobile,\r\n          iscreadituser: false,\r\n          iscbhiuser: false,\r\n          patientOccupation: formData?.occ,\r\n          department: formData?.dep,\r\n          patientEducationlevel: formData?.edu,\r\n          patientMaritalstatus: formData?.mstatus,\r\n          patientSpouseFirstName: formData?.sname,\r\n          patientSpouselastName: formData?.sfname,\r\n          patientRegisteredBy: tokenvalue?.name, //token name\r\n          patientVisitingDate:\r\n            formData?.vdate?.length > 0\r\n              ? formData?.vdate?.replace(\" +03:00\", \"\")\r\n              : new Date(),\r\n          patientRegion: formData?.region,\r\n          patientWoreda: formData?.woreda,\r\n          patientKebele: formData?.kebele,\r\n          patientHouseNo: formData?.hn,\r\n          patientAddressDetail: formData?.addD,\r\n          patientPhone: formData?.phone,\r\n          patientKinRegion: formData?.nregion,\r\n          patientKinWoreda: formData?.nworeda,\r\n          patientKinKebele: formData?.nkebele,\r\n          patientKinHouseNo: formData?.nhn,\r\n          patientKinAddressDetail: formData?.naddD,\r\n          patientKinPhone: formData?.nphone,\r\n          patientKinMobile: formData?.nmobile,\r\n          patientChangedBy: tokenvalue?.name,\r\n        };\r\n        let response;\r\n        if (!formData?.isUpdate) {\r\n          response = await api.post(\"/Patient/add-patient-info\", payload);\r\n        } else {\r\n          response = await api.put(\"/Patient/update-patient-info\", payload);\r\n        }\r\n        if (Object.values(response?.data)?.some((item) => item?.length > 0)) {\r\n          setFormData({ name: \"reset\" });\r\n          setFormDataError({ name: \"Reset\" });\r\n          setActiveStep(0);\r\n          toast.success(\"Patient Information Recorded Successfully.\");\r\n          setLoading(false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error Happened on Next Step and Submit handler:\", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server Error.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => setActiveStep((prev) => prev - 1);\r\n\r\n  const handleCheck = async () => {\r\n    try {\r\n      setCheckLoading(true);\r\n      if (formDataError?.mrn?.length > 0 || formData?.mrn?.length <= 0) {\r\n        toast.error(\"Please Insert Valid MRN first.\");\r\n        return;\r\n      }\r\n\r\n      if (\r\n        formData?.mrn?.length > 0 &&\r\n        formData?.mrn === lastCardNumberRef?.current\r\n      ) {\r\n        return;\r\n      } else {\r\n        lastCardNumberRef.current = formData?.mrn;\r\n      }\r\n\r\n      const response = await api.put(\"/Patient/get-one-patient-info\", {\r\n        patientCardNumber: formData?.mrn,\r\n      });\r\n      if (response?.data?.data?.value?.length <= 0) {\r\n        toast.info(\"Patient record not found for this card number.\");\r\n        return;\r\n      } else {\r\n        const item = response?.data?.data?.value[0];\r\n\r\n        const renamedData = {\r\n          mrn: item.patientCardNumber,\r\n          fname: item.patientFirstName,\r\n          fatname: item.patientMiddleName,\r\n          gfname: item.patientLastName,\r\n          maname: item.patientMotherName,\r\n          dob: item.patientDOB,\r\n          gender: item.patientGender,\r\n          religion: item.patientReligion,\r\n          pbirth: item.patientPlaceofbirth,\r\n          mbirth: item.multiplebirth,\r\n          providers: item.appointment,\r\n          hn: item.patientHouseNo,\r\n          nhn: item.patientKinHouseNo,\r\n          mobile: item.patientPhoneNumber,\r\n          occ: item.patientOccupation,\r\n          dep: item.department,\r\n          edu: item.patientEducationlevel,\r\n          mstatus: item.patientMaritalstatus,\r\n          sname: item.patientSpouseFirstName,\r\n          sfname: item.patientSpouselastName,\r\n          vdate: item.patientVisitingDate,\r\n          region: item.patientRegion,\r\n          woreda: item.patientWoreda,\r\n          kebele: item.patientKebele,\r\n          addD: item.patientAddressDetail,\r\n          phone: item.patientPhone,\r\n          nregion: item.patientKinRegion,\r\n          nworeda: item.patientKinWoreda,\r\n          nkebele: item.patientKinKebele,\r\n          naddD: item.patientKinAddressDetail,\r\n          nphone: item.patientKinPhone,\r\n          nmobile: item.patientKinMobile,\r\n          isUpdate: true,\r\n        };\r\n        setFormData({\r\n          name: \"bulk\",\r\n          values: renamedData,\r\n        });\r\n\r\n        toast.success(\"Patient record found for this card number.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"This Is CHeck Error: \", error);\r\n      toast.error(error?.response?.data?.msg || \"Internal Server Error.\");\r\n    } finally {\r\n      setCheckLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                label=\"MRN\"\r\n                name=\"mrn\"\r\n                type=\"text\"\r\n                value={formData?.mrn}\r\n                onChange={handleChange}\r\n                onBlurCapture={() => handleCheck()}\r\n                error={!!formDataError?.mrn}\r\n                helperText={formDataError?.mrn}\r\n                required\r\n                InputProps={{\r\n                  min: 0, // Prevents negative values\r\n                  step: \"any\", // Allows decimal values\r\n                  sx: {\r\n                    \"& .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                      borderColor:\r\n                        theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                    color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  sx: {\r\n                    color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                    \"&.Mui-focused\": {\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n              {checkLoading && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  sx={{ marginLeft: \"15px\" }}\r\n                >\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                </Box>\r\n              )}\r\n            </Grid>\r\n\r\n            <hr style={{ margin: \"20px\" }} />\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  options={options}\r\n                  getOptionLabel={(option) => option.firstName || \"\"}\r\n                  inputValue={formData?.fname || \"\"}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    handleChange({\r\n                      // mimic TextField's onChange event\r\n                      target: { name: \"fname\", value: newInputValue },\r\n                    });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"First Name *\"\r\n                      variant=\"outlined\"\r\n                      name=\"fname\"\r\n                      value={formData?.fname || \"\"}\r\n                      onChange={handleChange}\r\n                      onFocus={() => setActiveField(\"fname\")}\r\n                      error={!!formDataError?.fname}\r\n                      helperText={formDataError?.fname}\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <EtDatePicker\r\n                  key={formData.dob || \"dob-empty\"}\r\n                  label=\"Date of Birth *\"\r\n                  name=\"dob\"\r\n                  value={\r\n                    !!formData?.dob && ![\"\", null].includes(formData.dob)\r\n                      ? new Date(formData.dob.replace(\" +03:00\", \"\"))\r\n                      : null\r\n                  }\r\n                  onChange={(e) => {\r\n                    handleChangeTime(\"dob\", e);\r\n                  }}\r\n                  error={!!formDataError?.dob}\r\n                  helperText={formDataError?.dob}\r\n                  sx={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  value={formData.edu}\r\n                  name=\"edu\"\r\n                  onChange={handleChange}\r\n                  label=\"Highest Education Level Attained\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {HighestE.map((he) => (\r\n                    <MenuItem key={he} value={he}>\r\n                      {he}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  options={options}\r\n                  getOptionLabel={(option) => option.firstName || \"\"}\r\n                  inputValue={formData?.fatname || \"\"}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    handleChange({\r\n                      // mimic TextField's onChange event\r\n                      target: { name: \"fatname\", value: newInputValue },\r\n                    });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Father's Name *\"\r\n                      type=\"text\"\r\n                      name=\"fatname\"\r\n                      value={formData?.fatname || \"\"}\r\n                      onChange={handleChange}\r\n                      onFocus={() => setActiveField(\"fatname\")}\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.fatname}\r\n                      helperText={formDataError?.fatname}\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  label=\"Place of Birth\"\r\n                  type=\"text\"\r\n                  value={formData?.pbirth}\r\n                  name=\"pbirth\"\r\n                  onChange={handleChange}\r\n                  error={!!formDataError?.pbirth}\r\n                  helperText={formDataError?.pbirth}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  label=\"Occupation\"\r\n                  value={formData.occ}\r\n                  name=\"occ\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {occupationList.map((ol) => (\r\n                    <MenuItem key={ol} value={ol}>\r\n                      {ol}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  options={options}\r\n                  getOptionLabel={(option) => option.firstName || \"\"}\r\n                  inputValue={formData?.gfname || \"\"}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    handleChange({\r\n                      // mimic TextField's onChange event\r\n                      target: { name: \"gfname\", value: newInputValue },\r\n                    });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      type=\"text\"\r\n                      label=\"Grandfather's Name\"\r\n                      value={formData?.gfname}\r\n                      name=\"gfname\"\r\n                      onChange={handleChange}\r\n                      onFocus={() => setActiveField(\"gfname\")}\r\n                      error={!!formDataError?.gfname}\r\n                      helperText={formDataError?.gfname}\r\n                      fullWidth\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  value={formData.mbirth}\r\n                  label=\"Multiple Birth\"\r\n                  name=\"mbirth\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {MultipleB.map((mb) => (\r\n                    <MenuItem key={mb} value={mb}>\r\n                      {mb}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  value={formData.mstatus}\r\n                  fullWidth\r\n                  label=\"Marital Status\"\r\n                  name=\"mstatus\"\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {Marital.map((ms) => (\r\n                    <MenuItem key={ms} value={ms}>\r\n                      {ms}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  options={options}\r\n                  getOptionLabel={(option) => option.firstName || \"\"}\r\n                  inputValue={formData?.maname || \"\"}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    handleChange({\r\n                      // mimic TextField's onChange event\r\n                      target: { name: \"maname\", value: newInputValue },\r\n                    });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      type=\"text\"\r\n                      label=\"Mother's First Name\"\r\n                      value={formData?.maname}\r\n                      fullWidth\r\n                      name=\"maname\"\r\n                      onChange={handleChange}\r\n                      onFocus={() => setActiveField(\"maname\")}\r\n                      error={!!formDataError?.maname}\r\n                      helperText={formDataError?.maname}\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  value={formData.religion}\r\n                  name=\"religion\"\r\n                  onChange={handleChange}\r\n                  label=\"Religion\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {Religions.map((r) => (\r\n                    <MenuItem key={r} value={r}>\r\n                      {r}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  options={options}\r\n                  getOptionLabel={(option) => option.firstName || \"\"}\r\n                  inputValue={formData?.sname || \"\"}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    handleChange({\r\n                      // mimic TextField's onChange event\r\n                      target: { name: \"sname\", value: newInputValue },\r\n                    });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      type=\"text\"\r\n                      label=\"Spouse's First Name\"\r\n                      value={formData?.sname}\r\n                      name=\"sname\"\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                      onFocus={() => setActiveField(\"sname\")}\r\n                      error={!!formDataError?.sname}\r\n                      helperText={formDataError?.sname}\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  label=\"Gender *\"\r\n                  value={formData.gender}\r\n                  name=\"gender\"\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  required\r\n                  error={!!formDataError?.gender}\r\n                  helperText={formDataError?.gender}\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {genders.map((g) => (\r\n                    <MenuItem key={g} value={g}>\r\n                      {g}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Grid container direction=\"column\" spacing={1}>\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                      *Appointment / Assignment\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      select\r\n                      value={formData.providers}\r\n                      name=\"providers\"\r\n                      label=\"Providers *\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.providers}\r\n                      helperText={formDataError?.providers}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    >\r\n                      {Providers.map((p) => (\r\n                        <MenuItem key={p} value={p}>\r\n                          {p}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  options={options}\r\n                  getOptionLabel={(option) => option.firstName || \"\"}\r\n                  inputValue={formData?.sfname || \"\"}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    handleChange({\r\n                      // mimic TextField's onChange event\r\n                      target: { name: \"sfname\", value: newInputValue },\r\n                    });\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      type=\"text\"\r\n                      label=\"Spouse's Father's Name\"\r\n                      value={formData?.sfname}\r\n                      name=\"sfname\"\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                      onFocus={() => setActiveField(\"sfname\")}\r\n                      error={!!formDataError?.sfname}\r\n                      helperText={formDataError?.sfname}\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <EtDatePicker\r\n                  key={formData?.vdate || \"vdate-empty\"}\r\n                  label=\"Visit Date\"\r\n                  name=\"vdate\"\r\n                  value={formData?.vdate ? new Date(formData?.vdate) : \"\"}\r\n                  onChange={(e) => handleChangeTime(\"vdate\", e)}\r\n                  sx={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <TextField\r\n                  select\r\n                  label=\"Departments\"\r\n                  value={formData.dep}\r\n                  name=\"dep\"\r\n                  fullWidth\r\n                  required\r\n                  error={!!formDataError?.dep}\r\n                  helperText={formDataError?.dep}\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    min: 0, // Prevents negative values\r\n                    step: \"any\", // Allows decimal values\r\n                    sx: {\r\n                      \"& .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                        borderColor:\r\n                          theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                      color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                    },\r\n                  }}\r\n                  InputLabelProps={{\r\n                    sx: {\r\n                      color: theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                      \"&.Mui-focused\": {\r\n                        color: theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {Departments.map((d) => (\r\n                    <MenuItem key={d} value={d}>\r\n                      {d}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        );\r\n      case 1:\r\n        return (\r\n          <>\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={2}\r\n              divider={<Divider orientation=\"vertical\" flexItem />}\r\n            >\r\n              {/* Left Section */}\r\n              <Box flex={1}>\r\n                <Typography gutterBottom variant=\"subtitle1\" fontWeight=\"bold\">\r\n                  Patient Current Address\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      select\r\n                      value={formData.region}\r\n                      name=\"region\"\r\n                      onChange={handleChange}\r\n                      label=\"Region\"\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.region}\r\n                      helperText={formDataError?.region}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    >\r\n                      {ethiopianRegions.map((r) => (\r\n                        <MenuItem key={r} value={r}>\r\n                          {r}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Woreda/Subcity\"\r\n                      value={formData?.woreda}\r\n                      name=\"woreda\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.woreda}\r\n                      helperText={formDataError?.woreda}\r\n                      required\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Kebele\"\r\n                      value={formData?.kebele}\r\n                      name=\"kebele\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.kebele}\r\n                      helperText={formDataError?.kebele}\r\n                      required\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"House #/Peasant Association#\"\r\n                      value={formData.hn}\r\n                      name=\"hn\"\r\n                      onChange={handleChange}\r\n                      error={!!formDataError?.hn}\r\n                      helperText={formDataError?.hn}\r\n                      fullWidth\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Address Details\"\r\n                      multiline\r\n                      value={formData?.addD}\r\n                      name=\"addD\"\r\n                      onChange={handleChange}\r\n                      rows={4}\r\n                      fullWidth\r\n                      error={!!formDataError?.addD}\r\n                      helperText={formDataError?.addD}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Phone\"\r\n                      value={formData?.phone}\r\n                      name=\"phone\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.phone}\r\n                      helperText={formDataError?.phone}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Mobile Phone\"\r\n                      value={formData?.mobile}\r\n                      name=\"mobile\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.mobile}\r\n                      helperText={formDataError?.mobile}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n\r\n              {/* Right Section */}\r\n              <Box flex={1}>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\r\n                  Next of Kin\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      select\r\n                      value={formData.nregion}\r\n                      name=\"nregion\"\r\n                      onChange={handleChange}\r\n                      label=\"Region\"\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.nregion}\r\n                      helperText={formDataError?.nregion}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    >\r\n                      {ethiopianRegions.map((r) => (\r\n                        <MenuItem key={r} value={r}>\r\n                          {r}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Woreda/Subcity\"\r\n                      value={formData?.nworeda}\r\n                      name=\"nworeda\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.nworeda}\r\n                      helperText={formDataError?.nworeda}\r\n                      required\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Kebele\"\r\n                      value={formData?.nkebele}\r\n                      name=\"nkebele\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      required\r\n                      error={!!formDataError?.nkebele}\r\n                      helperText={formDataError?.nkebele}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"House #/Peasant Association#\"\r\n                      value={formData?.nhn}\r\n                      name=\"nhn\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.nhn}\r\n                      helperText={formDataError?.nhn}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Address Details\"\r\n                      value={formData?.naddD}\r\n                      name=\"naddD\"\r\n                      onChange={handleChange}\r\n                      multiline\r\n                      rows={4}\r\n                      fullWidth\r\n                      error={!!formDataError?.naddD}\r\n                      helperText={formDataError?.naddD}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Phone\"\r\n                      value={formData.nphone}\r\n                      name=\"nphone\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.nphone}\r\n                      helperText={formDataError?.nphone}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      label=\"Mobile Phone\"\r\n                      value={formData?.nmobile}\r\n                      name=\"nmobile\"\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      error={!!formDataError?.nmobile}\r\n                      helperText={formDataError?.nmobile}\r\n                      InputProps={{\r\n                        min: 0, // Prevents negative values\r\n                        step: \"any\", // Allows decimal values\r\n                        sx: {\r\n                          \"& .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                            borderColor:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                        },\r\n                      }}\r\n                      InputLabelProps={{\r\n                        sx: {\r\n                          color:\r\n                            theme.palette.mode === \"dark\" ? \"#ccc\" : \"#555\",\r\n                          \"&.Mui-focused\": {\r\n                            color:\r\n                              theme.palette.mode === \"dark\" ? \"#fff\" : \"#000\",\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Stack>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Box\r\n          sx={{\r\n            mx: \"auto\",\r\n            p: 3,\r\n            marginInline: \"15px\",\r\n            border: \"1px solid #ccc\",\r\n            borderRadius: 2,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Patient Registration Form\r\n          </Typography>\r\n          <Stepper\r\n            activeStep={activeStep}\r\n            alternativeLabel\r\n            sx={{\r\n              padding: 2,\r\n              \"& .MuiStepLabel-label\": {\r\n                color: \"text.primary\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"1rem\",\r\n              },\r\n              \"& .MuiStepIcon-root.Mui-active\": {\r\n                color:\r\n                  theme.palette.mode === \"light\"\r\n                    ? theme.palette.primary.main\r\n                    : theme.palette.secondary.main,\r\n              },\r\n              \"& .MuiStepIcon-root.Mui-completed\": {\r\n                color: theme.palette.success.main,\r\n              },\r\n              \"& .MuiStepIcon-root\": {\r\n                fontSize: 28,\r\n              },\r\n            }}\r\n          >\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n\r\n          <Box mt={3}>{renderStepContent(activeStep)}</Box>\r\n          {/* Buttons */}\r\n          <Box\r\n            sx={{\r\n              mt: 3,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              gap: 2,\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={activeStep === 0}\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n              onClick={handleBack}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color={theme.palette.mode === \"light\" ? \"primary\" : \"secondary\"}\r\n              disabled={loading}\r\n              onClick={handleNext}\r\n            >\r\n              {loading ? (\r\n                <CircularProgress size={24} color=\"inherit\" />\r\n              ) : activeStep === steps.length - 1 && !formData?.isUpdate ? (\r\n                \"Submit\"\r\n              ) : activeStep === steps.length - 1 && formData?.isUpdate ? (\r\n                \"Update\"\r\n              ) : (\r\n                \"Next\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={() => handleCancel()}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\nexport default PatientRegistration;\r\n"],"names":["tokenvalue","getTokenValue","steps","genders","Religions","Departments","Providers","MultipleB","HighestE","occupationList","Marital","ethiopianRegions","initialState","fname","dob","edu","fatname","pbirth","occ","gfname","mbirth","mstatus","maname","religion","sname","sfname","gender","providers","vdate","dep","mrn","region","nregion","woreda","nworeda","kebele","nkebele","hn","nhn","addD","naddD","phone","nphone","mobile","nmobile","isUpdate","controller","state","action","name","_objectSpread","values","error","console","controllerError","formData","setFormData","useReducer","formDataError","setFormDataError","activeStep","setActiveStep","useState","checkLoading","setCheckLoading","loading","setLoading","lastCardNumberRef","useRef","activeField","setActiveField","React","options","setOptions","theme","useTheme","useEffect","delayDebounceFn","setTimeout","async","currentValue","length","_res$data","_res$data$data","_res$data$data$value","res","api","get","concat","mod","data","value","map","item","index","id","firstName","newMod","filter","self","findIndex","t","fetchPatients","clearTimeout","handleChangeTime","fieldName","selectedDate","jsDate","Date","isNaN","getTime","toast","tzOffsetMinutes","getTimezoneOffset","offsetSign","offsetHours","String","Math","floor","abs","padStart","offsetMinutes","formattedDate","toISOString","slice","replace","finalDateTime","handleChange","e","target","validateName","onlyLetterCheck","letterNumberCheck","current","mrnCheck","info","phoneCheck","validatePhoneNumber","emptyCheck","test","startsWith","_jsxs","_Fragment","children","_jsx","Box","sx","mx","p","marginInline","border","borderRadius","Typography","variant","gutterBottom","Stepper","alternativeLabel","padding","color","fontWeight","fontSize","palette","mode","primary","main","secondary","success","label","Step","StepLabel","mt","step","Grid","xs","sm","md","display","justifyContent","alignItems","TextField","type","onChange","onBlurCapture","_formDataError$mrn","_formData$mrn","_formData$mrn2","_response$data","_response$data$data","_response$data$data$v","response","put","patientCardNumber","_response$data2","_response$data2$data","renamedData","patientFirstName","patientMiddleName","patientLastName","patientMotherName","patientDOB","patientGender","patientReligion","patientPlaceofbirth","multiplebirth","appointment","patientHouseNo","patientKinHouseNo","patientPhoneNumber","patientOccupation","department","patientEducationlevel","patientMaritalstatus","patientSpouseFirstName","patientSpouselastName","patientVisitingDate","patientRegion","patientWoreda","patientKebele","patientAddressDetail","patientPhone","patientKinRegion","patientKinWoreda","patientKinKebele","patientKinAddressDetail","patientKinPhone","patientKinMobile","_error$response2","_error$response2$data","msg","handleCheck","helperText","required","InputProps","min","borderColor","InputLabelProps","marginLeft","CircularProgress","size","style","margin","container","spacing","Autocomplete","freeSolo","getOptionLabel","option","inputValue","onInputChange","event","newInputValue","renderInput","params","onFocus","fullWidth","EtDatePicker","includes","width","select","he","MenuItem","ol","mb","ms","r","g","direction","d","Stack","divider","Divider","orientation","flexItem","flex","multiline","rows","renderStepContent","gap","Button","disabled","onClick","handleBack","prev","step1Fields","step2Fields","requiredMessage","errorFixMessage","isEmpty","field","hasStep1Empty","some","hasStep2Empty","hasFieldErrors","Object","Boolean","_formData$dob","_formData$vdate","_formData$vdate2","_Object$values","_response","err","payload","Number","iscreadituser","iscbhiuser","patientRegisteredBy","patientChangedBy","post","_error$response","_error$response$data","ToastContainer"],"sourceRoot":""}